
DHT11.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004ebc  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000428  08005060  08005060  00015060  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005488  08005488  000201d0  2**0
                  CONTENTS
  4 .ARM          00000000  08005488  08005488  000201d0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005488  08005488  000201d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005488  08005488  00015488  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800548c  0800548c  0001548c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d0  20000000  08005490  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001d4  200001d0  08005660  000201d0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200003a4  08005660  000203a4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201d0  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020200  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002155  00000000  00000000  00020243  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000086f  00000000  00000000  00022398  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000308  00000000  00000000  00022c08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000227  00000000  00000000  00022f10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00015815  00000000  00000000  00023137  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000367a  00000000  00000000  0003894c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008542d  00000000  00000000  0003bfc6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00001f00  00000000  00000000  000c13f4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005a  00000000  00000000  000c32f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001d0 	.word	0x200001d0
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08005044 	.word	0x08005044

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001d4 	.word	0x200001d4
 80001dc:	08005044 	.word	0x08005044

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2f>:
 8000bb8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bbc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bc0:	bf24      	itt	cs
 8000bc2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bc6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bca:	d90d      	bls.n	8000be8 <__aeabi_d2f+0x30>
 8000bcc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000bd0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bd4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bd8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000bdc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000be0:	bf08      	it	eq
 8000be2:	f020 0001 	biceq.w	r0, r0, #1
 8000be6:	4770      	bx	lr
 8000be8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000bec:	d121      	bne.n	8000c32 <__aeabi_d2f+0x7a>
 8000bee:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000bf2:	bfbc      	itt	lt
 8000bf4:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000bf8:	4770      	bxlt	lr
 8000bfa:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000bfe:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c02:	f1c2 0218 	rsb	r2, r2, #24
 8000c06:	f1c2 0c20 	rsb	ip, r2, #32
 8000c0a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c0e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c12:	bf18      	it	ne
 8000c14:	f040 0001 	orrne.w	r0, r0, #1
 8000c18:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c1c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c20:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c24:	ea40 000c 	orr.w	r0, r0, ip
 8000c28:	fa23 f302 	lsr.w	r3, r3, r2
 8000c2c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c30:	e7cc      	b.n	8000bcc <__aeabi_d2f+0x14>
 8000c32:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c36:	d107      	bne.n	8000c48 <__aeabi_d2f+0x90>
 8000c38:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c3c:	bf1e      	ittt	ne
 8000c3e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c42:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c46:	4770      	bxne	lr
 8000c48:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c4c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c50:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c54:	4770      	bx	lr
 8000c56:	bf00      	nop

08000c58 <main>:
void delay_ms(uint32_t ms);
// ==== Bộ đệm ====
uint8_t rx_buffer[100];

// ==== main ====
int main(void) {
 8000c58:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8000c5c:	b0c0      	sub	sp, #256	; 0x100
 8000c5e:	af0c      	add	r7, sp, #48	; 0x30
    SystemCoreClockUpdate();
 8000c60:	f000 fddc 	bl	800181c <SystemCoreClockUpdate>
    GPIO_Init();
 8000c64:	f000 f9da 	bl	800101c <GPIO_Init>
    USART6_Init();
 8000c68:	f000 fa2e 	bl	80010c8 <USART6_Init>
    UART2_Init();   // UART2: Gửi tới LabVIEW (qua USB-UART converter)
 8000c6c:	f000 fa46 	bl	80010fc <UART2_Init>
    UART1_Init();   // UART1: Gửi tới ESP32
 8000c70:	f000 fa5e 	bl	8001130 <UART1_Init>
    TIM10_Init();
 8000c74:	f000 fb88 	bl	8001388 <TIM10_Init>

    GPIOA->BSRR = GPIO_BSRR_BR_0; // DE = LOW
 8000c78:	4ba8      	ldr	r3, [pc, #672]	; (8000f1c <main+0x2c4>)
 8000c7a:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8000c7e:	619a      	str	r2, [r3, #24]

    uint8_t current_addr = 0x01;
 8000c80:	2301      	movs	r3, #1
 8000c82:	f887 30cf 	strb.w	r3, [r7, #207]	; 0xcf
    float t1 = 0, h1 = 0, t2 = 0, h2 = 0, t3 = 0, h3 = 0;
 8000c86:	f04f 0300 	mov.w	r3, #0
 8000c8a:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8000c8e:	f04f 0300 	mov.w	r3, #0
 8000c92:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8000c96:	f04f 0300 	mov.w	r3, #0
 8000c9a:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8000c9e:	f04f 0300 	mov.w	r3, #0
 8000ca2:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
 8000ca6:	f04f 0300 	mov.w	r3, #0
 8000caa:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8000cae:	f04f 0300 	mov.w	r3, #0
 8000cb2:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
    int has_data_1 = 0, has_data_2 = 0, has_data_3 = 0;
 8000cb6:	2300      	movs	r3, #0
 8000cb8:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8000cbc:	2300      	movs	r3, #0
 8000cbe:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8000cc2:	2300      	movs	r3, #0
 8000cc4:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0

    while (1) {
        if (current_addr == 0x03) {
 8000cc8:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 8000ccc:	2b03      	cmp	r3, #3
 8000cce:	d152      	bne.n	8000d76 <main+0x11e>
            // Đọc dữ liệu từ DHT22 trực tiếp nối với STM32
            if (DHT22_Read(&t3, &h3)) {
 8000cd0:	f107 0298 	add.w	r2, r7, #152	; 0x98
 8000cd4:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8000cd8:	4611      	mov	r1, r2
 8000cda:	4618      	mov	r0, r3
 8000cdc:	f000 fb96 	bl	800140c <DHT22_Read>
 8000ce0:	4603      	mov	r3, r0
 8000ce2:	2b00      	cmp	r3, #0
 8000ce4:	f000 8109 	beq.w	8000efa <main+0x2a2>
                char status = 'n';
 8000ce8:	236e      	movs	r3, #110	; 0x6e
 8000cea:	f887 30af 	strb.w	r3, [r7, #175]	; 0xaf
                if (t3 > 30.0f) status = 'a';
 8000cee:	edd7 7a27 	vldr	s15, [r7, #156]	; 0x9c
 8000cf2:	eeb3 7a0e 	vmov.f32	s14, #62	; 0x41f00000  30.0
 8000cf6:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000cfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000cfe:	dd03      	ble.n	8000d08 <main+0xb0>
 8000d00:	2361      	movs	r3, #97	; 0x61
 8000d02:	f887 30af 	strb.w	r3, [r7, #175]	; 0xaf
 8000d06:	e00b      	b.n	8000d20 <main+0xc8>
                else if (h3 > 70.0f) status = 's';
 8000d08:	edd7 7a26 	vldr	s15, [r7, #152]	; 0x98
 8000d0c:	ed9f 7a84 	vldr	s14, [pc, #528]	; 8000f20 <main+0x2c8>
 8000d10:	eef4 7ac7 	vcmpe.f32	s15, s14
 8000d14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000d18:	dd02      	ble.n	8000d20 <main+0xc8>
 8000d1a:	2373      	movs	r3, #115	; 0x73
 8000d1c:	f887 30af 	strb.w	r3, [r7, #175]	; 0xaf

                char msg[64];
                snprintf(msg, sizeof(msg), "ID:03,T:%.1f H:%.1f,%c\n", t3, h3, status);
 8000d20:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8000d24:	4618      	mov	r0, r3
 8000d26:	f7ff fc17 	bl	8000558 <__aeabi_f2d>
 8000d2a:	4604      	mov	r4, r0
 8000d2c:	460d      	mov	r5, r1
 8000d2e:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8000d32:	4618      	mov	r0, r3
 8000d34:	f7ff fc10 	bl	8000558 <__aeabi_f2d>
 8000d38:	4602      	mov	r2, r0
 8000d3a:	460b      	mov	r3, r1
 8000d3c:	f897 10af 	ldrb.w	r1, [r7, #175]	; 0xaf
 8000d40:	f107 0010 	add.w	r0, r7, #16
 8000d44:	9104      	str	r1, [sp, #16]
 8000d46:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8000d4a:	e9cd 4500 	strd	r4, r5, [sp]
 8000d4e:	4a75      	ldr	r2, [pc, #468]	; (8000f24 <main+0x2cc>)
 8000d50:	2140      	movs	r1, #64	; 0x40
 8000d52:	f001 fb37 	bl	80023c4 <sniprintf>
                UART1_Transmit((uint8_t*)msg, strlen(msg));
 8000d56:	f107 0310 	add.w	r3, r7, #16
 8000d5a:	4618      	mov	r0, r3
 8000d5c:	f7ff fa90 	bl	8000280 <strlen>
 8000d60:	4602      	mov	r2, r0
 8000d62:	f107 0310 	add.w	r3, r7, #16
 8000d66:	4611      	mov	r1, r2
 8000d68:	4618      	mov	r0, r3
 8000d6a:	f000 fa27 	bl	80011bc <UART1_Transmit>
                has_data_3 = 1;
 8000d6e:	2301      	movs	r3, #1
 8000d70:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8000d74:	e0c1      	b.n	8000efa <main+0x2a2>
            }
        } else {
            // Gửi lệnh đọc tới Arduino
            GPIOA->BSRR = GPIO_BSRR_BS_0; // DE = HIGH
 8000d76:	4b69      	ldr	r3, [pc, #420]	; (8000f1c <main+0x2c4>)
 8000d78:	2201      	movs	r2, #1
 8000d7a:	619a      	str	r2, [r3, #24]
            Send_Command(current_addr, 'R');
 8000d7c:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 8000d80:	2152      	movs	r1, #82	; 0x52
 8000d82:	4618      	mov	r0, r3
 8000d84:	f000 fa46 	bl	8001214 <Send_Command>
            while (!(USART6->SR & USART_SR_TC));
 8000d88:	bf00      	nop
 8000d8a:	4b67      	ldr	r3, [pc, #412]	; (8000f28 <main+0x2d0>)
 8000d8c:	681b      	ldr	r3, [r3, #0]
 8000d8e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000d92:	2b00      	cmp	r3, #0
 8000d94:	d0f9      	beq.n	8000d8a <main+0x132>
            GPIOA->BSRR = GPIO_BSRR_BR_0; // DE = LOW
 8000d96:	4b61      	ldr	r3, [pc, #388]	; (8000f1c <main+0x2c4>)
 8000d98:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8000d9c:	619a      	str	r2, [r3, #24]

            int len = Receive_Response((char*)rx_buffer, sizeof(rx_buffer));
 8000d9e:	2164      	movs	r1, #100	; 0x64
 8000da0:	4862      	ldr	r0, [pc, #392]	; (8000f2c <main+0x2d4>)
 8000da2:	f000 fa8d 	bl	80012c0 <Receive_Response>
 8000da6:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
            if (len > 0) {
 8000daa:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8000dae:	2b00      	cmp	r3, #0
 8000db0:	f340 80a3 	ble.w	8000efa <main+0x2a2>
                rx_buffer[len] = '\0';
 8000db4:	4a5d      	ldr	r2, [pc, #372]	; (8000f2c <main+0x2d4>)
 8000db6:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8000dba:	4413      	add	r3, r2
 8000dbc:	2200      	movs	r2, #0
 8000dbe:	701a      	strb	r2, [r3, #0]

                float temp = 0, humi = 0;
 8000dc0:	f04f 0300 	mov.w	r3, #0
 8000dc4:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8000dc8:	f04f 0300 	mov.w	r3, #0
 8000dcc:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
                char *t_ptr = strstr((char*)rx_buffer, "T:");
 8000dd0:	4957      	ldr	r1, [pc, #348]	; (8000f30 <main+0x2d8>)
 8000dd2:	4856      	ldr	r0, [pc, #344]	; (8000f2c <main+0x2d4>)
 8000dd4:	f001 fba3 	bl	800251e <strstr>
 8000dd8:	f8c7 00a4 	str.w	r0, [r7, #164]	; 0xa4
                char *h_ptr = strstr((char*)rx_buffer, "H:");
 8000ddc:	4955      	ldr	r1, [pc, #340]	; (8000f34 <main+0x2dc>)
 8000dde:	4853      	ldr	r0, [pc, #332]	; (8000f2c <main+0x2d4>)
 8000de0:	f001 fb9d 	bl	800251e <strstr>
 8000de4:	f8c7 00a0 	str.w	r0, [r7, #160]	; 0xa0
                char status = 'n';
 8000de8:	236e      	movs	r3, #110	; 0x6e
 8000dea:	f887 30ae 	strb.w	r3, [r7, #174]	; 0xae
                if (len >= 2) status = rx_buffer[len - 2]; // Lấy ký tự cảnh báo trước '\n'
 8000dee:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8000df2:	2b01      	cmp	r3, #1
 8000df4:	dd06      	ble.n	8000e04 <main+0x1ac>
 8000df6:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8000dfa:	3b02      	subs	r3, #2
 8000dfc:	4a4b      	ldr	r2, [pc, #300]	; (8000f2c <main+0x2d4>)
 8000dfe:	5cd3      	ldrb	r3, [r2, r3]
 8000e00:	f887 30ae 	strb.w	r3, [r7, #174]	; 0xae

                if (t_ptr && h_ptr) {
 8000e04:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8000e08:	2b00      	cmp	r3, #0
 8000e0a:	d076      	beq.n	8000efa <main+0x2a2>
 8000e0c:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8000e10:	2b00      	cmp	r3, #0
 8000e12:	d072      	beq.n	8000efa <main+0x2a2>
                    if (sscanf(t_ptr, "T:%f", &temp) == 1 &&
 8000e14:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8000e18:	461a      	mov	r2, r3
 8000e1a:	4947      	ldr	r1, [pc, #284]	; (8000f38 <main+0x2e0>)
 8000e1c:	f8d7 00a4 	ldr.w	r0, [r7, #164]	; 0xa4
 8000e20:	f001 fb04 	bl	800242c <siscanf>
 8000e24:	4603      	mov	r3, r0
 8000e26:	2b01      	cmp	r3, #1
 8000e28:	d167      	bne.n	8000efa <main+0x2a2>
                        sscanf(h_ptr, "H:%f", &humi) == 1) {
 8000e2a:	f107 0390 	add.w	r3, r7, #144	; 0x90
 8000e2e:	461a      	mov	r2, r3
 8000e30:	4942      	ldr	r1, [pc, #264]	; (8000f3c <main+0x2e4>)
 8000e32:	f8d7 00a0 	ldr.w	r0, [r7, #160]	; 0xa0
 8000e36:	f001 faf9 	bl	800242c <siscanf>
 8000e3a:	4603      	mov	r3, r0
                    if (sscanf(t_ptr, "T:%f", &temp) == 1 &&
 8000e3c:	2b01      	cmp	r3, #1
 8000e3e:	d15c      	bne.n	8000efa <main+0x2a2>
                        char msg[64];
                        if (current_addr == 0x01) {
 8000e40:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 8000e44:	2b01      	cmp	r3, #1
 8000e46:	d124      	bne.n	8000e92 <main+0x23a>
                            t1 = temp;
 8000e48:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8000e4c:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
                            h1 = humi;
 8000e50:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8000e54:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
                            has_data_1 = 1;
 8000e58:	2301      	movs	r3, #1
 8000e5a:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
                            snprintf(msg, sizeof(msg), "ID:01,T:%.1f H:%.1f,%c\n", t1, h1, status);
 8000e5e:	f8d7 00c8 	ldr.w	r0, [r7, #200]	; 0xc8
 8000e62:	f7ff fb79 	bl	8000558 <__aeabi_f2d>
 8000e66:	4604      	mov	r4, r0
 8000e68:	460d      	mov	r5, r1
 8000e6a:	f8d7 00c4 	ldr.w	r0, [r7, #196]	; 0xc4
 8000e6e:	f7ff fb73 	bl	8000558 <__aeabi_f2d>
 8000e72:	4602      	mov	r2, r0
 8000e74:	460b      	mov	r3, r1
 8000e76:	f897 10ae 	ldrb.w	r1, [r7, #174]	; 0xae
 8000e7a:	f107 0010 	add.w	r0, r7, #16
 8000e7e:	9104      	str	r1, [sp, #16]
 8000e80:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8000e84:	e9cd 4500 	strd	r4, r5, [sp]
 8000e88:	4a2d      	ldr	r2, [pc, #180]	; (8000f40 <main+0x2e8>)
 8000e8a:	2140      	movs	r1, #64	; 0x40
 8000e8c:	f001 fa9a 	bl	80023c4 <sniprintf>
 8000e90:	e027      	b.n	8000ee2 <main+0x28a>
                        } else if (current_addr == 0x02) {
 8000e92:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 8000e96:	2b02      	cmp	r3, #2
 8000e98:	d123      	bne.n	8000ee2 <main+0x28a>
                            t2 = temp;
 8000e9a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8000e9e:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
                            h2 = humi;
 8000ea2:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8000ea6:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
                            has_data_2 = 1;
 8000eaa:	2301      	movs	r3, #1
 8000eac:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
                            snprintf(msg, sizeof(msg), "ID:02,T:%.1f H:%.1f,%c\n", t2, h2, status);
 8000eb0:	f8d7 00c0 	ldr.w	r0, [r7, #192]	; 0xc0
 8000eb4:	f7ff fb50 	bl	8000558 <__aeabi_f2d>
 8000eb8:	4604      	mov	r4, r0
 8000eba:	460d      	mov	r5, r1
 8000ebc:	f8d7 00bc 	ldr.w	r0, [r7, #188]	; 0xbc
 8000ec0:	f7ff fb4a 	bl	8000558 <__aeabi_f2d>
 8000ec4:	4602      	mov	r2, r0
 8000ec6:	460b      	mov	r3, r1
 8000ec8:	f897 10ae 	ldrb.w	r1, [r7, #174]	; 0xae
 8000ecc:	f107 0010 	add.w	r0, r7, #16
 8000ed0:	9104      	str	r1, [sp, #16]
 8000ed2:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8000ed6:	e9cd 4500 	strd	r4, r5, [sp]
 8000eda:	4a1a      	ldr	r2, [pc, #104]	; (8000f44 <main+0x2ec>)
 8000edc:	2140      	movs	r1, #64	; 0x40
 8000ede:	f001 fa71 	bl	80023c4 <sniprintf>
                        }
                        UART1_Transmit((uint8_t*)msg, strlen(msg));
 8000ee2:	f107 0310 	add.w	r3, r7, #16
 8000ee6:	4618      	mov	r0, r3
 8000ee8:	f7ff f9ca 	bl	8000280 <strlen>
 8000eec:	4602      	mov	r2, r0
 8000eee:	f107 0310 	add.w	r3, r7, #16
 8000ef2:	4611      	mov	r1, r2
 8000ef4:	4618      	mov	r0, r3
 8000ef6:	f000 f961 	bl	80011bc <UART1_Transmit>
                }
            }
        }

        // Đổi thiết bị
        if (current_addr == 0x01) current_addr = 0x02;
 8000efa:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 8000efe:	2b01      	cmp	r3, #1
 8000f00:	d103      	bne.n	8000f0a <main+0x2b2>
 8000f02:	2302      	movs	r3, #2
 8000f04:	f887 30cf 	strb.w	r3, [r7, #207]	; 0xcf
 8000f08:	e021      	b.n	8000f4e <main+0x2f6>
        else if (current_addr == 0x02) current_addr = 0x03;
 8000f0a:	f897 30cf 	ldrb.w	r3, [r7, #207]	; 0xcf
 8000f0e:	2b02      	cmp	r3, #2
 8000f10:	d11a      	bne.n	8000f48 <main+0x2f0>
 8000f12:	2303      	movs	r3, #3
 8000f14:	f887 30cf 	strb.w	r3, [r7, #207]	; 0xcf
 8000f18:	e019      	b.n	8000f4e <main+0x2f6>
 8000f1a:	bf00      	nop
 8000f1c:	40020000 	.word	0x40020000
 8000f20:	428c0000 	.word	0x428c0000
 8000f24:	08005060 	.word	0x08005060
 8000f28:	40011400 	.word	0x40011400
 8000f2c:	200001ec 	.word	0x200001ec
 8000f30:	08005078 	.word	0x08005078
 8000f34:	0800507c 	.word	0x0800507c
 8000f38:	08005080 	.word	0x08005080
 8000f3c:	08005088 	.word	0x08005088
 8000f40:	08005090 	.word	0x08005090
 8000f44:	080050a8 	.word	0x080050a8
        else current_addr = 0x01;
 8000f48:	2301      	movs	r3, #1
 8000f4a:	f887 30cf 	strb.w	r3, [r7, #207]	; 0xcf

        // Khi đủ dữ liệu từ 3 thiết bị thì gửi lên LabVIEW
        if (has_data_1 && has_data_2 && has_data_3) {
 8000f4e:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 8000f52:	2b00      	cmp	r3, #0
 8000f54:	d05a      	beq.n	800100c <main+0x3b4>
 8000f56:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8000f5a:	2b00      	cmp	r3, #0
 8000f5c:	d056      	beq.n	800100c <main+0x3b4>
 8000f5e:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8000f62:	2b00      	cmp	r3, #0
 8000f64:	d052      	beq.n	800100c <main+0x3b4>
            char msg[128];
            snprintf(msg, sizeof(msg), "%.1f,%.1f,%.1f,%.1f,%.1f,%.1f\r\n",
 8000f66:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8000f6a:	4618      	mov	r0, r3
 8000f6c:	f7ff faf4 	bl	8000558 <__aeabi_f2d>
 8000f70:	4604      	mov	r4, r0
 8000f72:	460d      	mov	r5, r1
 8000f74:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8000f78:	4618      	mov	r0, r3
 8000f7a:	f7ff faed 	bl	8000558 <__aeabi_f2d>
 8000f7e:	4680      	mov	r8, r0
 8000f80:	4689      	mov	r9, r1
 8000f82:	f8d7 00c8 	ldr.w	r0, [r7, #200]	; 0xc8
 8000f86:	f7ff fae7 	bl	8000558 <__aeabi_f2d>
 8000f8a:	4682      	mov	sl, r0
 8000f8c:	468b      	mov	fp, r1
 8000f8e:	f8d7 00c4 	ldr.w	r0, [r7, #196]	; 0xc4
 8000f92:	f7ff fae1 	bl	8000558 <__aeabi_f2d>
 8000f96:	e9c7 0102 	strd	r0, r1, [r7, #8]
 8000f9a:	f8d7 00c0 	ldr.w	r0, [r7, #192]	; 0xc0
 8000f9e:	f7ff fadb 	bl	8000558 <__aeabi_f2d>
 8000fa2:	e9c7 0100 	strd	r0, r1, [r7]
 8000fa6:	f8d7 00bc 	ldr.w	r0, [r7, #188]	; 0xbc
 8000faa:	f7ff fad5 	bl	8000558 <__aeabi_f2d>
 8000fae:	4602      	mov	r2, r0
 8000fb0:	460b      	mov	r3, r1
 8000fb2:	f107 0010 	add.w	r0, r7, #16
 8000fb6:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8000fba:	ed97 7b00 	vldr	d7, [r7]
 8000fbe:	ed8d 7b08 	vstr	d7, [sp, #32]
 8000fc2:	ed97 7b02 	vldr	d7, [r7, #8]
 8000fc6:	ed8d 7b06 	vstr	d7, [sp, #24]
 8000fca:	e9cd ab04 	strd	sl, fp, [sp, #16]
 8000fce:	e9cd 8902 	strd	r8, r9, [sp, #8]
 8000fd2:	e9cd 4500 	strd	r4, r5, [sp]
 8000fd6:	4a10      	ldr	r2, [pc, #64]	; (8001018 <main+0x3c0>)
 8000fd8:	2180      	movs	r1, #128	; 0x80
 8000fda:	f001 f9f3 	bl	80023c4 <sniprintf>
                     t3, h3, t1, h1, t2, h2);
            UART2_Transmit((uint8_t*)msg, strlen(msg));
 8000fde:	f107 0310 	add.w	r3, r7, #16
 8000fe2:	4618      	mov	r0, r3
 8000fe4:	f7ff f94c 	bl	8000280 <strlen>
 8000fe8:	4602      	mov	r2, r0
 8000fea:	f107 0310 	add.w	r3, r7, #16
 8000fee:	4611      	mov	r1, r2
 8000ff0:	4618      	mov	r0, r3
 8000ff2:	f000 f8b7 	bl	8001164 <UART2_Transmit>
            has_data_1 = has_data_2 = has_data_3 = 0;
 8000ff6:	2300      	movs	r3, #0
 8000ff8:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8000ffc:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8001000:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8001004:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8001008:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
        }

        Reset_RS485_Line();
 800100c:	f000 f988 	bl	8001320 <Reset_RS485_Line>
        Delay_Short();
 8001010:	f000 f9a4 	bl	800135c <Delay_Short>
        if (current_addr == 0x03) {
 8001014:	e658      	b.n	8000cc8 <main+0x70>
 8001016:	bf00      	nop
 8001018:	080050c0 	.word	0x080050c0

0800101c <GPIO_Init>:
    }
}

// ===================== Các hàm phụ =========================

void GPIO_Init(void) {
 800101c:	b480      	push	{r7}
 800101e:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOCEN | RCC_AHB1ENR_GPIOBEN;
 8001020:	4b26      	ldr	r3, [pc, #152]	; (80010bc <GPIO_Init+0xa0>)
 8001022:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001024:	4a25      	ldr	r2, [pc, #148]	; (80010bc <GPIO_Init+0xa0>)
 8001026:	f043 0307 	orr.w	r3, r3, #7
 800102a:	6313      	str	r3, [r2, #48]	; 0x30
    // USART6: PC6 (TX), PC7 (RX)
    GPIOC->MODER |= (2 << (6 * 2)) | (2 << (7 * 2));
 800102c:	4b24      	ldr	r3, [pc, #144]	; (80010c0 <GPIO_Init+0xa4>)
 800102e:	681b      	ldr	r3, [r3, #0]
 8001030:	4a23      	ldr	r2, [pc, #140]	; (80010c0 <GPIO_Init+0xa4>)
 8001032:	f443 4320 	orr.w	r3, r3, #40960	; 0xa000
 8001036:	6013      	str	r3, [r2, #0]
    GPIOC->AFR[0] |= (8 << (6 * 4)) | (8 << (7 * 4));
 8001038:	4b21      	ldr	r3, [pc, #132]	; (80010c0 <GPIO_Init+0xa4>)
 800103a:	6a1b      	ldr	r3, [r3, #32]
 800103c:	4a20      	ldr	r2, [pc, #128]	; (80010c0 <GPIO_Init+0xa4>)
 800103e:	f043 4308 	orr.w	r3, r3, #2281701376	; 0x88000000
 8001042:	6213      	str	r3, [r2, #32]
    // UART2: PA2 (TX)
    GPIOA->MODER |= (2 << (2 * 2));
 8001044:	4b1f      	ldr	r3, [pc, #124]	; (80010c4 <GPIO_Init+0xa8>)
 8001046:	681b      	ldr	r3, [r3, #0]
 8001048:	4a1e      	ldr	r2, [pc, #120]	; (80010c4 <GPIO_Init+0xa8>)
 800104a:	f043 0320 	orr.w	r3, r3, #32
 800104e:	6013      	str	r3, [r2, #0]
    GPIOA->AFR[0] |= (7 << (2 * 4));
 8001050:	4b1c      	ldr	r3, [pc, #112]	; (80010c4 <GPIO_Init+0xa8>)
 8001052:	6a1b      	ldr	r3, [r3, #32]
 8001054:	4a1b      	ldr	r2, [pc, #108]	; (80010c4 <GPIO_Init+0xa8>)
 8001056:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 800105a:	6213      	str	r3, [r2, #32]
    // UART1: PA9 (TX)
    GPIOA->MODER |= (2 << (9 * 2));
 800105c:	4b19      	ldr	r3, [pc, #100]	; (80010c4 <GPIO_Init+0xa8>)
 800105e:	681b      	ldr	r3, [r3, #0]
 8001060:	4a18      	ldr	r2, [pc, #96]	; (80010c4 <GPIO_Init+0xa8>)
 8001062:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8001066:	6013      	str	r3, [r2, #0]
    GPIOA->AFR[1] |= (7 << ((9 - 8) * 4));
 8001068:	4b16      	ldr	r3, [pc, #88]	; (80010c4 <GPIO_Init+0xa8>)
 800106a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800106c:	4a15      	ldr	r2, [pc, #84]	; (80010c4 <GPIO_Init+0xa8>)
 800106e:	f043 0370 	orr.w	r3, r3, #112	; 0x70
 8001072:	6253      	str	r3, [r2, #36]	; 0x24
    // DE: PA0
    GPIOA->MODER |= (1 << (0 * 2));
 8001074:	4b13      	ldr	r3, [pc, #76]	; (80010c4 <GPIO_Init+0xa8>)
 8001076:	681b      	ldr	r3, [r3, #0]
 8001078:	4a12      	ldr	r2, [pc, #72]	; (80010c4 <GPIO_Init+0xa8>)
 800107a:	f043 0301 	orr.w	r3, r3, #1
 800107e:	6013      	str	r3, [r2, #0]
    GPIOA->OTYPER &= ~(1 << 0);
 8001080:	4b10      	ldr	r3, [pc, #64]	; (80010c4 <GPIO_Init+0xa8>)
 8001082:	685b      	ldr	r3, [r3, #4]
 8001084:	4a0f      	ldr	r2, [pc, #60]	; (80010c4 <GPIO_Init+0xa8>)
 8001086:	f023 0301 	bic.w	r3, r3, #1
 800108a:	6053      	str	r3, [r2, #4]
    GPIOA->PUPDR &= ~(3 << 0);
 800108c:	4b0d      	ldr	r3, [pc, #52]	; (80010c4 <GPIO_Init+0xa8>)
 800108e:	68db      	ldr	r3, [r3, #12]
 8001090:	4a0c      	ldr	r2, [pc, #48]	; (80010c4 <GPIO_Init+0xa8>)
 8001092:	f023 0303 	bic.w	r3, r3, #3
 8001096:	60d3      	str	r3, [r2, #12]
    // DHT: PA0 dùng input pull-up
    GPIOA->MODER &= ~(3 << 0);
 8001098:	4b0a      	ldr	r3, [pc, #40]	; (80010c4 <GPIO_Init+0xa8>)
 800109a:	681b      	ldr	r3, [r3, #0]
 800109c:	4a09      	ldr	r2, [pc, #36]	; (80010c4 <GPIO_Init+0xa8>)
 800109e:	f023 0303 	bic.w	r3, r3, #3
 80010a2:	6013      	str	r3, [r2, #0]
    GPIOA->PUPDR |= (1 << 0);
 80010a4:	4b07      	ldr	r3, [pc, #28]	; (80010c4 <GPIO_Init+0xa8>)
 80010a6:	68db      	ldr	r3, [r3, #12]
 80010a8:	4a06      	ldr	r2, [pc, #24]	; (80010c4 <GPIO_Init+0xa8>)
 80010aa:	f043 0301 	orr.w	r3, r3, #1
 80010ae:	60d3      	str	r3, [r2, #12]
}
 80010b0:	bf00      	nop
 80010b2:	46bd      	mov	sp, r7
 80010b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010b8:	4770      	bx	lr
 80010ba:	bf00      	nop
 80010bc:	40023800 	.word	0x40023800
 80010c0:	40020800 	.word	0x40020800
 80010c4:	40020000 	.word	0x40020000

080010c8 <USART6_Init>:

void USART6_Init(void) {
 80010c8:	b480      	push	{r7}
 80010ca:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_USART6EN;
 80010cc:	4b09      	ldr	r3, [pc, #36]	; (80010f4 <USART6_Init+0x2c>)
 80010ce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80010d0:	4a08      	ldr	r2, [pc, #32]	; (80010f4 <USART6_Init+0x2c>)
 80010d2:	f043 0320 	orr.w	r3, r3, #32
 80010d6:	6453      	str	r3, [r2, #68]	; 0x44
    USART6->BRR = (104 << 4) | 3; // 9600 baud @16MHz
 80010d8:	4b07      	ldr	r3, [pc, #28]	; (80010f8 <USART6_Init+0x30>)
 80010da:	f240 6283 	movw	r2, #1667	; 0x683
 80010de:	609a      	str	r2, [r3, #8]
    USART6->CR1 = USART_CR1_UE | USART_CR1_TE | USART_CR1_RE;
 80010e0:	4b05      	ldr	r3, [pc, #20]	; (80010f8 <USART6_Init+0x30>)
 80010e2:	f242 020c 	movw	r2, #8204	; 0x200c
 80010e6:	60da      	str	r2, [r3, #12]
}
 80010e8:	bf00      	nop
 80010ea:	46bd      	mov	sp, r7
 80010ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010f0:	4770      	bx	lr
 80010f2:	bf00      	nop
 80010f4:	40023800 	.word	0x40023800
 80010f8:	40011400 	.word	0x40011400

080010fc <UART2_Init>:

void UART2_Init(void) {
 80010fc:	b480      	push	{r7}
 80010fe:	af00      	add	r7, sp, #0
    RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 8001100:	4b09      	ldr	r3, [pc, #36]	; (8001128 <UART2_Init+0x2c>)
 8001102:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001104:	4a08      	ldr	r2, [pc, #32]	; (8001128 <UART2_Init+0x2c>)
 8001106:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800110a:	6413      	str	r3, [r2, #64]	; 0x40
    USART2->BRR = (104 << 4) | 3;
 800110c:	4b07      	ldr	r3, [pc, #28]	; (800112c <UART2_Init+0x30>)
 800110e:	f240 6283 	movw	r2, #1667	; 0x683
 8001112:	609a      	str	r2, [r3, #8]
    USART2->CR1 = USART_CR1_UE | USART_CR1_TE;
 8001114:	4b05      	ldr	r3, [pc, #20]	; (800112c <UART2_Init+0x30>)
 8001116:	f242 0208 	movw	r2, #8200	; 0x2008
 800111a:	60da      	str	r2, [r3, #12]
}
 800111c:	bf00      	nop
 800111e:	46bd      	mov	sp, r7
 8001120:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001124:	4770      	bx	lr
 8001126:	bf00      	nop
 8001128:	40023800 	.word	0x40023800
 800112c:	40004400 	.word	0x40004400

08001130 <UART1_Init>:

void UART1_Init(void) {
 8001130:	b480      	push	{r7}
 8001132:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 8001134:	4b09      	ldr	r3, [pc, #36]	; (800115c <UART1_Init+0x2c>)
 8001136:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001138:	4a08      	ldr	r2, [pc, #32]	; (800115c <UART1_Init+0x2c>)
 800113a:	f043 0310 	orr.w	r3, r3, #16
 800113e:	6453      	str	r3, [r2, #68]	; 0x44
    USART1->BRR = (104 << 4) | 3;
 8001140:	4b07      	ldr	r3, [pc, #28]	; (8001160 <UART1_Init+0x30>)
 8001142:	f240 6283 	movw	r2, #1667	; 0x683
 8001146:	609a      	str	r2, [r3, #8]
    USART1->CR1 = USART_CR1_UE | USART_CR1_TE;
 8001148:	4b05      	ldr	r3, [pc, #20]	; (8001160 <UART1_Init+0x30>)
 800114a:	f242 0208 	movw	r2, #8200	; 0x2008
 800114e:	60da      	str	r2, [r3, #12]
}
 8001150:	bf00      	nop
 8001152:	46bd      	mov	sp, r7
 8001154:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001158:	4770      	bx	lr
 800115a:	bf00      	nop
 800115c:	40023800 	.word	0x40023800
 8001160:	40011000 	.word	0x40011000

08001164 <UART2_Transmit>:

void UART2_Transmit(uint8_t *data, uint32_t size) {
 8001164:	b480      	push	{r7}
 8001166:	b085      	sub	sp, #20
 8001168:	af00      	add	r7, sp, #0
 800116a:	6078      	str	r0, [r7, #4]
 800116c:	6039      	str	r1, [r7, #0]
    for (uint32_t i = 0; i < size; i++) {
 800116e:	2300      	movs	r3, #0
 8001170:	60fb      	str	r3, [r7, #12]
 8001172:	e00f      	b.n	8001194 <UART2_Transmit+0x30>
        while (!(USART2->SR & USART_SR_TXE));
 8001174:	bf00      	nop
 8001176:	4b10      	ldr	r3, [pc, #64]	; (80011b8 <UART2_Transmit+0x54>)
 8001178:	681b      	ldr	r3, [r3, #0]
 800117a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800117e:	2b00      	cmp	r3, #0
 8001180:	d0f9      	beq.n	8001176 <UART2_Transmit+0x12>
        USART2->DR = data[i];
 8001182:	687a      	ldr	r2, [r7, #4]
 8001184:	68fb      	ldr	r3, [r7, #12]
 8001186:	4413      	add	r3, r2
 8001188:	781a      	ldrb	r2, [r3, #0]
 800118a:	4b0b      	ldr	r3, [pc, #44]	; (80011b8 <UART2_Transmit+0x54>)
 800118c:	605a      	str	r2, [r3, #4]
    for (uint32_t i = 0; i < size; i++) {
 800118e:	68fb      	ldr	r3, [r7, #12]
 8001190:	3301      	adds	r3, #1
 8001192:	60fb      	str	r3, [r7, #12]
 8001194:	68fa      	ldr	r2, [r7, #12]
 8001196:	683b      	ldr	r3, [r7, #0]
 8001198:	429a      	cmp	r2, r3
 800119a:	d3eb      	bcc.n	8001174 <UART2_Transmit+0x10>
    }
    while (!(USART2->SR & USART_SR_TC));
 800119c:	bf00      	nop
 800119e:	4b06      	ldr	r3, [pc, #24]	; (80011b8 <UART2_Transmit+0x54>)
 80011a0:	681b      	ldr	r3, [r3, #0]
 80011a2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80011a6:	2b00      	cmp	r3, #0
 80011a8:	d0f9      	beq.n	800119e <UART2_Transmit+0x3a>
}
 80011aa:	bf00      	nop
 80011ac:	bf00      	nop
 80011ae:	3714      	adds	r7, #20
 80011b0:	46bd      	mov	sp, r7
 80011b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011b6:	4770      	bx	lr
 80011b8:	40004400 	.word	0x40004400

080011bc <UART1_Transmit>:

void UART1_Transmit(uint8_t *data, uint32_t size) {
 80011bc:	b480      	push	{r7}
 80011be:	b085      	sub	sp, #20
 80011c0:	af00      	add	r7, sp, #0
 80011c2:	6078      	str	r0, [r7, #4]
 80011c4:	6039      	str	r1, [r7, #0]
    for (uint32_t i = 0; i < size; i++) {
 80011c6:	2300      	movs	r3, #0
 80011c8:	60fb      	str	r3, [r7, #12]
 80011ca:	e00f      	b.n	80011ec <UART1_Transmit+0x30>
        while (!(USART1->SR & USART_SR_TXE));
 80011cc:	bf00      	nop
 80011ce:	4b10      	ldr	r3, [pc, #64]	; (8001210 <UART1_Transmit+0x54>)
 80011d0:	681b      	ldr	r3, [r3, #0]
 80011d2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80011d6:	2b00      	cmp	r3, #0
 80011d8:	d0f9      	beq.n	80011ce <UART1_Transmit+0x12>
        USART1->DR = data[i];
 80011da:	687a      	ldr	r2, [r7, #4]
 80011dc:	68fb      	ldr	r3, [r7, #12]
 80011de:	4413      	add	r3, r2
 80011e0:	781a      	ldrb	r2, [r3, #0]
 80011e2:	4b0b      	ldr	r3, [pc, #44]	; (8001210 <UART1_Transmit+0x54>)
 80011e4:	605a      	str	r2, [r3, #4]
    for (uint32_t i = 0; i < size; i++) {
 80011e6:	68fb      	ldr	r3, [r7, #12]
 80011e8:	3301      	adds	r3, #1
 80011ea:	60fb      	str	r3, [r7, #12]
 80011ec:	68fa      	ldr	r2, [r7, #12]
 80011ee:	683b      	ldr	r3, [r7, #0]
 80011f0:	429a      	cmp	r2, r3
 80011f2:	d3eb      	bcc.n	80011cc <UART1_Transmit+0x10>
    }
    while (!(USART1->SR & USART_SR_TC));
 80011f4:	bf00      	nop
 80011f6:	4b06      	ldr	r3, [pc, #24]	; (8001210 <UART1_Transmit+0x54>)
 80011f8:	681b      	ldr	r3, [r3, #0]
 80011fa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80011fe:	2b00      	cmp	r3, #0
 8001200:	d0f9      	beq.n	80011f6 <UART1_Transmit+0x3a>
}
 8001202:	bf00      	nop
 8001204:	bf00      	nop
 8001206:	3714      	adds	r7, #20
 8001208:	46bd      	mov	sp, r7
 800120a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800120e:	4770      	bx	lr
 8001210:	40011000 	.word	0x40011000

08001214 <Send_Command>:

void Log_Message(const char *msg) {
    UART2_Transmit((uint8_t*)msg, strlen(msg));
}

void Send_Command(uint8_t address, char command) {
 8001214:	b480      	push	{r7}
 8001216:	b085      	sub	sp, #20
 8001218:	af00      	add	r7, sp, #0
 800121a:	4603      	mov	r3, r0
 800121c:	460a      	mov	r2, r1
 800121e:	71fb      	strb	r3, [r7, #7]
 8001220:	4613      	mov	r3, r2
 8001222:	71bb      	strb	r3, [r7, #6]
    uint8_t packet[2] = {address, command};
 8001224:	79fb      	ldrb	r3, [r7, #7]
 8001226:	723b      	strb	r3, [r7, #8]
 8001228:	79bb      	ldrb	r3, [r7, #6]
 800122a:	727b      	strb	r3, [r7, #9]
    for (int i = 0; i < 2; i++) {
 800122c:	2300      	movs	r3, #0
 800122e:	60fb      	str	r3, [r7, #12]
 8001230:	e010      	b.n	8001254 <Send_Command+0x40>
        while (!(USART6->SR & USART_SR_TXE));
 8001232:	bf00      	nop
 8001234:	4b0c      	ldr	r3, [pc, #48]	; (8001268 <Send_Command+0x54>)
 8001236:	681b      	ldr	r3, [r3, #0]
 8001238:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800123c:	2b00      	cmp	r3, #0
 800123e:	d0f9      	beq.n	8001234 <Send_Command+0x20>
        USART6->DR = packet[i];
 8001240:	f107 0208 	add.w	r2, r7, #8
 8001244:	68fb      	ldr	r3, [r7, #12]
 8001246:	4413      	add	r3, r2
 8001248:	781a      	ldrb	r2, [r3, #0]
 800124a:	4b07      	ldr	r3, [pc, #28]	; (8001268 <Send_Command+0x54>)
 800124c:	605a      	str	r2, [r3, #4]
    for (int i = 0; i < 2; i++) {
 800124e:	68fb      	ldr	r3, [r7, #12]
 8001250:	3301      	adds	r3, #1
 8001252:	60fb      	str	r3, [r7, #12]
 8001254:	68fb      	ldr	r3, [r7, #12]
 8001256:	2b01      	cmp	r3, #1
 8001258:	ddeb      	ble.n	8001232 <Send_Command+0x1e>
    }
}
 800125a:	bf00      	nop
 800125c:	bf00      	nop
 800125e:	3714      	adds	r7, #20
 8001260:	46bd      	mov	sp, r7
 8001262:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001266:	4770      	bx	lr
 8001268:	40011400 	.word	0x40011400

0800126c <USART6_Receive>:

uint8_t USART6_Receive(uint8_t *success) {
 800126c:	b480      	push	{r7}
 800126e:	b085      	sub	sp, #20
 8001270:	af00      	add	r7, sp, #0
 8001272:	6078      	str	r0, [r7, #4]
    uint32_t timeout = 300000;
 8001274:	4b10      	ldr	r3, [pc, #64]	; (80012b8 <USART6_Receive+0x4c>)
 8001276:	60fb      	str	r3, [r7, #12]
    while (!(USART6->SR & USART_SR_RXNE) && timeout--) {
 8001278:	e007      	b.n	800128a <USART6_Receive+0x1e>
        if (timeout == 0) {
 800127a:	68fb      	ldr	r3, [r7, #12]
 800127c:	2b00      	cmp	r3, #0
 800127e:	d104      	bne.n	800128a <USART6_Receive+0x1e>
            *success = 0;
 8001280:	687b      	ldr	r3, [r7, #4]
 8001282:	2200      	movs	r2, #0
 8001284:	701a      	strb	r2, [r3, #0]
            return 0;
 8001286:	2300      	movs	r3, #0
 8001288:	e010      	b.n	80012ac <USART6_Receive+0x40>
    while (!(USART6->SR & USART_SR_RXNE) && timeout--) {
 800128a:	4b0c      	ldr	r3, [pc, #48]	; (80012bc <USART6_Receive+0x50>)
 800128c:	681b      	ldr	r3, [r3, #0]
 800128e:	f003 0320 	and.w	r3, r3, #32
 8001292:	2b00      	cmp	r3, #0
 8001294:	d104      	bne.n	80012a0 <USART6_Receive+0x34>
 8001296:	68fb      	ldr	r3, [r7, #12]
 8001298:	1e5a      	subs	r2, r3, #1
 800129a:	60fa      	str	r2, [r7, #12]
 800129c:	2b00      	cmp	r3, #0
 800129e:	d1ec      	bne.n	800127a <USART6_Receive+0xe>
        }
    }
    *success = 1;
 80012a0:	687b      	ldr	r3, [r7, #4]
 80012a2:	2201      	movs	r2, #1
 80012a4:	701a      	strb	r2, [r3, #0]
    return (uint8_t)(USART6->DR & 0xFF);
 80012a6:	4b05      	ldr	r3, [pc, #20]	; (80012bc <USART6_Receive+0x50>)
 80012a8:	685b      	ldr	r3, [r3, #4]
 80012aa:	b2db      	uxtb	r3, r3
}
 80012ac:	4618      	mov	r0, r3
 80012ae:	3714      	adds	r7, #20
 80012b0:	46bd      	mov	sp, r7
 80012b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012b6:	4770      	bx	lr
 80012b8:	000493e0 	.word	0x000493e0
 80012bc:	40011400 	.word	0x40011400

080012c0 <Receive_Response>:

int Receive_Response(char *buffer, int max_len) {
 80012c0:	b580      	push	{r7, lr}
 80012c2:	b084      	sub	sp, #16
 80012c4:	af00      	add	r7, sp, #0
 80012c6:	6078      	str	r0, [r7, #4]
 80012c8:	6039      	str	r1, [r7, #0]
    int i = 0;
 80012ca:	2300      	movs	r3, #0
 80012cc:	60fb      	str	r3, [r7, #12]
    uint8_t success, c;
    for (; i < max_len - 1; i++) {
 80012ce:	e014      	b.n	80012fa <Receive_Response+0x3a>
        c = USART6_Receive(&success);
 80012d0:	f107 030a 	add.w	r3, r7, #10
 80012d4:	4618      	mov	r0, r3
 80012d6:	f7ff ffc9 	bl	800126c <USART6_Receive>
 80012da:	4603      	mov	r3, r0
 80012dc:	72fb      	strb	r3, [r7, #11]
        if (!success) break;
 80012de:	7abb      	ldrb	r3, [r7, #10]
 80012e0:	2b00      	cmp	r3, #0
 80012e2:	d010      	beq.n	8001306 <Receive_Response+0x46>
        buffer[i] = c;
 80012e4:	68fb      	ldr	r3, [r7, #12]
 80012e6:	687a      	ldr	r2, [r7, #4]
 80012e8:	4413      	add	r3, r2
 80012ea:	7afa      	ldrb	r2, [r7, #11]
 80012ec:	701a      	strb	r2, [r3, #0]
        if (c == '\n') break;
 80012ee:	7afb      	ldrb	r3, [r7, #11]
 80012f0:	2b0a      	cmp	r3, #10
 80012f2:	d00a      	beq.n	800130a <Receive_Response+0x4a>
    for (; i < max_len - 1; i++) {
 80012f4:	68fb      	ldr	r3, [r7, #12]
 80012f6:	3301      	adds	r3, #1
 80012f8:	60fb      	str	r3, [r7, #12]
 80012fa:	683b      	ldr	r3, [r7, #0]
 80012fc:	3b01      	subs	r3, #1
 80012fe:	68fa      	ldr	r2, [r7, #12]
 8001300:	429a      	cmp	r2, r3
 8001302:	dbe5      	blt.n	80012d0 <Receive_Response+0x10>
 8001304:	e002      	b.n	800130c <Receive_Response+0x4c>
        if (!success) break;
 8001306:	bf00      	nop
 8001308:	e000      	b.n	800130c <Receive_Response+0x4c>
        if (c == '\n') break;
 800130a:	bf00      	nop
    }
    buffer[i] = '\0';
 800130c:	68fb      	ldr	r3, [r7, #12]
 800130e:	687a      	ldr	r2, [r7, #4]
 8001310:	4413      	add	r3, r2
 8001312:	2200      	movs	r2, #0
 8001314:	701a      	strb	r2, [r3, #0]
    return i;
 8001316:	68fb      	ldr	r3, [r7, #12]
}
 8001318:	4618      	mov	r0, r3
 800131a:	3710      	adds	r7, #16
 800131c:	46bd      	mov	sp, r7
 800131e:	bd80      	pop	{r7, pc}

08001320 <Reset_RS485_Line>:

void Reset_RS485_Line(void) {
 8001320:	b480      	push	{r7}
 8001322:	b083      	sub	sp, #12
 8001324:	af00      	add	r7, sp, #0
    GPIOA->BSRR = GPIO_BSRR_BR_0;
 8001326:	4b0b      	ldr	r3, [pc, #44]	; (8001354 <Reset_RS485_Line+0x34>)
 8001328:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800132c:	619a      	str	r2, [r3, #24]
    while (USART6->SR & USART_SR_RXNE) {
 800132e:	e004      	b.n	800133a <Reset_RS485_Line+0x1a>
        volatile uint8_t dump = USART6->DR;
 8001330:	4b09      	ldr	r3, [pc, #36]	; (8001358 <Reset_RS485_Line+0x38>)
 8001332:	685b      	ldr	r3, [r3, #4]
 8001334:	b2db      	uxtb	r3, r3
 8001336:	71fb      	strb	r3, [r7, #7]
        (void)dump;
 8001338:	79fb      	ldrb	r3, [r7, #7]
    while (USART6->SR & USART_SR_RXNE) {
 800133a:	4b07      	ldr	r3, [pc, #28]	; (8001358 <Reset_RS485_Line+0x38>)
 800133c:	681b      	ldr	r3, [r3, #0]
 800133e:	f003 0320 	and.w	r3, r3, #32
 8001342:	2b00      	cmp	r3, #0
 8001344:	d1f4      	bne.n	8001330 <Reset_RS485_Line+0x10>
    }
}
 8001346:	bf00      	nop
 8001348:	bf00      	nop
 800134a:	370c      	adds	r7, #12
 800134c:	46bd      	mov	sp, r7
 800134e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001352:	4770      	bx	lr
 8001354:	40020000 	.word	0x40020000
 8001358:	40011400 	.word	0x40011400

0800135c <Delay_Short>:

void Delay_Short(void) {
 800135c:	b480      	push	{r7}
 800135e:	b083      	sub	sp, #12
 8001360:	af00      	add	r7, sp, #0
    for (volatile int i = 0; i < 2000000; i++);
 8001362:	2300      	movs	r3, #0
 8001364:	607b      	str	r3, [r7, #4]
 8001366:	e002      	b.n	800136e <Delay_Short+0x12>
 8001368:	687b      	ldr	r3, [r7, #4]
 800136a:	3301      	adds	r3, #1
 800136c:	607b      	str	r3, [r7, #4]
 800136e:	687b      	ldr	r3, [r7, #4]
 8001370:	4a04      	ldr	r2, [pc, #16]	; (8001384 <Delay_Short+0x28>)
 8001372:	4293      	cmp	r3, r2
 8001374:	ddf8      	ble.n	8001368 <Delay_Short+0xc>
}
 8001376:	bf00      	nop
 8001378:	bf00      	nop
 800137a:	370c      	adds	r7, #12
 800137c:	46bd      	mov	sp, r7
 800137e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001382:	4770      	bx	lr
 8001384:	001e847f 	.word	0x001e847f

08001388 <TIM10_Init>:

// ===================== DHT22 ========================
void TIM10_Init(void) {
 8001388:	b480      	push	{r7}
 800138a:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_TIM10EN;
 800138c:	4b08      	ldr	r3, [pc, #32]	; (80013b0 <TIM10_Init+0x28>)
 800138e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001390:	4a07      	ldr	r2, [pc, #28]	; (80013b0 <TIM10_Init+0x28>)
 8001392:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001396:	6453      	str	r3, [r2, #68]	; 0x44
    TIM10->PSC = 16 - 1;
 8001398:	4b06      	ldr	r3, [pc, #24]	; (80013b4 <TIM10_Init+0x2c>)
 800139a:	220f      	movs	r2, #15
 800139c:	629a      	str	r2, [r3, #40]	; 0x28
    TIM10->CR1 = TIM_CR1_CEN;
 800139e:	4b05      	ldr	r3, [pc, #20]	; (80013b4 <TIM10_Init+0x2c>)
 80013a0:	2201      	movs	r2, #1
 80013a2:	601a      	str	r2, [r3, #0]
}
 80013a4:	bf00      	nop
 80013a6:	46bd      	mov	sp, r7
 80013a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013ac:	4770      	bx	lr
 80013ae:	bf00      	nop
 80013b0:	40023800 	.word	0x40023800
 80013b4:	40014400 	.word	0x40014400

080013b8 <delay_us>:

void delay_us(uint32_t us) {
 80013b8:	b480      	push	{r7}
 80013ba:	b083      	sub	sp, #12
 80013bc:	af00      	add	r7, sp, #0
 80013be:	6078      	str	r0, [r7, #4]
    TIM10->CNT = 0;
 80013c0:	4b07      	ldr	r3, [pc, #28]	; (80013e0 <delay_us+0x28>)
 80013c2:	2200      	movs	r2, #0
 80013c4:	625a      	str	r2, [r3, #36]	; 0x24
    while (TIM10->CNT < us);
 80013c6:	bf00      	nop
 80013c8:	4b05      	ldr	r3, [pc, #20]	; (80013e0 <delay_us+0x28>)
 80013ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80013cc:	687a      	ldr	r2, [r7, #4]
 80013ce:	429a      	cmp	r2, r3
 80013d0:	d8fa      	bhi.n	80013c8 <delay_us+0x10>
}
 80013d2:	bf00      	nop
 80013d4:	bf00      	nop
 80013d6:	370c      	adds	r7, #12
 80013d8:	46bd      	mov	sp, r7
 80013da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013de:	4770      	bx	lr
 80013e0:	40014400 	.word	0x40014400

080013e4 <delay_ms>:

void delay_ms(uint32_t ms) {
 80013e4:	b580      	push	{r7, lr}
 80013e6:	b082      	sub	sp, #8
 80013e8:	af00      	add	r7, sp, #0
 80013ea:	6078      	str	r0, [r7, #4]
    while (ms--) delay_us(1000);
 80013ec:	e003      	b.n	80013f6 <delay_ms+0x12>
 80013ee:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80013f2:	f7ff ffe1 	bl	80013b8 <delay_us>
 80013f6:	687b      	ldr	r3, [r7, #4]
 80013f8:	1e5a      	subs	r2, r3, #1
 80013fa:	607a      	str	r2, [r7, #4]
 80013fc:	2b00      	cmp	r3, #0
 80013fe:	d1f6      	bne.n	80013ee <delay_ms+0xa>
}
 8001400:	bf00      	nop
 8001402:	bf00      	nop
 8001404:	3708      	adds	r7, #8
 8001406:	46bd      	mov	sp, r7
 8001408:	bd80      	pop	{r7, pc}
	...

0800140c <DHT22_Read>:

int DHT22_Read(float *temperature, float *humidity) {
 800140c:	b580      	push	{r7, lr}
 800140e:	b088      	sub	sp, #32
 8001410:	af00      	add	r7, sp, #0
 8001412:	6078      	str	r0, [r7, #4]
 8001414:	6039      	str	r1, [r7, #0]
    uint8_t data[5] = {0};
 8001416:	2300      	movs	r3, #0
 8001418:	60fb      	str	r3, [r7, #12]
 800141a:	2300      	movs	r3, #0
 800141c:	743b      	strb	r3, [r7, #16]
    uint32_t timeout;

    // Start signal
    GPIOA->MODER |= (1 << 0);       // PA0 output
 800141e:	4b7c      	ldr	r3, [pc, #496]	; (8001610 <DHT22_Read+0x204>)
 8001420:	681b      	ldr	r3, [r3, #0]
 8001422:	4a7b      	ldr	r2, [pc, #492]	; (8001610 <DHT22_Read+0x204>)
 8001424:	f043 0301 	orr.w	r3, r3, #1
 8001428:	6013      	str	r3, [r2, #0]
    GPIOA->BSRR = (1 << 16);        // Low
 800142a:	4b79      	ldr	r3, [pc, #484]	; (8001610 <DHT22_Read+0x204>)
 800142c:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8001430:	619a      	str	r2, [r3, #24]
    delay_ms(1);                    // 1ms
 8001432:	2001      	movs	r0, #1
 8001434:	f7ff ffd6 	bl	80013e4 <delay_ms>
    GPIOA->BSRR = (1 << 0);         // High
 8001438:	4b75      	ldr	r3, [pc, #468]	; (8001610 <DHT22_Read+0x204>)
 800143a:	2201      	movs	r2, #1
 800143c:	619a      	str	r2, [r3, #24]
    delay_us(30);
 800143e:	201e      	movs	r0, #30
 8001440:	f7ff ffba 	bl	80013b8 <delay_us>
    GPIOA->MODER &= ~(3 << 0);      // Input
 8001444:	4b72      	ldr	r3, [pc, #456]	; (8001610 <DHT22_Read+0x204>)
 8001446:	681b      	ldr	r3, [r3, #0]
 8001448:	4a71      	ldr	r2, [pc, #452]	; (8001610 <DHT22_Read+0x204>)
 800144a:	f023 0303 	bic.w	r3, r3, #3
 800144e:	6013      	str	r3, [r2, #0]
    timeout = 100;
 8001450:	2364      	movs	r3, #100	; 0x64
 8001452:	61fb      	str	r3, [r7, #28]
    while (GPIOA->IDR & 1) if (!--timeout) return 0;
 8001454:	e007      	b.n	8001466 <DHT22_Read+0x5a>
 8001456:	69fb      	ldr	r3, [r7, #28]
 8001458:	3b01      	subs	r3, #1
 800145a:	61fb      	str	r3, [r7, #28]
 800145c:	69fb      	ldr	r3, [r7, #28]
 800145e:	2b00      	cmp	r3, #0
 8001460:	d101      	bne.n	8001466 <DHT22_Read+0x5a>
 8001462:	2300      	movs	r3, #0
 8001464:	e0cf      	b.n	8001606 <DHT22_Read+0x1fa>
 8001466:	4b6a      	ldr	r3, [pc, #424]	; (8001610 <DHT22_Read+0x204>)
 8001468:	691b      	ldr	r3, [r3, #16]
 800146a:	f003 0301 	and.w	r3, r3, #1
 800146e:	2b00      	cmp	r3, #0
 8001470:	d1f1      	bne.n	8001456 <DHT22_Read+0x4a>
    timeout = 100;
 8001472:	2364      	movs	r3, #100	; 0x64
 8001474:	61fb      	str	r3, [r7, #28]
    while (!(GPIOA->IDR & 1)) if (!--timeout) return 0;
 8001476:	e007      	b.n	8001488 <DHT22_Read+0x7c>
 8001478:	69fb      	ldr	r3, [r7, #28]
 800147a:	3b01      	subs	r3, #1
 800147c:	61fb      	str	r3, [r7, #28]
 800147e:	69fb      	ldr	r3, [r7, #28]
 8001480:	2b00      	cmp	r3, #0
 8001482:	d101      	bne.n	8001488 <DHT22_Read+0x7c>
 8001484:	2300      	movs	r3, #0
 8001486:	e0be      	b.n	8001606 <DHT22_Read+0x1fa>
 8001488:	4b61      	ldr	r3, [pc, #388]	; (8001610 <DHT22_Read+0x204>)
 800148a:	691b      	ldr	r3, [r3, #16]
 800148c:	f003 0301 	and.w	r3, r3, #1
 8001490:	2b00      	cmp	r3, #0
 8001492:	d0f1      	beq.n	8001478 <DHT22_Read+0x6c>
    timeout = 100;
 8001494:	2364      	movs	r3, #100	; 0x64
 8001496:	61fb      	str	r3, [r7, #28]
    while (GPIOA->IDR & 1) if (!--timeout) return 0;
 8001498:	e007      	b.n	80014aa <DHT22_Read+0x9e>
 800149a:	69fb      	ldr	r3, [r7, #28]
 800149c:	3b01      	subs	r3, #1
 800149e:	61fb      	str	r3, [r7, #28]
 80014a0:	69fb      	ldr	r3, [r7, #28]
 80014a2:	2b00      	cmp	r3, #0
 80014a4:	d101      	bne.n	80014aa <DHT22_Read+0x9e>
 80014a6:	2300      	movs	r3, #0
 80014a8:	e0ad      	b.n	8001606 <DHT22_Read+0x1fa>
 80014aa:	4b59      	ldr	r3, [pc, #356]	; (8001610 <DHT22_Read+0x204>)
 80014ac:	691b      	ldr	r3, [r3, #16]
 80014ae:	f003 0301 	and.w	r3, r3, #1
 80014b2:	2b00      	cmp	r3, #0
 80014b4:	d1f1      	bne.n	800149a <DHT22_Read+0x8e>

    for (int i = 0; i < 40; i++) {
 80014b6:	2300      	movs	r3, #0
 80014b8:	61bb      	str	r3, [r7, #24]
 80014ba:	e03c      	b.n	8001536 <DHT22_Read+0x12a>
        while (!(GPIOA->IDR & 1));
 80014bc:	bf00      	nop
 80014be:	4b54      	ldr	r3, [pc, #336]	; (8001610 <DHT22_Read+0x204>)
 80014c0:	691b      	ldr	r3, [r3, #16]
 80014c2:	f003 0301 	and.w	r3, r3, #1
 80014c6:	2b00      	cmp	r3, #0
 80014c8:	d0f9      	beq.n	80014be <DHT22_Read+0xb2>
        delay_us(40);
 80014ca:	2028      	movs	r0, #40	; 0x28
 80014cc:	f7ff ff74 	bl	80013b8 <delay_us>
        if (GPIOA->IDR & 1)
 80014d0:	4b4f      	ldr	r3, [pc, #316]	; (8001610 <DHT22_Read+0x204>)
 80014d2:	691b      	ldr	r3, [r3, #16]
 80014d4:	f003 0301 	and.w	r3, r3, #1
 80014d8:	2b00      	cmp	r3, #0
 80014da:	d022      	beq.n	8001522 <DHT22_Read+0x116>
            data[i / 8] |= (1 << (7 - (i % 8)));
 80014dc:	69bb      	ldr	r3, [r7, #24]
 80014de:	2b00      	cmp	r3, #0
 80014e0:	da00      	bge.n	80014e4 <DHT22_Read+0xd8>
 80014e2:	3307      	adds	r3, #7
 80014e4:	10db      	asrs	r3, r3, #3
 80014e6:	461a      	mov	r2, r3
 80014e8:	f102 0320 	add.w	r3, r2, #32
 80014ec:	443b      	add	r3, r7
 80014ee:	f813 3c14 	ldrb.w	r3, [r3, #-20]
 80014f2:	b259      	sxtb	r1, r3
 80014f4:	69bb      	ldr	r3, [r7, #24]
 80014f6:	4258      	negs	r0, r3
 80014f8:	f003 0307 	and.w	r3, r3, #7
 80014fc:	f000 0007 	and.w	r0, r0, #7
 8001500:	bf58      	it	pl
 8001502:	4243      	negpl	r3, r0
 8001504:	f1c3 0307 	rsb	r3, r3, #7
 8001508:	2001      	movs	r0, #1
 800150a:	fa00 f303 	lsl.w	r3, r0, r3
 800150e:	b25b      	sxtb	r3, r3
 8001510:	430b      	orrs	r3, r1
 8001512:	b25b      	sxtb	r3, r3
 8001514:	b2d9      	uxtb	r1, r3
 8001516:	f102 0320 	add.w	r3, r2, #32
 800151a:	443b      	add	r3, r7
 800151c:	460a      	mov	r2, r1
 800151e:	f803 2c14 	strb.w	r2, [r3, #-20]
        while (GPIOA->IDR & 1);
 8001522:	bf00      	nop
 8001524:	4b3a      	ldr	r3, [pc, #232]	; (8001610 <DHT22_Read+0x204>)
 8001526:	691b      	ldr	r3, [r3, #16]
 8001528:	f003 0301 	and.w	r3, r3, #1
 800152c:	2b00      	cmp	r3, #0
 800152e:	d1f9      	bne.n	8001524 <DHT22_Read+0x118>
    for (int i = 0; i < 40; i++) {
 8001530:	69bb      	ldr	r3, [r7, #24]
 8001532:	3301      	adds	r3, #1
 8001534:	61bb      	str	r3, [r7, #24]
 8001536:	69bb      	ldr	r3, [r7, #24]
 8001538:	2b27      	cmp	r3, #39	; 0x27
 800153a:	ddbf      	ble.n	80014bc <DHT22_Read+0xb0>
    }

    uint8_t checksum = data[0] + data[1] + data[2] + data[3];
 800153c:	7b3a      	ldrb	r2, [r7, #12]
 800153e:	7b7b      	ldrb	r3, [r7, #13]
 8001540:	4413      	add	r3, r2
 8001542:	b2da      	uxtb	r2, r3
 8001544:	7bbb      	ldrb	r3, [r7, #14]
 8001546:	4413      	add	r3, r2
 8001548:	b2da      	uxtb	r2, r3
 800154a:	7bfb      	ldrb	r3, [r7, #15]
 800154c:	4413      	add	r3, r2
 800154e:	75fb      	strb	r3, [r7, #23]
    if (checksum != data[4]) return 0;
 8001550:	7c3b      	ldrb	r3, [r7, #16]
 8001552:	7dfa      	ldrb	r2, [r7, #23]
 8001554:	429a      	cmp	r2, r3
 8001556:	d001      	beq.n	800155c <DHT22_Read+0x150>
 8001558:	2300      	movs	r3, #0
 800155a:	e054      	b.n	8001606 <DHT22_Read+0x1fa>

    uint16_t raw_humi = (data[0] << 8) | data[1];
 800155c:	7b3b      	ldrb	r3, [r7, #12]
 800155e:	021b      	lsls	r3, r3, #8
 8001560:	b21a      	sxth	r2, r3
 8001562:	7b7b      	ldrb	r3, [r7, #13]
 8001564:	b21b      	sxth	r3, r3
 8001566:	4313      	orrs	r3, r2
 8001568:	b21b      	sxth	r3, r3
 800156a:	82bb      	strh	r3, [r7, #20]
    uint16_t raw_temp = (data[2] << 8) | data[3];
 800156c:	7bbb      	ldrb	r3, [r7, #14]
 800156e:	021b      	lsls	r3, r3, #8
 8001570:	b21a      	sxth	r2, r3
 8001572:	7bfb      	ldrb	r3, [r7, #15]
 8001574:	b21b      	sxth	r3, r3
 8001576:	4313      	orrs	r3, r2
 8001578:	b21b      	sxth	r3, r3
 800157a:	827b      	strh	r3, [r7, #18]
    *humidity = raw_humi / 10.0;
 800157c:	8abb      	ldrh	r3, [r7, #20]
 800157e:	4618      	mov	r0, r3
 8001580:	f7fe ffd8 	bl	8000534 <__aeabi_i2d>
 8001584:	f04f 0200 	mov.w	r2, #0
 8001588:	4b22      	ldr	r3, [pc, #136]	; (8001614 <DHT22_Read+0x208>)
 800158a:	f7ff f967 	bl	800085c <__aeabi_ddiv>
 800158e:	4602      	mov	r2, r0
 8001590:	460b      	mov	r3, r1
 8001592:	4610      	mov	r0, r2
 8001594:	4619      	mov	r1, r3
 8001596:	f7ff fb0f 	bl	8000bb8 <__aeabi_d2f>
 800159a:	4602      	mov	r2, r0
 800159c:	683b      	ldr	r3, [r7, #0]
 800159e:	601a      	str	r2, [r3, #0]
    if (raw_temp & 0x8000) {
 80015a0:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 80015a4:	2b00      	cmp	r3, #0
 80015a6:	da1b      	bge.n	80015e0 <DHT22_Read+0x1d4>
        raw_temp &= 0x7FFF;
 80015a8:	8a7b      	ldrh	r3, [r7, #18]
 80015aa:	f3c3 030e 	ubfx	r3, r3, #0, #15
 80015ae:	827b      	strh	r3, [r7, #18]
        *temperature = -1.0 * (raw_temp / 10.0);
 80015b0:	8a7b      	ldrh	r3, [r7, #18]
 80015b2:	4618      	mov	r0, r3
 80015b4:	f7fe ffbe 	bl	8000534 <__aeabi_i2d>
 80015b8:	f04f 0200 	mov.w	r2, #0
 80015bc:	4b15      	ldr	r3, [pc, #84]	; (8001614 <DHT22_Read+0x208>)
 80015be:	f7ff f94d 	bl	800085c <__aeabi_ddiv>
 80015c2:	4602      	mov	r2, r0
 80015c4:	460b      	mov	r3, r1
 80015c6:	4610      	mov	r0, r2
 80015c8:	4619      	mov	r1, r3
 80015ca:	f7ff faf5 	bl	8000bb8 <__aeabi_d2f>
 80015ce:	4603      	mov	r3, r0
 80015d0:	ee07 3a90 	vmov	s15, r3
 80015d4:	eef1 7a67 	vneg.f32	s15, s15
 80015d8:	687b      	ldr	r3, [r7, #4]
 80015da:	edc3 7a00 	vstr	s15, [r3]
 80015de:	e011      	b.n	8001604 <DHT22_Read+0x1f8>
    } else {
        *temperature = raw_temp / 10.0;
 80015e0:	8a7b      	ldrh	r3, [r7, #18]
 80015e2:	4618      	mov	r0, r3
 80015e4:	f7fe ffa6 	bl	8000534 <__aeabi_i2d>
 80015e8:	f04f 0200 	mov.w	r2, #0
 80015ec:	4b09      	ldr	r3, [pc, #36]	; (8001614 <DHT22_Read+0x208>)
 80015ee:	f7ff f935 	bl	800085c <__aeabi_ddiv>
 80015f2:	4602      	mov	r2, r0
 80015f4:	460b      	mov	r3, r1
 80015f6:	4610      	mov	r0, r2
 80015f8:	4619      	mov	r1, r3
 80015fa:	f7ff fadd 	bl	8000bb8 <__aeabi_d2f>
 80015fe:	4602      	mov	r2, r0
 8001600:	687b      	ldr	r3, [r7, #4]
 8001602:	601a      	str	r2, [r3, #0]
    }
    return 1;
 8001604:	2301      	movs	r3, #1
}
 8001606:	4618      	mov	r0, r3
 8001608:	3720      	adds	r7, #32
 800160a:	46bd      	mov	sp, r7
 800160c:	bd80      	pop	{r7, pc}
 800160e:	bf00      	nop
 8001610:	40020000 	.word	0x40020000
 8001614:	40240000 	.word	0x40240000

08001618 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001618:	b480      	push	{r7}
 800161a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 800161c:	e7fe      	b.n	800161c <NMI_Handler+0x4>

0800161e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800161e:	b480      	push	{r7}
 8001620:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001622:	e7fe      	b.n	8001622 <HardFault_Handler+0x4>

08001624 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001624:	b480      	push	{r7}
 8001626:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001628:	e7fe      	b.n	8001628 <MemManage_Handler+0x4>

0800162a <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800162a:	b480      	push	{r7}
 800162c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800162e:	e7fe      	b.n	800162e <BusFault_Handler+0x4>

08001630 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001630:	b480      	push	{r7}
 8001632:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001634:	e7fe      	b.n	8001634 <UsageFault_Handler+0x4>

08001636 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001636:	b480      	push	{r7}
 8001638:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800163a:	bf00      	nop
 800163c:	46bd      	mov	sp, r7
 800163e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001642:	4770      	bx	lr

08001644 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001644:	b480      	push	{r7}
 8001646:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001648:	bf00      	nop
 800164a:	46bd      	mov	sp, r7
 800164c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001650:	4770      	bx	lr

08001652 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001652:	b480      	push	{r7}
 8001654:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001656:	bf00      	nop
 8001658:	46bd      	mov	sp, r7
 800165a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800165e:	4770      	bx	lr

08001660 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001660:	b580      	push	{r7, lr}
 8001662:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001664:	f000 f984 	bl	8001970 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001668:	bf00      	nop
 800166a:	bd80      	pop	{r7, pc}

0800166c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800166c:	b480      	push	{r7}
 800166e:	af00      	add	r7, sp, #0
  return 1;
 8001670:	2301      	movs	r3, #1
}
 8001672:	4618      	mov	r0, r3
 8001674:	46bd      	mov	sp, r7
 8001676:	f85d 7b04 	ldr.w	r7, [sp], #4
 800167a:	4770      	bx	lr

0800167c <_kill>:

int _kill(int pid, int sig)
{
 800167c:	b580      	push	{r7, lr}
 800167e:	b082      	sub	sp, #8
 8001680:	af00      	add	r7, sp, #0
 8001682:	6078      	str	r0, [r7, #4]
 8001684:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001686:	f000 ffab 	bl	80025e0 <__errno>
 800168a:	4603      	mov	r3, r0
 800168c:	2216      	movs	r2, #22
 800168e:	601a      	str	r2, [r3, #0]
  return -1;
 8001690:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001694:	4618      	mov	r0, r3
 8001696:	3708      	adds	r7, #8
 8001698:	46bd      	mov	sp, r7
 800169a:	bd80      	pop	{r7, pc}

0800169c <_exit>:

void _exit (int status)
{
 800169c:	b580      	push	{r7, lr}
 800169e:	b082      	sub	sp, #8
 80016a0:	af00      	add	r7, sp, #0
 80016a2:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80016a4:	f04f 31ff 	mov.w	r1, #4294967295
 80016a8:	6878      	ldr	r0, [r7, #4]
 80016aa:	f7ff ffe7 	bl	800167c <_kill>
  while (1) {}    /* Make sure we hang here */
 80016ae:	e7fe      	b.n	80016ae <_exit+0x12>

080016b0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80016b0:	b580      	push	{r7, lr}
 80016b2:	b086      	sub	sp, #24
 80016b4:	af00      	add	r7, sp, #0
 80016b6:	60f8      	str	r0, [r7, #12]
 80016b8:	60b9      	str	r1, [r7, #8]
 80016ba:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80016bc:	2300      	movs	r3, #0
 80016be:	617b      	str	r3, [r7, #20]
 80016c0:	e00a      	b.n	80016d8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80016c2:	f3af 8000 	nop.w
 80016c6:	4601      	mov	r1, r0
 80016c8:	68bb      	ldr	r3, [r7, #8]
 80016ca:	1c5a      	adds	r2, r3, #1
 80016cc:	60ba      	str	r2, [r7, #8]
 80016ce:	b2ca      	uxtb	r2, r1
 80016d0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80016d2:	697b      	ldr	r3, [r7, #20]
 80016d4:	3301      	adds	r3, #1
 80016d6:	617b      	str	r3, [r7, #20]
 80016d8:	697a      	ldr	r2, [r7, #20]
 80016da:	687b      	ldr	r3, [r7, #4]
 80016dc:	429a      	cmp	r2, r3
 80016de:	dbf0      	blt.n	80016c2 <_read+0x12>
  }

  return len;
 80016e0:	687b      	ldr	r3, [r7, #4]
}
 80016e2:	4618      	mov	r0, r3
 80016e4:	3718      	adds	r7, #24
 80016e6:	46bd      	mov	sp, r7
 80016e8:	bd80      	pop	{r7, pc}

080016ea <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80016ea:	b580      	push	{r7, lr}
 80016ec:	b086      	sub	sp, #24
 80016ee:	af00      	add	r7, sp, #0
 80016f0:	60f8      	str	r0, [r7, #12]
 80016f2:	60b9      	str	r1, [r7, #8]
 80016f4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80016f6:	2300      	movs	r3, #0
 80016f8:	617b      	str	r3, [r7, #20]
 80016fa:	e009      	b.n	8001710 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80016fc:	68bb      	ldr	r3, [r7, #8]
 80016fe:	1c5a      	adds	r2, r3, #1
 8001700:	60ba      	str	r2, [r7, #8]
 8001702:	781b      	ldrb	r3, [r3, #0]
 8001704:	4618      	mov	r0, r3
 8001706:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800170a:	697b      	ldr	r3, [r7, #20]
 800170c:	3301      	adds	r3, #1
 800170e:	617b      	str	r3, [r7, #20]
 8001710:	697a      	ldr	r2, [r7, #20]
 8001712:	687b      	ldr	r3, [r7, #4]
 8001714:	429a      	cmp	r2, r3
 8001716:	dbf1      	blt.n	80016fc <_write+0x12>
  }
  return len;
 8001718:	687b      	ldr	r3, [r7, #4]
}
 800171a:	4618      	mov	r0, r3
 800171c:	3718      	adds	r7, #24
 800171e:	46bd      	mov	sp, r7
 8001720:	bd80      	pop	{r7, pc}

08001722 <_close>:

int _close(int file)
{
 8001722:	b480      	push	{r7}
 8001724:	b083      	sub	sp, #12
 8001726:	af00      	add	r7, sp, #0
 8001728:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800172a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800172e:	4618      	mov	r0, r3
 8001730:	370c      	adds	r7, #12
 8001732:	46bd      	mov	sp, r7
 8001734:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001738:	4770      	bx	lr

0800173a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800173a:	b480      	push	{r7}
 800173c:	b083      	sub	sp, #12
 800173e:	af00      	add	r7, sp, #0
 8001740:	6078      	str	r0, [r7, #4]
 8001742:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001744:	683b      	ldr	r3, [r7, #0]
 8001746:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800174a:	605a      	str	r2, [r3, #4]
  return 0;
 800174c:	2300      	movs	r3, #0
}
 800174e:	4618      	mov	r0, r3
 8001750:	370c      	adds	r7, #12
 8001752:	46bd      	mov	sp, r7
 8001754:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001758:	4770      	bx	lr

0800175a <_isatty>:

int _isatty(int file)
{
 800175a:	b480      	push	{r7}
 800175c:	b083      	sub	sp, #12
 800175e:	af00      	add	r7, sp, #0
 8001760:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001762:	2301      	movs	r3, #1
}
 8001764:	4618      	mov	r0, r3
 8001766:	370c      	adds	r7, #12
 8001768:	46bd      	mov	sp, r7
 800176a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800176e:	4770      	bx	lr

08001770 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001770:	b480      	push	{r7}
 8001772:	b085      	sub	sp, #20
 8001774:	af00      	add	r7, sp, #0
 8001776:	60f8      	str	r0, [r7, #12]
 8001778:	60b9      	str	r1, [r7, #8]
 800177a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800177c:	2300      	movs	r3, #0
}
 800177e:	4618      	mov	r0, r3
 8001780:	3714      	adds	r7, #20
 8001782:	46bd      	mov	sp, r7
 8001784:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001788:	4770      	bx	lr
	...

0800178c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800178c:	b580      	push	{r7, lr}
 800178e:	b086      	sub	sp, #24
 8001790:	af00      	add	r7, sp, #0
 8001792:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001794:	4a14      	ldr	r2, [pc, #80]	; (80017e8 <_sbrk+0x5c>)
 8001796:	4b15      	ldr	r3, [pc, #84]	; (80017ec <_sbrk+0x60>)
 8001798:	1ad3      	subs	r3, r2, r3
 800179a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800179c:	697b      	ldr	r3, [r7, #20]
 800179e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80017a0:	4b13      	ldr	r3, [pc, #76]	; (80017f0 <_sbrk+0x64>)
 80017a2:	681b      	ldr	r3, [r3, #0]
 80017a4:	2b00      	cmp	r3, #0
 80017a6:	d102      	bne.n	80017ae <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80017a8:	4b11      	ldr	r3, [pc, #68]	; (80017f0 <_sbrk+0x64>)
 80017aa:	4a12      	ldr	r2, [pc, #72]	; (80017f4 <_sbrk+0x68>)
 80017ac:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80017ae:	4b10      	ldr	r3, [pc, #64]	; (80017f0 <_sbrk+0x64>)
 80017b0:	681a      	ldr	r2, [r3, #0]
 80017b2:	687b      	ldr	r3, [r7, #4]
 80017b4:	4413      	add	r3, r2
 80017b6:	693a      	ldr	r2, [r7, #16]
 80017b8:	429a      	cmp	r2, r3
 80017ba:	d207      	bcs.n	80017cc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80017bc:	f000 ff10 	bl	80025e0 <__errno>
 80017c0:	4603      	mov	r3, r0
 80017c2:	220c      	movs	r2, #12
 80017c4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80017c6:	f04f 33ff 	mov.w	r3, #4294967295
 80017ca:	e009      	b.n	80017e0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80017cc:	4b08      	ldr	r3, [pc, #32]	; (80017f0 <_sbrk+0x64>)
 80017ce:	681b      	ldr	r3, [r3, #0]
 80017d0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80017d2:	4b07      	ldr	r3, [pc, #28]	; (80017f0 <_sbrk+0x64>)
 80017d4:	681a      	ldr	r2, [r3, #0]
 80017d6:	687b      	ldr	r3, [r7, #4]
 80017d8:	4413      	add	r3, r2
 80017da:	4a05      	ldr	r2, [pc, #20]	; (80017f0 <_sbrk+0x64>)
 80017dc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80017de:	68fb      	ldr	r3, [r7, #12]
}
 80017e0:	4618      	mov	r0, r3
 80017e2:	3718      	adds	r7, #24
 80017e4:	46bd      	mov	sp, r7
 80017e6:	bd80      	pop	{r7, pc}
 80017e8:	20018000 	.word	0x20018000
 80017ec:	00000400 	.word	0x00000400
 80017f0:	20000250 	.word	0x20000250
 80017f4:	200003a8 	.word	0x200003a8

080017f8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80017f8:	b480      	push	{r7}
 80017fa:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80017fc:	4b06      	ldr	r3, [pc, #24]	; (8001818 <SystemInit+0x20>)
 80017fe:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001802:	4a05      	ldr	r2, [pc, #20]	; (8001818 <SystemInit+0x20>)
 8001804:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001808:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800180c:	bf00      	nop
 800180e:	46bd      	mov	sp, r7
 8001810:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001814:	4770      	bx	lr
 8001816:	bf00      	nop
 8001818:	e000ed00 	.word	0xe000ed00

0800181c <SystemCoreClockUpdate>:
  *     
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
 800181c:	b480      	push	{r7}
 800181e:	b087      	sub	sp, #28
 8001820:	af00      	add	r7, sp, #0
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 8001822:	2300      	movs	r3, #0
 8001824:	613b      	str	r3, [r7, #16]
 8001826:	2300      	movs	r3, #0
 8001828:	617b      	str	r3, [r7, #20]
 800182a:	2302      	movs	r3, #2
 800182c:	60fb      	str	r3, [r7, #12]
 800182e:	2300      	movs	r3, #0
 8001830:	60bb      	str	r3, [r7, #8]
 8001832:	2302      	movs	r3, #2
 8001834:	607b      	str	r3, [r7, #4]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 8001836:	4b34      	ldr	r3, [pc, #208]	; (8001908 <SystemCoreClockUpdate+0xec>)
 8001838:	689b      	ldr	r3, [r3, #8]
 800183a:	f003 030c 	and.w	r3, r3, #12
 800183e:	613b      	str	r3, [r7, #16]

  switch (tmp)
 8001840:	693b      	ldr	r3, [r7, #16]
 8001842:	2b08      	cmp	r3, #8
 8001844:	d011      	beq.n	800186a <SystemCoreClockUpdate+0x4e>
 8001846:	693b      	ldr	r3, [r7, #16]
 8001848:	2b08      	cmp	r3, #8
 800184a:	d844      	bhi.n	80018d6 <SystemCoreClockUpdate+0xba>
 800184c:	693b      	ldr	r3, [r7, #16]
 800184e:	2b00      	cmp	r3, #0
 8001850:	d003      	beq.n	800185a <SystemCoreClockUpdate+0x3e>
 8001852:	693b      	ldr	r3, [r7, #16]
 8001854:	2b04      	cmp	r3, #4
 8001856:	d004      	beq.n	8001862 <SystemCoreClockUpdate+0x46>
 8001858:	e03d      	b.n	80018d6 <SystemCoreClockUpdate+0xba>
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 800185a:	4b2c      	ldr	r3, [pc, #176]	; (800190c <SystemCoreClockUpdate+0xf0>)
 800185c:	4a2c      	ldr	r2, [pc, #176]	; (8001910 <SystemCoreClockUpdate+0xf4>)
 800185e:	601a      	str	r2, [r3, #0]
      break;
 8001860:	e03d      	b.n	80018de <SystemCoreClockUpdate+0xc2>
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 8001862:	4b2a      	ldr	r3, [pc, #168]	; (800190c <SystemCoreClockUpdate+0xf0>)
 8001864:	4a2b      	ldr	r2, [pc, #172]	; (8001914 <SystemCoreClockUpdate+0xf8>)
 8001866:	601a      	str	r2, [r3, #0]
      break;
 8001868:	e039      	b.n	80018de <SystemCoreClockUpdate+0xc2>
    case 0x08:  /* PLL used as system clock source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 800186a:	4b27      	ldr	r3, [pc, #156]	; (8001908 <SystemCoreClockUpdate+0xec>)
 800186c:	685b      	ldr	r3, [r3, #4]
 800186e:	0d9b      	lsrs	r3, r3, #22
 8001870:	f003 0301 	and.w	r3, r3, #1
 8001874:	60bb      	str	r3, [r7, #8]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8001876:	4b24      	ldr	r3, [pc, #144]	; (8001908 <SystemCoreClockUpdate+0xec>)
 8001878:	685b      	ldr	r3, [r3, #4]
 800187a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800187e:	607b      	str	r3, [r7, #4]
      
      if (pllsource != 0)
 8001880:	68bb      	ldr	r3, [r7, #8]
 8001882:	2b00      	cmp	r3, #0
 8001884:	d00c      	beq.n	80018a0 <SystemCoreClockUpdate+0x84>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8001886:	4a23      	ldr	r2, [pc, #140]	; (8001914 <SystemCoreClockUpdate+0xf8>)
 8001888:	687b      	ldr	r3, [r7, #4]
 800188a:	fbb2 f3f3 	udiv	r3, r2, r3
 800188e:	4a1e      	ldr	r2, [pc, #120]	; (8001908 <SystemCoreClockUpdate+0xec>)
 8001890:	6852      	ldr	r2, [r2, #4]
 8001892:	0992      	lsrs	r2, r2, #6
 8001894:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001898:	fb02 f303 	mul.w	r3, r2, r3
 800189c:	617b      	str	r3, [r7, #20]
 800189e:	e00b      	b.n	80018b8 <SystemCoreClockUpdate+0x9c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 80018a0:	4a1b      	ldr	r2, [pc, #108]	; (8001910 <SystemCoreClockUpdate+0xf4>)
 80018a2:	687b      	ldr	r3, [r7, #4]
 80018a4:	fbb2 f3f3 	udiv	r3, r2, r3
 80018a8:	4a17      	ldr	r2, [pc, #92]	; (8001908 <SystemCoreClockUpdate+0xec>)
 80018aa:	6852      	ldr	r2, [r2, #4]
 80018ac:	0992      	lsrs	r2, r2, #6
 80018ae:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80018b2:	fb02 f303 	mul.w	r3, r2, r3
 80018b6:	617b      	str	r3, [r7, #20]
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 80018b8:	4b13      	ldr	r3, [pc, #76]	; (8001908 <SystemCoreClockUpdate+0xec>)
 80018ba:	685b      	ldr	r3, [r3, #4]
 80018bc:	0c1b      	lsrs	r3, r3, #16
 80018be:	f003 0303 	and.w	r3, r3, #3
 80018c2:	3301      	adds	r3, #1
 80018c4:	005b      	lsls	r3, r3, #1
 80018c6:	60fb      	str	r3, [r7, #12]
      SystemCoreClock = pllvco/pllp;
 80018c8:	697a      	ldr	r2, [r7, #20]
 80018ca:	68fb      	ldr	r3, [r7, #12]
 80018cc:	fbb2 f3f3 	udiv	r3, r2, r3
 80018d0:	4a0e      	ldr	r2, [pc, #56]	; (800190c <SystemCoreClockUpdate+0xf0>)
 80018d2:	6013      	str	r3, [r2, #0]
      break;
 80018d4:	e003      	b.n	80018de <SystemCoreClockUpdate+0xc2>
    default:
      SystemCoreClock = HSI_VALUE;
 80018d6:	4b0d      	ldr	r3, [pc, #52]	; (800190c <SystemCoreClockUpdate+0xf0>)
 80018d8:	4a0d      	ldr	r2, [pc, #52]	; (8001910 <SystemCoreClockUpdate+0xf4>)
 80018da:	601a      	str	r2, [r3, #0]
      break;
 80018dc:	bf00      	nop
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 80018de:	4b0a      	ldr	r3, [pc, #40]	; (8001908 <SystemCoreClockUpdate+0xec>)
 80018e0:	689b      	ldr	r3, [r3, #8]
 80018e2:	091b      	lsrs	r3, r3, #4
 80018e4:	f003 030f 	and.w	r3, r3, #15
 80018e8:	4a0b      	ldr	r2, [pc, #44]	; (8001918 <SystemCoreClockUpdate+0xfc>)
 80018ea:	5cd3      	ldrb	r3, [r2, r3]
 80018ec:	613b      	str	r3, [r7, #16]
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 80018ee:	4b07      	ldr	r3, [pc, #28]	; (800190c <SystemCoreClockUpdate+0xf0>)
 80018f0:	681a      	ldr	r2, [r3, #0]
 80018f2:	693b      	ldr	r3, [r7, #16]
 80018f4:	fa22 f303 	lsr.w	r3, r2, r3
 80018f8:	4a04      	ldr	r2, [pc, #16]	; (800190c <SystemCoreClockUpdate+0xf0>)
 80018fa:	6013      	str	r3, [r2, #0]
}
 80018fc:	bf00      	nop
 80018fe:	371c      	adds	r7, #28
 8001900:	46bd      	mov	sp, r7
 8001902:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001906:	4770      	bx	lr
 8001908:	40023800 	.word	0x40023800
 800190c:	20000000 	.word	0x20000000
 8001910:	00f42400 	.word	0x00f42400
 8001914:	007a1200 	.word	0x007a1200
 8001918:	080050ec 	.word	0x080050ec

0800191c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 800191c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001954 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001920:	480d      	ldr	r0, [pc, #52]	; (8001958 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 8001922:	490e      	ldr	r1, [pc, #56]	; (800195c <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8001924:	4a0e      	ldr	r2, [pc, #56]	; (8001960 <LoopFillZerobss+0x1e>)
  movs r3, #0
 8001926:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001928:	e002      	b.n	8001930 <LoopCopyDataInit>

0800192a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800192a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800192c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800192e:	3304      	adds	r3, #4

08001930 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001930:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001932:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001934:	d3f9      	bcc.n	800192a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001936:	4a0b      	ldr	r2, [pc, #44]	; (8001964 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8001938:	4c0b      	ldr	r4, [pc, #44]	; (8001968 <LoopFillZerobss+0x26>)
  movs r3, #0
 800193a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800193c:	e001      	b.n	8001942 <LoopFillZerobss>

0800193e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800193e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001940:	3204      	adds	r2, #4

08001942 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001942:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001944:	d3fb      	bcc.n	800193e <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8001946:	f7ff ff57 	bl	80017f8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800194a:	f000 fe4f 	bl	80025ec <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800194e:	f7ff f983 	bl	8000c58 <main>
  bx  lr    
 8001952:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8001954:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8001958:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800195c:	200001d0 	.word	0x200001d0
  ldr r2, =_sidata
 8001960:	08005490 	.word	0x08005490
  ldr r2, =_sbss
 8001964:	200001d0 	.word	0x200001d0
  ldr r4, =_ebss
 8001968:	200003a4 	.word	0x200003a4

0800196c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800196c:	e7fe      	b.n	800196c <ADC_IRQHandler>
	...

08001970 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001970:	b480      	push	{r7}
 8001972:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001974:	4b06      	ldr	r3, [pc, #24]	; (8001990 <HAL_IncTick+0x20>)
 8001976:	781b      	ldrb	r3, [r3, #0]
 8001978:	461a      	mov	r2, r3
 800197a:	4b06      	ldr	r3, [pc, #24]	; (8001994 <HAL_IncTick+0x24>)
 800197c:	681b      	ldr	r3, [r3, #0]
 800197e:	4413      	add	r3, r2
 8001980:	4a04      	ldr	r2, [pc, #16]	; (8001994 <HAL_IncTick+0x24>)
 8001982:	6013      	str	r3, [r2, #0]
}
 8001984:	bf00      	nop
 8001986:	46bd      	mov	sp, r7
 8001988:	f85d 7b04 	ldr.w	r7, [sp], #4
 800198c:	4770      	bx	lr
 800198e:	bf00      	nop
 8001990:	20000004 	.word	0x20000004
 8001994:	20000254 	.word	0x20000254

08001998 <__cvt>:
 8001998:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800199c:	ec55 4b10 	vmov	r4, r5, d0
 80019a0:	2d00      	cmp	r5, #0
 80019a2:	460e      	mov	r6, r1
 80019a4:	4619      	mov	r1, r3
 80019a6:	462b      	mov	r3, r5
 80019a8:	bfbb      	ittet	lt
 80019aa:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 80019ae:	461d      	movlt	r5, r3
 80019b0:	2300      	movge	r3, #0
 80019b2:	232d      	movlt	r3, #45	; 0x2d
 80019b4:	700b      	strb	r3, [r1, #0]
 80019b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80019b8:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80019bc:	4691      	mov	r9, r2
 80019be:	f023 0820 	bic.w	r8, r3, #32
 80019c2:	bfbc      	itt	lt
 80019c4:	4622      	movlt	r2, r4
 80019c6:	4614      	movlt	r4, r2
 80019c8:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80019cc:	d005      	beq.n	80019da <__cvt+0x42>
 80019ce:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80019d2:	d100      	bne.n	80019d6 <__cvt+0x3e>
 80019d4:	3601      	adds	r6, #1
 80019d6:	2102      	movs	r1, #2
 80019d8:	e000      	b.n	80019dc <__cvt+0x44>
 80019da:	2103      	movs	r1, #3
 80019dc:	ab03      	add	r3, sp, #12
 80019de:	9301      	str	r3, [sp, #4]
 80019e0:	ab02      	add	r3, sp, #8
 80019e2:	9300      	str	r3, [sp, #0]
 80019e4:	ec45 4b10 	vmov	d0, r4, r5
 80019e8:	4653      	mov	r3, sl
 80019ea:	4632      	mov	r2, r6
 80019ec:	f000 feac 	bl	8002748 <_dtoa_r>
 80019f0:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80019f4:	4607      	mov	r7, r0
 80019f6:	d102      	bne.n	80019fe <__cvt+0x66>
 80019f8:	f019 0f01 	tst.w	r9, #1
 80019fc:	d022      	beq.n	8001a44 <__cvt+0xac>
 80019fe:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001a02:	eb07 0906 	add.w	r9, r7, r6
 8001a06:	d110      	bne.n	8001a2a <__cvt+0x92>
 8001a08:	783b      	ldrb	r3, [r7, #0]
 8001a0a:	2b30      	cmp	r3, #48	; 0x30
 8001a0c:	d10a      	bne.n	8001a24 <__cvt+0x8c>
 8001a0e:	2200      	movs	r2, #0
 8001a10:	2300      	movs	r3, #0
 8001a12:	4620      	mov	r0, r4
 8001a14:	4629      	mov	r1, r5
 8001a16:	f7ff f85f 	bl	8000ad8 <__aeabi_dcmpeq>
 8001a1a:	b918      	cbnz	r0, 8001a24 <__cvt+0x8c>
 8001a1c:	f1c6 0601 	rsb	r6, r6, #1
 8001a20:	f8ca 6000 	str.w	r6, [sl]
 8001a24:	f8da 3000 	ldr.w	r3, [sl]
 8001a28:	4499      	add	r9, r3
 8001a2a:	2200      	movs	r2, #0
 8001a2c:	2300      	movs	r3, #0
 8001a2e:	4620      	mov	r0, r4
 8001a30:	4629      	mov	r1, r5
 8001a32:	f7ff f851 	bl	8000ad8 <__aeabi_dcmpeq>
 8001a36:	b108      	cbz	r0, 8001a3c <__cvt+0xa4>
 8001a38:	f8cd 900c 	str.w	r9, [sp, #12]
 8001a3c:	2230      	movs	r2, #48	; 0x30
 8001a3e:	9b03      	ldr	r3, [sp, #12]
 8001a40:	454b      	cmp	r3, r9
 8001a42:	d307      	bcc.n	8001a54 <__cvt+0xbc>
 8001a44:	9b03      	ldr	r3, [sp, #12]
 8001a46:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001a48:	1bdb      	subs	r3, r3, r7
 8001a4a:	4638      	mov	r0, r7
 8001a4c:	6013      	str	r3, [r2, #0]
 8001a4e:	b004      	add	sp, #16
 8001a50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001a54:	1c59      	adds	r1, r3, #1
 8001a56:	9103      	str	r1, [sp, #12]
 8001a58:	701a      	strb	r2, [r3, #0]
 8001a5a:	e7f0      	b.n	8001a3e <__cvt+0xa6>

08001a5c <__exponent>:
 8001a5c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001a5e:	4603      	mov	r3, r0
 8001a60:	2900      	cmp	r1, #0
 8001a62:	bfb8      	it	lt
 8001a64:	4249      	neglt	r1, r1
 8001a66:	f803 2b02 	strb.w	r2, [r3], #2
 8001a6a:	bfb4      	ite	lt
 8001a6c:	222d      	movlt	r2, #45	; 0x2d
 8001a6e:	222b      	movge	r2, #43	; 0x2b
 8001a70:	2909      	cmp	r1, #9
 8001a72:	7042      	strb	r2, [r0, #1]
 8001a74:	dd2a      	ble.n	8001acc <__exponent+0x70>
 8001a76:	f10d 0207 	add.w	r2, sp, #7
 8001a7a:	4617      	mov	r7, r2
 8001a7c:	260a      	movs	r6, #10
 8001a7e:	4694      	mov	ip, r2
 8001a80:	fb91 f5f6 	sdiv	r5, r1, r6
 8001a84:	fb06 1415 	mls	r4, r6, r5, r1
 8001a88:	3430      	adds	r4, #48	; 0x30
 8001a8a:	f80c 4c01 	strb.w	r4, [ip, #-1]
 8001a8e:	460c      	mov	r4, r1
 8001a90:	2c63      	cmp	r4, #99	; 0x63
 8001a92:	f102 32ff 	add.w	r2, r2, #4294967295
 8001a96:	4629      	mov	r1, r5
 8001a98:	dcf1      	bgt.n	8001a7e <__exponent+0x22>
 8001a9a:	3130      	adds	r1, #48	; 0x30
 8001a9c:	f1ac 0402 	sub.w	r4, ip, #2
 8001aa0:	f802 1c01 	strb.w	r1, [r2, #-1]
 8001aa4:	1c41      	adds	r1, r0, #1
 8001aa6:	4622      	mov	r2, r4
 8001aa8:	42ba      	cmp	r2, r7
 8001aaa:	d30a      	bcc.n	8001ac2 <__exponent+0x66>
 8001aac:	f10d 0209 	add.w	r2, sp, #9
 8001ab0:	eba2 020c 	sub.w	r2, r2, ip
 8001ab4:	42bc      	cmp	r4, r7
 8001ab6:	bf88      	it	hi
 8001ab8:	2200      	movhi	r2, #0
 8001aba:	4413      	add	r3, r2
 8001abc:	1a18      	subs	r0, r3, r0
 8001abe:	b003      	add	sp, #12
 8001ac0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ac2:	f812 5b01 	ldrb.w	r5, [r2], #1
 8001ac6:	f801 5f01 	strb.w	r5, [r1, #1]!
 8001aca:	e7ed      	b.n	8001aa8 <__exponent+0x4c>
 8001acc:	2330      	movs	r3, #48	; 0x30
 8001ace:	3130      	adds	r1, #48	; 0x30
 8001ad0:	7083      	strb	r3, [r0, #2]
 8001ad2:	70c1      	strb	r1, [r0, #3]
 8001ad4:	1d03      	adds	r3, r0, #4
 8001ad6:	e7f1      	b.n	8001abc <__exponent+0x60>

08001ad8 <_printf_float>:
 8001ad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001adc:	ed2d 8b02 	vpush	{d8}
 8001ae0:	b08d      	sub	sp, #52	; 0x34
 8001ae2:	460c      	mov	r4, r1
 8001ae4:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8001ae8:	4616      	mov	r6, r2
 8001aea:	461f      	mov	r7, r3
 8001aec:	4605      	mov	r5, r0
 8001aee:	f000 fd2d 	bl	800254c <_localeconv_r>
 8001af2:	f8d0 a000 	ldr.w	sl, [r0]
 8001af6:	4650      	mov	r0, sl
 8001af8:	f7fe fbc2 	bl	8000280 <strlen>
 8001afc:	2300      	movs	r3, #0
 8001afe:	930a      	str	r3, [sp, #40]	; 0x28
 8001b00:	6823      	ldr	r3, [r4, #0]
 8001b02:	9305      	str	r3, [sp, #20]
 8001b04:	f8d8 3000 	ldr.w	r3, [r8]
 8001b08:	f894 b018 	ldrb.w	fp, [r4, #24]
 8001b0c:	3307      	adds	r3, #7
 8001b0e:	f023 0307 	bic.w	r3, r3, #7
 8001b12:	f103 0208 	add.w	r2, r3, #8
 8001b16:	f8c8 2000 	str.w	r2, [r8]
 8001b1a:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001b1e:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8001b22:	9307      	str	r3, [sp, #28]
 8001b24:	f8cd 8018 	str.w	r8, [sp, #24]
 8001b28:	ee08 0a10 	vmov	s16, r0
 8001b2c:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 8001b30:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001b34:	4b9e      	ldr	r3, [pc, #632]	; (8001db0 <_printf_float+0x2d8>)
 8001b36:	f04f 32ff 	mov.w	r2, #4294967295
 8001b3a:	f7fe ffff 	bl	8000b3c <__aeabi_dcmpun>
 8001b3e:	bb88      	cbnz	r0, 8001ba4 <_printf_float+0xcc>
 8001b40:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001b44:	4b9a      	ldr	r3, [pc, #616]	; (8001db0 <_printf_float+0x2d8>)
 8001b46:	f04f 32ff 	mov.w	r2, #4294967295
 8001b4a:	f7fe ffd9 	bl	8000b00 <__aeabi_dcmple>
 8001b4e:	bb48      	cbnz	r0, 8001ba4 <_printf_float+0xcc>
 8001b50:	2200      	movs	r2, #0
 8001b52:	2300      	movs	r3, #0
 8001b54:	4640      	mov	r0, r8
 8001b56:	4649      	mov	r1, r9
 8001b58:	f7fe ffc8 	bl	8000aec <__aeabi_dcmplt>
 8001b5c:	b110      	cbz	r0, 8001b64 <_printf_float+0x8c>
 8001b5e:	232d      	movs	r3, #45	; 0x2d
 8001b60:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001b64:	4a93      	ldr	r2, [pc, #588]	; (8001db4 <_printf_float+0x2dc>)
 8001b66:	4b94      	ldr	r3, [pc, #592]	; (8001db8 <_printf_float+0x2e0>)
 8001b68:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8001b6c:	bf94      	ite	ls
 8001b6e:	4690      	movls	r8, r2
 8001b70:	4698      	movhi	r8, r3
 8001b72:	2303      	movs	r3, #3
 8001b74:	6123      	str	r3, [r4, #16]
 8001b76:	9b05      	ldr	r3, [sp, #20]
 8001b78:	f023 0304 	bic.w	r3, r3, #4
 8001b7c:	6023      	str	r3, [r4, #0]
 8001b7e:	f04f 0900 	mov.w	r9, #0
 8001b82:	9700      	str	r7, [sp, #0]
 8001b84:	4633      	mov	r3, r6
 8001b86:	aa0b      	add	r2, sp, #44	; 0x2c
 8001b88:	4621      	mov	r1, r4
 8001b8a:	4628      	mov	r0, r5
 8001b8c:	f000 f9da 	bl	8001f44 <_printf_common>
 8001b90:	3001      	adds	r0, #1
 8001b92:	f040 8090 	bne.w	8001cb6 <_printf_float+0x1de>
 8001b96:	f04f 30ff 	mov.w	r0, #4294967295
 8001b9a:	b00d      	add	sp, #52	; 0x34
 8001b9c:	ecbd 8b02 	vpop	{d8}
 8001ba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001ba4:	4642      	mov	r2, r8
 8001ba6:	464b      	mov	r3, r9
 8001ba8:	4640      	mov	r0, r8
 8001baa:	4649      	mov	r1, r9
 8001bac:	f7fe ffc6 	bl	8000b3c <__aeabi_dcmpun>
 8001bb0:	b140      	cbz	r0, 8001bc4 <_printf_float+0xec>
 8001bb2:	464b      	mov	r3, r9
 8001bb4:	2b00      	cmp	r3, #0
 8001bb6:	bfbc      	itt	lt
 8001bb8:	232d      	movlt	r3, #45	; 0x2d
 8001bba:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8001bbe:	4a7f      	ldr	r2, [pc, #508]	; (8001dbc <_printf_float+0x2e4>)
 8001bc0:	4b7f      	ldr	r3, [pc, #508]	; (8001dc0 <_printf_float+0x2e8>)
 8001bc2:	e7d1      	b.n	8001b68 <_printf_float+0x90>
 8001bc4:	6863      	ldr	r3, [r4, #4]
 8001bc6:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8001bca:	9206      	str	r2, [sp, #24]
 8001bcc:	1c5a      	adds	r2, r3, #1
 8001bce:	d13f      	bne.n	8001c50 <_printf_float+0x178>
 8001bd0:	2306      	movs	r3, #6
 8001bd2:	6063      	str	r3, [r4, #4]
 8001bd4:	9b05      	ldr	r3, [sp, #20]
 8001bd6:	6861      	ldr	r1, [r4, #4]
 8001bd8:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8001bdc:	2300      	movs	r3, #0
 8001bde:	9303      	str	r3, [sp, #12]
 8001be0:	ab0a      	add	r3, sp, #40	; 0x28
 8001be2:	e9cd b301 	strd	fp, r3, [sp, #4]
 8001be6:	ab09      	add	r3, sp, #36	; 0x24
 8001be8:	ec49 8b10 	vmov	d0, r8, r9
 8001bec:	9300      	str	r3, [sp, #0]
 8001bee:	6022      	str	r2, [r4, #0]
 8001bf0:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8001bf4:	4628      	mov	r0, r5
 8001bf6:	f7ff fecf 	bl	8001998 <__cvt>
 8001bfa:	9b06      	ldr	r3, [sp, #24]
 8001bfc:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001bfe:	2b47      	cmp	r3, #71	; 0x47
 8001c00:	4680      	mov	r8, r0
 8001c02:	d108      	bne.n	8001c16 <_printf_float+0x13e>
 8001c04:	1cc8      	adds	r0, r1, #3
 8001c06:	db02      	blt.n	8001c0e <_printf_float+0x136>
 8001c08:	6863      	ldr	r3, [r4, #4]
 8001c0a:	4299      	cmp	r1, r3
 8001c0c:	dd41      	ble.n	8001c92 <_printf_float+0x1ba>
 8001c0e:	f1ab 0302 	sub.w	r3, fp, #2
 8001c12:	fa5f fb83 	uxtb.w	fp, r3
 8001c16:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001c1a:	d820      	bhi.n	8001c5e <_printf_float+0x186>
 8001c1c:	3901      	subs	r1, #1
 8001c1e:	465a      	mov	r2, fp
 8001c20:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001c24:	9109      	str	r1, [sp, #36]	; 0x24
 8001c26:	f7ff ff19 	bl	8001a5c <__exponent>
 8001c2a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001c2c:	1813      	adds	r3, r2, r0
 8001c2e:	2a01      	cmp	r2, #1
 8001c30:	4681      	mov	r9, r0
 8001c32:	6123      	str	r3, [r4, #16]
 8001c34:	dc02      	bgt.n	8001c3c <_printf_float+0x164>
 8001c36:	6822      	ldr	r2, [r4, #0]
 8001c38:	07d2      	lsls	r2, r2, #31
 8001c3a:	d501      	bpl.n	8001c40 <_printf_float+0x168>
 8001c3c:	3301      	adds	r3, #1
 8001c3e:	6123      	str	r3, [r4, #16]
 8001c40:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8001c44:	2b00      	cmp	r3, #0
 8001c46:	d09c      	beq.n	8001b82 <_printf_float+0xaa>
 8001c48:	232d      	movs	r3, #45	; 0x2d
 8001c4a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001c4e:	e798      	b.n	8001b82 <_printf_float+0xaa>
 8001c50:	9a06      	ldr	r2, [sp, #24]
 8001c52:	2a47      	cmp	r2, #71	; 0x47
 8001c54:	d1be      	bne.n	8001bd4 <_printf_float+0xfc>
 8001c56:	2b00      	cmp	r3, #0
 8001c58:	d1bc      	bne.n	8001bd4 <_printf_float+0xfc>
 8001c5a:	2301      	movs	r3, #1
 8001c5c:	e7b9      	b.n	8001bd2 <_printf_float+0xfa>
 8001c5e:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8001c62:	d118      	bne.n	8001c96 <_printf_float+0x1be>
 8001c64:	2900      	cmp	r1, #0
 8001c66:	6863      	ldr	r3, [r4, #4]
 8001c68:	dd0b      	ble.n	8001c82 <_printf_float+0x1aa>
 8001c6a:	6121      	str	r1, [r4, #16]
 8001c6c:	b913      	cbnz	r3, 8001c74 <_printf_float+0x19c>
 8001c6e:	6822      	ldr	r2, [r4, #0]
 8001c70:	07d0      	lsls	r0, r2, #31
 8001c72:	d502      	bpl.n	8001c7a <_printf_float+0x1a2>
 8001c74:	3301      	adds	r3, #1
 8001c76:	440b      	add	r3, r1
 8001c78:	6123      	str	r3, [r4, #16]
 8001c7a:	65a1      	str	r1, [r4, #88]	; 0x58
 8001c7c:	f04f 0900 	mov.w	r9, #0
 8001c80:	e7de      	b.n	8001c40 <_printf_float+0x168>
 8001c82:	b913      	cbnz	r3, 8001c8a <_printf_float+0x1b2>
 8001c84:	6822      	ldr	r2, [r4, #0]
 8001c86:	07d2      	lsls	r2, r2, #31
 8001c88:	d501      	bpl.n	8001c8e <_printf_float+0x1b6>
 8001c8a:	3302      	adds	r3, #2
 8001c8c:	e7f4      	b.n	8001c78 <_printf_float+0x1a0>
 8001c8e:	2301      	movs	r3, #1
 8001c90:	e7f2      	b.n	8001c78 <_printf_float+0x1a0>
 8001c92:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8001c96:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001c98:	4299      	cmp	r1, r3
 8001c9a:	db05      	blt.n	8001ca8 <_printf_float+0x1d0>
 8001c9c:	6823      	ldr	r3, [r4, #0]
 8001c9e:	6121      	str	r1, [r4, #16]
 8001ca0:	07d8      	lsls	r0, r3, #31
 8001ca2:	d5ea      	bpl.n	8001c7a <_printf_float+0x1a2>
 8001ca4:	1c4b      	adds	r3, r1, #1
 8001ca6:	e7e7      	b.n	8001c78 <_printf_float+0x1a0>
 8001ca8:	2900      	cmp	r1, #0
 8001caa:	bfd4      	ite	le
 8001cac:	f1c1 0202 	rsble	r2, r1, #2
 8001cb0:	2201      	movgt	r2, #1
 8001cb2:	4413      	add	r3, r2
 8001cb4:	e7e0      	b.n	8001c78 <_printf_float+0x1a0>
 8001cb6:	6823      	ldr	r3, [r4, #0]
 8001cb8:	055a      	lsls	r2, r3, #21
 8001cba:	d407      	bmi.n	8001ccc <_printf_float+0x1f4>
 8001cbc:	6923      	ldr	r3, [r4, #16]
 8001cbe:	4642      	mov	r2, r8
 8001cc0:	4631      	mov	r1, r6
 8001cc2:	4628      	mov	r0, r5
 8001cc4:	47b8      	blx	r7
 8001cc6:	3001      	adds	r0, #1
 8001cc8:	d12c      	bne.n	8001d24 <_printf_float+0x24c>
 8001cca:	e764      	b.n	8001b96 <_printf_float+0xbe>
 8001ccc:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001cd0:	f240 80e0 	bls.w	8001e94 <_printf_float+0x3bc>
 8001cd4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001cd8:	2200      	movs	r2, #0
 8001cda:	2300      	movs	r3, #0
 8001cdc:	f7fe fefc 	bl	8000ad8 <__aeabi_dcmpeq>
 8001ce0:	2800      	cmp	r0, #0
 8001ce2:	d034      	beq.n	8001d4e <_printf_float+0x276>
 8001ce4:	4a37      	ldr	r2, [pc, #220]	; (8001dc4 <_printf_float+0x2ec>)
 8001ce6:	2301      	movs	r3, #1
 8001ce8:	4631      	mov	r1, r6
 8001cea:	4628      	mov	r0, r5
 8001cec:	47b8      	blx	r7
 8001cee:	3001      	adds	r0, #1
 8001cf0:	f43f af51 	beq.w	8001b96 <_printf_float+0xbe>
 8001cf4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001cf8:	429a      	cmp	r2, r3
 8001cfa:	db02      	blt.n	8001d02 <_printf_float+0x22a>
 8001cfc:	6823      	ldr	r3, [r4, #0]
 8001cfe:	07d8      	lsls	r0, r3, #31
 8001d00:	d510      	bpl.n	8001d24 <_printf_float+0x24c>
 8001d02:	ee18 3a10 	vmov	r3, s16
 8001d06:	4652      	mov	r2, sl
 8001d08:	4631      	mov	r1, r6
 8001d0a:	4628      	mov	r0, r5
 8001d0c:	47b8      	blx	r7
 8001d0e:	3001      	adds	r0, #1
 8001d10:	f43f af41 	beq.w	8001b96 <_printf_float+0xbe>
 8001d14:	f04f 0800 	mov.w	r8, #0
 8001d18:	f104 091a 	add.w	r9, r4, #26
 8001d1c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001d1e:	3b01      	subs	r3, #1
 8001d20:	4543      	cmp	r3, r8
 8001d22:	dc09      	bgt.n	8001d38 <_printf_float+0x260>
 8001d24:	6823      	ldr	r3, [r4, #0]
 8001d26:	079b      	lsls	r3, r3, #30
 8001d28:	f100 8107 	bmi.w	8001f3a <_printf_float+0x462>
 8001d2c:	68e0      	ldr	r0, [r4, #12]
 8001d2e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8001d30:	4298      	cmp	r0, r3
 8001d32:	bfb8      	it	lt
 8001d34:	4618      	movlt	r0, r3
 8001d36:	e730      	b.n	8001b9a <_printf_float+0xc2>
 8001d38:	2301      	movs	r3, #1
 8001d3a:	464a      	mov	r2, r9
 8001d3c:	4631      	mov	r1, r6
 8001d3e:	4628      	mov	r0, r5
 8001d40:	47b8      	blx	r7
 8001d42:	3001      	adds	r0, #1
 8001d44:	f43f af27 	beq.w	8001b96 <_printf_float+0xbe>
 8001d48:	f108 0801 	add.w	r8, r8, #1
 8001d4c:	e7e6      	b.n	8001d1c <_printf_float+0x244>
 8001d4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001d50:	2b00      	cmp	r3, #0
 8001d52:	dc39      	bgt.n	8001dc8 <_printf_float+0x2f0>
 8001d54:	4a1b      	ldr	r2, [pc, #108]	; (8001dc4 <_printf_float+0x2ec>)
 8001d56:	2301      	movs	r3, #1
 8001d58:	4631      	mov	r1, r6
 8001d5a:	4628      	mov	r0, r5
 8001d5c:	47b8      	blx	r7
 8001d5e:	3001      	adds	r0, #1
 8001d60:	f43f af19 	beq.w	8001b96 <_printf_float+0xbe>
 8001d64:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8001d68:	4313      	orrs	r3, r2
 8001d6a:	d102      	bne.n	8001d72 <_printf_float+0x29a>
 8001d6c:	6823      	ldr	r3, [r4, #0]
 8001d6e:	07d9      	lsls	r1, r3, #31
 8001d70:	d5d8      	bpl.n	8001d24 <_printf_float+0x24c>
 8001d72:	ee18 3a10 	vmov	r3, s16
 8001d76:	4652      	mov	r2, sl
 8001d78:	4631      	mov	r1, r6
 8001d7a:	4628      	mov	r0, r5
 8001d7c:	47b8      	blx	r7
 8001d7e:	3001      	adds	r0, #1
 8001d80:	f43f af09 	beq.w	8001b96 <_printf_float+0xbe>
 8001d84:	f04f 0900 	mov.w	r9, #0
 8001d88:	f104 0a1a 	add.w	sl, r4, #26
 8001d8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001d8e:	425b      	negs	r3, r3
 8001d90:	454b      	cmp	r3, r9
 8001d92:	dc01      	bgt.n	8001d98 <_printf_float+0x2c0>
 8001d94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001d96:	e792      	b.n	8001cbe <_printf_float+0x1e6>
 8001d98:	2301      	movs	r3, #1
 8001d9a:	4652      	mov	r2, sl
 8001d9c:	4631      	mov	r1, r6
 8001d9e:	4628      	mov	r0, r5
 8001da0:	47b8      	blx	r7
 8001da2:	3001      	adds	r0, #1
 8001da4:	f43f aef7 	beq.w	8001b96 <_printf_float+0xbe>
 8001da8:	f109 0901 	add.w	r9, r9, #1
 8001dac:	e7ee      	b.n	8001d8c <_printf_float+0x2b4>
 8001dae:	bf00      	nop
 8001db0:	7fefffff 	.word	0x7fefffff
 8001db4:	080050fc 	.word	0x080050fc
 8001db8:	08005100 	.word	0x08005100
 8001dbc:	08005104 	.word	0x08005104
 8001dc0:	08005108 	.word	0x08005108
 8001dc4:	0800533b 	.word	0x0800533b
 8001dc8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001dca:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001dcc:	429a      	cmp	r2, r3
 8001dce:	bfa8      	it	ge
 8001dd0:	461a      	movge	r2, r3
 8001dd2:	2a00      	cmp	r2, #0
 8001dd4:	4691      	mov	r9, r2
 8001dd6:	dc37      	bgt.n	8001e48 <_printf_float+0x370>
 8001dd8:	f04f 0b00 	mov.w	fp, #0
 8001ddc:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001de0:	f104 021a 	add.w	r2, r4, #26
 8001de4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001de6:	9305      	str	r3, [sp, #20]
 8001de8:	eba3 0309 	sub.w	r3, r3, r9
 8001dec:	455b      	cmp	r3, fp
 8001dee:	dc33      	bgt.n	8001e58 <_printf_float+0x380>
 8001df0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001df4:	429a      	cmp	r2, r3
 8001df6:	db3b      	blt.n	8001e70 <_printf_float+0x398>
 8001df8:	6823      	ldr	r3, [r4, #0]
 8001dfa:	07da      	lsls	r2, r3, #31
 8001dfc:	d438      	bmi.n	8001e70 <_printf_float+0x398>
 8001dfe:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8001e02:	eba2 0903 	sub.w	r9, r2, r3
 8001e06:	9b05      	ldr	r3, [sp, #20]
 8001e08:	1ad2      	subs	r2, r2, r3
 8001e0a:	4591      	cmp	r9, r2
 8001e0c:	bfa8      	it	ge
 8001e0e:	4691      	movge	r9, r2
 8001e10:	f1b9 0f00 	cmp.w	r9, #0
 8001e14:	dc35      	bgt.n	8001e82 <_printf_float+0x3aa>
 8001e16:	f04f 0800 	mov.w	r8, #0
 8001e1a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001e1e:	f104 0a1a 	add.w	sl, r4, #26
 8001e22:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001e26:	1a9b      	subs	r3, r3, r2
 8001e28:	eba3 0309 	sub.w	r3, r3, r9
 8001e2c:	4543      	cmp	r3, r8
 8001e2e:	f77f af79 	ble.w	8001d24 <_printf_float+0x24c>
 8001e32:	2301      	movs	r3, #1
 8001e34:	4652      	mov	r2, sl
 8001e36:	4631      	mov	r1, r6
 8001e38:	4628      	mov	r0, r5
 8001e3a:	47b8      	blx	r7
 8001e3c:	3001      	adds	r0, #1
 8001e3e:	f43f aeaa 	beq.w	8001b96 <_printf_float+0xbe>
 8001e42:	f108 0801 	add.w	r8, r8, #1
 8001e46:	e7ec      	b.n	8001e22 <_printf_float+0x34a>
 8001e48:	4613      	mov	r3, r2
 8001e4a:	4631      	mov	r1, r6
 8001e4c:	4642      	mov	r2, r8
 8001e4e:	4628      	mov	r0, r5
 8001e50:	47b8      	blx	r7
 8001e52:	3001      	adds	r0, #1
 8001e54:	d1c0      	bne.n	8001dd8 <_printf_float+0x300>
 8001e56:	e69e      	b.n	8001b96 <_printf_float+0xbe>
 8001e58:	2301      	movs	r3, #1
 8001e5a:	4631      	mov	r1, r6
 8001e5c:	4628      	mov	r0, r5
 8001e5e:	9205      	str	r2, [sp, #20]
 8001e60:	47b8      	blx	r7
 8001e62:	3001      	adds	r0, #1
 8001e64:	f43f ae97 	beq.w	8001b96 <_printf_float+0xbe>
 8001e68:	9a05      	ldr	r2, [sp, #20]
 8001e6a:	f10b 0b01 	add.w	fp, fp, #1
 8001e6e:	e7b9      	b.n	8001de4 <_printf_float+0x30c>
 8001e70:	ee18 3a10 	vmov	r3, s16
 8001e74:	4652      	mov	r2, sl
 8001e76:	4631      	mov	r1, r6
 8001e78:	4628      	mov	r0, r5
 8001e7a:	47b8      	blx	r7
 8001e7c:	3001      	adds	r0, #1
 8001e7e:	d1be      	bne.n	8001dfe <_printf_float+0x326>
 8001e80:	e689      	b.n	8001b96 <_printf_float+0xbe>
 8001e82:	9a05      	ldr	r2, [sp, #20]
 8001e84:	464b      	mov	r3, r9
 8001e86:	4442      	add	r2, r8
 8001e88:	4631      	mov	r1, r6
 8001e8a:	4628      	mov	r0, r5
 8001e8c:	47b8      	blx	r7
 8001e8e:	3001      	adds	r0, #1
 8001e90:	d1c1      	bne.n	8001e16 <_printf_float+0x33e>
 8001e92:	e680      	b.n	8001b96 <_printf_float+0xbe>
 8001e94:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001e96:	2a01      	cmp	r2, #1
 8001e98:	dc01      	bgt.n	8001e9e <_printf_float+0x3c6>
 8001e9a:	07db      	lsls	r3, r3, #31
 8001e9c:	d53a      	bpl.n	8001f14 <_printf_float+0x43c>
 8001e9e:	2301      	movs	r3, #1
 8001ea0:	4642      	mov	r2, r8
 8001ea2:	4631      	mov	r1, r6
 8001ea4:	4628      	mov	r0, r5
 8001ea6:	47b8      	blx	r7
 8001ea8:	3001      	adds	r0, #1
 8001eaa:	f43f ae74 	beq.w	8001b96 <_printf_float+0xbe>
 8001eae:	ee18 3a10 	vmov	r3, s16
 8001eb2:	4652      	mov	r2, sl
 8001eb4:	4631      	mov	r1, r6
 8001eb6:	4628      	mov	r0, r5
 8001eb8:	47b8      	blx	r7
 8001eba:	3001      	adds	r0, #1
 8001ebc:	f43f ae6b 	beq.w	8001b96 <_printf_float+0xbe>
 8001ec0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001ec4:	2200      	movs	r2, #0
 8001ec6:	2300      	movs	r3, #0
 8001ec8:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8001ecc:	f7fe fe04 	bl	8000ad8 <__aeabi_dcmpeq>
 8001ed0:	b9d8      	cbnz	r0, 8001f0a <_printf_float+0x432>
 8001ed2:	f10a 33ff 	add.w	r3, sl, #4294967295
 8001ed6:	f108 0201 	add.w	r2, r8, #1
 8001eda:	4631      	mov	r1, r6
 8001edc:	4628      	mov	r0, r5
 8001ede:	47b8      	blx	r7
 8001ee0:	3001      	adds	r0, #1
 8001ee2:	d10e      	bne.n	8001f02 <_printf_float+0x42a>
 8001ee4:	e657      	b.n	8001b96 <_printf_float+0xbe>
 8001ee6:	2301      	movs	r3, #1
 8001ee8:	4652      	mov	r2, sl
 8001eea:	4631      	mov	r1, r6
 8001eec:	4628      	mov	r0, r5
 8001eee:	47b8      	blx	r7
 8001ef0:	3001      	adds	r0, #1
 8001ef2:	f43f ae50 	beq.w	8001b96 <_printf_float+0xbe>
 8001ef6:	f108 0801 	add.w	r8, r8, #1
 8001efa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001efc:	3b01      	subs	r3, #1
 8001efe:	4543      	cmp	r3, r8
 8001f00:	dcf1      	bgt.n	8001ee6 <_printf_float+0x40e>
 8001f02:	464b      	mov	r3, r9
 8001f04:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001f08:	e6da      	b.n	8001cc0 <_printf_float+0x1e8>
 8001f0a:	f04f 0800 	mov.w	r8, #0
 8001f0e:	f104 0a1a 	add.w	sl, r4, #26
 8001f12:	e7f2      	b.n	8001efa <_printf_float+0x422>
 8001f14:	2301      	movs	r3, #1
 8001f16:	4642      	mov	r2, r8
 8001f18:	e7df      	b.n	8001eda <_printf_float+0x402>
 8001f1a:	2301      	movs	r3, #1
 8001f1c:	464a      	mov	r2, r9
 8001f1e:	4631      	mov	r1, r6
 8001f20:	4628      	mov	r0, r5
 8001f22:	47b8      	blx	r7
 8001f24:	3001      	adds	r0, #1
 8001f26:	f43f ae36 	beq.w	8001b96 <_printf_float+0xbe>
 8001f2a:	f108 0801 	add.w	r8, r8, #1
 8001f2e:	68e3      	ldr	r3, [r4, #12]
 8001f30:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001f32:	1a5b      	subs	r3, r3, r1
 8001f34:	4543      	cmp	r3, r8
 8001f36:	dcf0      	bgt.n	8001f1a <_printf_float+0x442>
 8001f38:	e6f8      	b.n	8001d2c <_printf_float+0x254>
 8001f3a:	f04f 0800 	mov.w	r8, #0
 8001f3e:	f104 0919 	add.w	r9, r4, #25
 8001f42:	e7f4      	b.n	8001f2e <_printf_float+0x456>

08001f44 <_printf_common>:
 8001f44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001f48:	4616      	mov	r6, r2
 8001f4a:	4699      	mov	r9, r3
 8001f4c:	688a      	ldr	r2, [r1, #8]
 8001f4e:	690b      	ldr	r3, [r1, #16]
 8001f50:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001f54:	4293      	cmp	r3, r2
 8001f56:	bfb8      	it	lt
 8001f58:	4613      	movlt	r3, r2
 8001f5a:	6033      	str	r3, [r6, #0]
 8001f5c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001f60:	4607      	mov	r7, r0
 8001f62:	460c      	mov	r4, r1
 8001f64:	b10a      	cbz	r2, 8001f6a <_printf_common+0x26>
 8001f66:	3301      	adds	r3, #1
 8001f68:	6033      	str	r3, [r6, #0]
 8001f6a:	6823      	ldr	r3, [r4, #0]
 8001f6c:	0699      	lsls	r1, r3, #26
 8001f6e:	bf42      	ittt	mi
 8001f70:	6833      	ldrmi	r3, [r6, #0]
 8001f72:	3302      	addmi	r3, #2
 8001f74:	6033      	strmi	r3, [r6, #0]
 8001f76:	6825      	ldr	r5, [r4, #0]
 8001f78:	f015 0506 	ands.w	r5, r5, #6
 8001f7c:	d106      	bne.n	8001f8c <_printf_common+0x48>
 8001f7e:	f104 0a19 	add.w	sl, r4, #25
 8001f82:	68e3      	ldr	r3, [r4, #12]
 8001f84:	6832      	ldr	r2, [r6, #0]
 8001f86:	1a9b      	subs	r3, r3, r2
 8001f88:	42ab      	cmp	r3, r5
 8001f8a:	dc26      	bgt.n	8001fda <_printf_common+0x96>
 8001f8c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001f90:	1e13      	subs	r3, r2, #0
 8001f92:	6822      	ldr	r2, [r4, #0]
 8001f94:	bf18      	it	ne
 8001f96:	2301      	movne	r3, #1
 8001f98:	0692      	lsls	r2, r2, #26
 8001f9a:	d42b      	bmi.n	8001ff4 <_printf_common+0xb0>
 8001f9c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001fa0:	4649      	mov	r1, r9
 8001fa2:	4638      	mov	r0, r7
 8001fa4:	47c0      	blx	r8
 8001fa6:	3001      	adds	r0, #1
 8001fa8:	d01e      	beq.n	8001fe8 <_printf_common+0xa4>
 8001faa:	6823      	ldr	r3, [r4, #0]
 8001fac:	6922      	ldr	r2, [r4, #16]
 8001fae:	f003 0306 	and.w	r3, r3, #6
 8001fb2:	2b04      	cmp	r3, #4
 8001fb4:	bf02      	ittt	eq
 8001fb6:	68e5      	ldreq	r5, [r4, #12]
 8001fb8:	6833      	ldreq	r3, [r6, #0]
 8001fba:	1aed      	subeq	r5, r5, r3
 8001fbc:	68a3      	ldr	r3, [r4, #8]
 8001fbe:	bf0c      	ite	eq
 8001fc0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001fc4:	2500      	movne	r5, #0
 8001fc6:	4293      	cmp	r3, r2
 8001fc8:	bfc4      	itt	gt
 8001fca:	1a9b      	subgt	r3, r3, r2
 8001fcc:	18ed      	addgt	r5, r5, r3
 8001fce:	2600      	movs	r6, #0
 8001fd0:	341a      	adds	r4, #26
 8001fd2:	42b5      	cmp	r5, r6
 8001fd4:	d11a      	bne.n	800200c <_printf_common+0xc8>
 8001fd6:	2000      	movs	r0, #0
 8001fd8:	e008      	b.n	8001fec <_printf_common+0xa8>
 8001fda:	2301      	movs	r3, #1
 8001fdc:	4652      	mov	r2, sl
 8001fde:	4649      	mov	r1, r9
 8001fe0:	4638      	mov	r0, r7
 8001fe2:	47c0      	blx	r8
 8001fe4:	3001      	adds	r0, #1
 8001fe6:	d103      	bne.n	8001ff0 <_printf_common+0xac>
 8001fe8:	f04f 30ff 	mov.w	r0, #4294967295
 8001fec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001ff0:	3501      	adds	r5, #1
 8001ff2:	e7c6      	b.n	8001f82 <_printf_common+0x3e>
 8001ff4:	18e1      	adds	r1, r4, r3
 8001ff6:	1c5a      	adds	r2, r3, #1
 8001ff8:	2030      	movs	r0, #48	; 0x30
 8001ffa:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001ffe:	4422      	add	r2, r4
 8002000:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002004:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002008:	3302      	adds	r3, #2
 800200a:	e7c7      	b.n	8001f9c <_printf_common+0x58>
 800200c:	2301      	movs	r3, #1
 800200e:	4622      	mov	r2, r4
 8002010:	4649      	mov	r1, r9
 8002012:	4638      	mov	r0, r7
 8002014:	47c0      	blx	r8
 8002016:	3001      	adds	r0, #1
 8002018:	d0e6      	beq.n	8001fe8 <_printf_common+0xa4>
 800201a:	3601      	adds	r6, #1
 800201c:	e7d9      	b.n	8001fd2 <_printf_common+0x8e>
	...

08002020 <_printf_i>:
 8002020:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002024:	7e0f      	ldrb	r7, [r1, #24]
 8002026:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8002028:	2f78      	cmp	r7, #120	; 0x78
 800202a:	4691      	mov	r9, r2
 800202c:	4680      	mov	r8, r0
 800202e:	460c      	mov	r4, r1
 8002030:	469a      	mov	sl, r3
 8002032:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8002036:	d807      	bhi.n	8002048 <_printf_i+0x28>
 8002038:	2f62      	cmp	r7, #98	; 0x62
 800203a:	d80a      	bhi.n	8002052 <_printf_i+0x32>
 800203c:	2f00      	cmp	r7, #0
 800203e:	f000 80d4 	beq.w	80021ea <_printf_i+0x1ca>
 8002042:	2f58      	cmp	r7, #88	; 0x58
 8002044:	f000 80c0 	beq.w	80021c8 <_printf_i+0x1a8>
 8002048:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800204c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8002050:	e03a      	b.n	80020c8 <_printf_i+0xa8>
 8002052:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8002056:	2b15      	cmp	r3, #21
 8002058:	d8f6      	bhi.n	8002048 <_printf_i+0x28>
 800205a:	a101      	add	r1, pc, #4	; (adr r1, 8002060 <_printf_i+0x40>)
 800205c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002060:	080020b9 	.word	0x080020b9
 8002064:	080020cd 	.word	0x080020cd
 8002068:	08002049 	.word	0x08002049
 800206c:	08002049 	.word	0x08002049
 8002070:	08002049 	.word	0x08002049
 8002074:	08002049 	.word	0x08002049
 8002078:	080020cd 	.word	0x080020cd
 800207c:	08002049 	.word	0x08002049
 8002080:	08002049 	.word	0x08002049
 8002084:	08002049 	.word	0x08002049
 8002088:	08002049 	.word	0x08002049
 800208c:	080021d1 	.word	0x080021d1
 8002090:	080020f9 	.word	0x080020f9
 8002094:	0800218b 	.word	0x0800218b
 8002098:	08002049 	.word	0x08002049
 800209c:	08002049 	.word	0x08002049
 80020a0:	080021f3 	.word	0x080021f3
 80020a4:	08002049 	.word	0x08002049
 80020a8:	080020f9 	.word	0x080020f9
 80020ac:	08002049 	.word	0x08002049
 80020b0:	08002049 	.word	0x08002049
 80020b4:	08002193 	.word	0x08002193
 80020b8:	682b      	ldr	r3, [r5, #0]
 80020ba:	1d1a      	adds	r2, r3, #4
 80020bc:	681b      	ldr	r3, [r3, #0]
 80020be:	602a      	str	r2, [r5, #0]
 80020c0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80020c4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80020c8:	2301      	movs	r3, #1
 80020ca:	e09f      	b.n	800220c <_printf_i+0x1ec>
 80020cc:	6820      	ldr	r0, [r4, #0]
 80020ce:	682b      	ldr	r3, [r5, #0]
 80020d0:	0607      	lsls	r7, r0, #24
 80020d2:	f103 0104 	add.w	r1, r3, #4
 80020d6:	6029      	str	r1, [r5, #0]
 80020d8:	d501      	bpl.n	80020de <_printf_i+0xbe>
 80020da:	681e      	ldr	r6, [r3, #0]
 80020dc:	e003      	b.n	80020e6 <_printf_i+0xc6>
 80020de:	0646      	lsls	r6, r0, #25
 80020e0:	d5fb      	bpl.n	80020da <_printf_i+0xba>
 80020e2:	f9b3 6000 	ldrsh.w	r6, [r3]
 80020e6:	2e00      	cmp	r6, #0
 80020e8:	da03      	bge.n	80020f2 <_printf_i+0xd2>
 80020ea:	232d      	movs	r3, #45	; 0x2d
 80020ec:	4276      	negs	r6, r6
 80020ee:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80020f2:	485a      	ldr	r0, [pc, #360]	; (800225c <_printf_i+0x23c>)
 80020f4:	230a      	movs	r3, #10
 80020f6:	e012      	b.n	800211e <_printf_i+0xfe>
 80020f8:	682b      	ldr	r3, [r5, #0]
 80020fa:	6820      	ldr	r0, [r4, #0]
 80020fc:	1d19      	adds	r1, r3, #4
 80020fe:	6029      	str	r1, [r5, #0]
 8002100:	0605      	lsls	r5, r0, #24
 8002102:	d501      	bpl.n	8002108 <_printf_i+0xe8>
 8002104:	681e      	ldr	r6, [r3, #0]
 8002106:	e002      	b.n	800210e <_printf_i+0xee>
 8002108:	0641      	lsls	r1, r0, #25
 800210a:	d5fb      	bpl.n	8002104 <_printf_i+0xe4>
 800210c:	881e      	ldrh	r6, [r3, #0]
 800210e:	4853      	ldr	r0, [pc, #332]	; (800225c <_printf_i+0x23c>)
 8002110:	2f6f      	cmp	r7, #111	; 0x6f
 8002112:	bf0c      	ite	eq
 8002114:	2308      	moveq	r3, #8
 8002116:	230a      	movne	r3, #10
 8002118:	2100      	movs	r1, #0
 800211a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800211e:	6865      	ldr	r5, [r4, #4]
 8002120:	60a5      	str	r5, [r4, #8]
 8002122:	2d00      	cmp	r5, #0
 8002124:	bfa2      	ittt	ge
 8002126:	6821      	ldrge	r1, [r4, #0]
 8002128:	f021 0104 	bicge.w	r1, r1, #4
 800212c:	6021      	strge	r1, [r4, #0]
 800212e:	b90e      	cbnz	r6, 8002134 <_printf_i+0x114>
 8002130:	2d00      	cmp	r5, #0
 8002132:	d04b      	beq.n	80021cc <_printf_i+0x1ac>
 8002134:	4615      	mov	r5, r2
 8002136:	fbb6 f1f3 	udiv	r1, r6, r3
 800213a:	fb03 6711 	mls	r7, r3, r1, r6
 800213e:	5dc7      	ldrb	r7, [r0, r7]
 8002140:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8002144:	4637      	mov	r7, r6
 8002146:	42bb      	cmp	r3, r7
 8002148:	460e      	mov	r6, r1
 800214a:	d9f4      	bls.n	8002136 <_printf_i+0x116>
 800214c:	2b08      	cmp	r3, #8
 800214e:	d10b      	bne.n	8002168 <_printf_i+0x148>
 8002150:	6823      	ldr	r3, [r4, #0]
 8002152:	07de      	lsls	r6, r3, #31
 8002154:	d508      	bpl.n	8002168 <_printf_i+0x148>
 8002156:	6923      	ldr	r3, [r4, #16]
 8002158:	6861      	ldr	r1, [r4, #4]
 800215a:	4299      	cmp	r1, r3
 800215c:	bfde      	ittt	le
 800215e:	2330      	movle	r3, #48	; 0x30
 8002160:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002164:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002168:	1b52      	subs	r2, r2, r5
 800216a:	6122      	str	r2, [r4, #16]
 800216c:	f8cd a000 	str.w	sl, [sp]
 8002170:	464b      	mov	r3, r9
 8002172:	aa03      	add	r2, sp, #12
 8002174:	4621      	mov	r1, r4
 8002176:	4640      	mov	r0, r8
 8002178:	f7ff fee4 	bl	8001f44 <_printf_common>
 800217c:	3001      	adds	r0, #1
 800217e:	d14a      	bne.n	8002216 <_printf_i+0x1f6>
 8002180:	f04f 30ff 	mov.w	r0, #4294967295
 8002184:	b004      	add	sp, #16
 8002186:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800218a:	6823      	ldr	r3, [r4, #0]
 800218c:	f043 0320 	orr.w	r3, r3, #32
 8002190:	6023      	str	r3, [r4, #0]
 8002192:	4833      	ldr	r0, [pc, #204]	; (8002260 <_printf_i+0x240>)
 8002194:	2778      	movs	r7, #120	; 0x78
 8002196:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800219a:	6823      	ldr	r3, [r4, #0]
 800219c:	6829      	ldr	r1, [r5, #0]
 800219e:	061f      	lsls	r7, r3, #24
 80021a0:	f851 6b04 	ldr.w	r6, [r1], #4
 80021a4:	d402      	bmi.n	80021ac <_printf_i+0x18c>
 80021a6:	065f      	lsls	r7, r3, #25
 80021a8:	bf48      	it	mi
 80021aa:	b2b6      	uxthmi	r6, r6
 80021ac:	07df      	lsls	r7, r3, #31
 80021ae:	bf48      	it	mi
 80021b0:	f043 0320 	orrmi.w	r3, r3, #32
 80021b4:	6029      	str	r1, [r5, #0]
 80021b6:	bf48      	it	mi
 80021b8:	6023      	strmi	r3, [r4, #0]
 80021ba:	b91e      	cbnz	r6, 80021c4 <_printf_i+0x1a4>
 80021bc:	6823      	ldr	r3, [r4, #0]
 80021be:	f023 0320 	bic.w	r3, r3, #32
 80021c2:	6023      	str	r3, [r4, #0]
 80021c4:	2310      	movs	r3, #16
 80021c6:	e7a7      	b.n	8002118 <_printf_i+0xf8>
 80021c8:	4824      	ldr	r0, [pc, #144]	; (800225c <_printf_i+0x23c>)
 80021ca:	e7e4      	b.n	8002196 <_printf_i+0x176>
 80021cc:	4615      	mov	r5, r2
 80021ce:	e7bd      	b.n	800214c <_printf_i+0x12c>
 80021d0:	682b      	ldr	r3, [r5, #0]
 80021d2:	6826      	ldr	r6, [r4, #0]
 80021d4:	6961      	ldr	r1, [r4, #20]
 80021d6:	1d18      	adds	r0, r3, #4
 80021d8:	6028      	str	r0, [r5, #0]
 80021da:	0635      	lsls	r5, r6, #24
 80021dc:	681b      	ldr	r3, [r3, #0]
 80021de:	d501      	bpl.n	80021e4 <_printf_i+0x1c4>
 80021e0:	6019      	str	r1, [r3, #0]
 80021e2:	e002      	b.n	80021ea <_printf_i+0x1ca>
 80021e4:	0670      	lsls	r0, r6, #25
 80021e6:	d5fb      	bpl.n	80021e0 <_printf_i+0x1c0>
 80021e8:	8019      	strh	r1, [r3, #0]
 80021ea:	2300      	movs	r3, #0
 80021ec:	6123      	str	r3, [r4, #16]
 80021ee:	4615      	mov	r5, r2
 80021f0:	e7bc      	b.n	800216c <_printf_i+0x14c>
 80021f2:	682b      	ldr	r3, [r5, #0]
 80021f4:	1d1a      	adds	r2, r3, #4
 80021f6:	602a      	str	r2, [r5, #0]
 80021f8:	681d      	ldr	r5, [r3, #0]
 80021fa:	6862      	ldr	r2, [r4, #4]
 80021fc:	2100      	movs	r1, #0
 80021fe:	4628      	mov	r0, r5
 8002200:	f7fd ffee 	bl	80001e0 <memchr>
 8002204:	b108      	cbz	r0, 800220a <_printf_i+0x1ea>
 8002206:	1b40      	subs	r0, r0, r5
 8002208:	6060      	str	r0, [r4, #4]
 800220a:	6863      	ldr	r3, [r4, #4]
 800220c:	6123      	str	r3, [r4, #16]
 800220e:	2300      	movs	r3, #0
 8002210:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002214:	e7aa      	b.n	800216c <_printf_i+0x14c>
 8002216:	6923      	ldr	r3, [r4, #16]
 8002218:	462a      	mov	r2, r5
 800221a:	4649      	mov	r1, r9
 800221c:	4640      	mov	r0, r8
 800221e:	47d0      	blx	sl
 8002220:	3001      	adds	r0, #1
 8002222:	d0ad      	beq.n	8002180 <_printf_i+0x160>
 8002224:	6823      	ldr	r3, [r4, #0]
 8002226:	079b      	lsls	r3, r3, #30
 8002228:	d413      	bmi.n	8002252 <_printf_i+0x232>
 800222a:	68e0      	ldr	r0, [r4, #12]
 800222c:	9b03      	ldr	r3, [sp, #12]
 800222e:	4298      	cmp	r0, r3
 8002230:	bfb8      	it	lt
 8002232:	4618      	movlt	r0, r3
 8002234:	e7a6      	b.n	8002184 <_printf_i+0x164>
 8002236:	2301      	movs	r3, #1
 8002238:	4632      	mov	r2, r6
 800223a:	4649      	mov	r1, r9
 800223c:	4640      	mov	r0, r8
 800223e:	47d0      	blx	sl
 8002240:	3001      	adds	r0, #1
 8002242:	d09d      	beq.n	8002180 <_printf_i+0x160>
 8002244:	3501      	adds	r5, #1
 8002246:	68e3      	ldr	r3, [r4, #12]
 8002248:	9903      	ldr	r1, [sp, #12]
 800224a:	1a5b      	subs	r3, r3, r1
 800224c:	42ab      	cmp	r3, r5
 800224e:	dcf2      	bgt.n	8002236 <_printf_i+0x216>
 8002250:	e7eb      	b.n	800222a <_printf_i+0x20a>
 8002252:	2500      	movs	r5, #0
 8002254:	f104 0619 	add.w	r6, r4, #25
 8002258:	e7f5      	b.n	8002246 <_printf_i+0x226>
 800225a:	bf00      	nop
 800225c:	0800510c 	.word	0x0800510c
 8002260:	0800511d 	.word	0x0800511d

08002264 <std>:
 8002264:	2300      	movs	r3, #0
 8002266:	b510      	push	{r4, lr}
 8002268:	4604      	mov	r4, r0
 800226a:	e9c0 3300 	strd	r3, r3, [r0]
 800226e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002272:	6083      	str	r3, [r0, #8]
 8002274:	8181      	strh	r1, [r0, #12]
 8002276:	6643      	str	r3, [r0, #100]	; 0x64
 8002278:	81c2      	strh	r2, [r0, #14]
 800227a:	6183      	str	r3, [r0, #24]
 800227c:	4619      	mov	r1, r3
 800227e:	2208      	movs	r2, #8
 8002280:	305c      	adds	r0, #92	; 0x5c
 8002282:	f000 f944 	bl	800250e <memset>
 8002286:	4b05      	ldr	r3, [pc, #20]	; (800229c <std+0x38>)
 8002288:	6263      	str	r3, [r4, #36]	; 0x24
 800228a:	4b05      	ldr	r3, [pc, #20]	; (80022a0 <std+0x3c>)
 800228c:	62a3      	str	r3, [r4, #40]	; 0x28
 800228e:	4b05      	ldr	r3, [pc, #20]	; (80022a4 <std+0x40>)
 8002290:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002292:	4b05      	ldr	r3, [pc, #20]	; (80022a8 <std+0x44>)
 8002294:	6224      	str	r4, [r4, #32]
 8002296:	6323      	str	r3, [r4, #48]	; 0x30
 8002298:	bd10      	pop	{r4, pc}
 800229a:	bf00      	nop
 800229c:	08002485 	.word	0x08002485
 80022a0:	080024ab 	.word	0x080024ab
 80022a4:	080024e3 	.word	0x080024e3
 80022a8:	08002507 	.word	0x08002507

080022ac <stdio_exit_handler>:
 80022ac:	4a02      	ldr	r2, [pc, #8]	; (80022b8 <stdio_exit_handler+0xc>)
 80022ae:	4903      	ldr	r1, [pc, #12]	; (80022bc <stdio_exit_handler+0x10>)
 80022b0:	4803      	ldr	r0, [pc, #12]	; (80022c0 <stdio_exit_handler+0x14>)
 80022b2:	f000 b869 	b.w	8002388 <_fwalk_sglue>
 80022b6:	bf00      	nop
 80022b8:	20000008 	.word	0x20000008
 80022bc:	08004621 	.word	0x08004621
 80022c0:	20000014 	.word	0x20000014

080022c4 <cleanup_stdio>:
 80022c4:	6841      	ldr	r1, [r0, #4]
 80022c6:	4b0c      	ldr	r3, [pc, #48]	; (80022f8 <cleanup_stdio+0x34>)
 80022c8:	4299      	cmp	r1, r3
 80022ca:	b510      	push	{r4, lr}
 80022cc:	4604      	mov	r4, r0
 80022ce:	d001      	beq.n	80022d4 <cleanup_stdio+0x10>
 80022d0:	f002 f9a6 	bl	8004620 <_fflush_r>
 80022d4:	68a1      	ldr	r1, [r4, #8]
 80022d6:	4b09      	ldr	r3, [pc, #36]	; (80022fc <cleanup_stdio+0x38>)
 80022d8:	4299      	cmp	r1, r3
 80022da:	d002      	beq.n	80022e2 <cleanup_stdio+0x1e>
 80022dc:	4620      	mov	r0, r4
 80022de:	f002 f99f 	bl	8004620 <_fflush_r>
 80022e2:	68e1      	ldr	r1, [r4, #12]
 80022e4:	4b06      	ldr	r3, [pc, #24]	; (8002300 <cleanup_stdio+0x3c>)
 80022e6:	4299      	cmp	r1, r3
 80022e8:	d004      	beq.n	80022f4 <cleanup_stdio+0x30>
 80022ea:	4620      	mov	r0, r4
 80022ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80022f0:	f002 b996 	b.w	8004620 <_fflush_r>
 80022f4:	bd10      	pop	{r4, pc}
 80022f6:	bf00      	nop
 80022f8:	20000258 	.word	0x20000258
 80022fc:	200002c0 	.word	0x200002c0
 8002300:	20000328 	.word	0x20000328

08002304 <global_stdio_init.part.0>:
 8002304:	b510      	push	{r4, lr}
 8002306:	4b0b      	ldr	r3, [pc, #44]	; (8002334 <global_stdio_init.part.0+0x30>)
 8002308:	4c0b      	ldr	r4, [pc, #44]	; (8002338 <global_stdio_init.part.0+0x34>)
 800230a:	4a0c      	ldr	r2, [pc, #48]	; (800233c <global_stdio_init.part.0+0x38>)
 800230c:	601a      	str	r2, [r3, #0]
 800230e:	4620      	mov	r0, r4
 8002310:	2200      	movs	r2, #0
 8002312:	2104      	movs	r1, #4
 8002314:	f7ff ffa6 	bl	8002264 <std>
 8002318:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800231c:	2201      	movs	r2, #1
 800231e:	2109      	movs	r1, #9
 8002320:	f7ff ffa0 	bl	8002264 <std>
 8002324:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8002328:	2202      	movs	r2, #2
 800232a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800232e:	2112      	movs	r1, #18
 8002330:	f7ff bf98 	b.w	8002264 <std>
 8002334:	20000390 	.word	0x20000390
 8002338:	20000258 	.word	0x20000258
 800233c:	080022ad 	.word	0x080022ad

08002340 <__sfp_lock_acquire>:
 8002340:	4801      	ldr	r0, [pc, #4]	; (8002348 <__sfp_lock_acquire+0x8>)
 8002342:	f000 b977 	b.w	8002634 <__retarget_lock_acquire_recursive>
 8002346:	bf00      	nop
 8002348:	20000399 	.word	0x20000399

0800234c <__sfp_lock_release>:
 800234c:	4801      	ldr	r0, [pc, #4]	; (8002354 <__sfp_lock_release+0x8>)
 800234e:	f000 b972 	b.w	8002636 <__retarget_lock_release_recursive>
 8002352:	bf00      	nop
 8002354:	20000399 	.word	0x20000399

08002358 <__sinit>:
 8002358:	b510      	push	{r4, lr}
 800235a:	4604      	mov	r4, r0
 800235c:	f7ff fff0 	bl	8002340 <__sfp_lock_acquire>
 8002360:	6a23      	ldr	r3, [r4, #32]
 8002362:	b11b      	cbz	r3, 800236c <__sinit+0x14>
 8002364:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002368:	f7ff bff0 	b.w	800234c <__sfp_lock_release>
 800236c:	4b04      	ldr	r3, [pc, #16]	; (8002380 <__sinit+0x28>)
 800236e:	6223      	str	r3, [r4, #32]
 8002370:	4b04      	ldr	r3, [pc, #16]	; (8002384 <__sinit+0x2c>)
 8002372:	681b      	ldr	r3, [r3, #0]
 8002374:	2b00      	cmp	r3, #0
 8002376:	d1f5      	bne.n	8002364 <__sinit+0xc>
 8002378:	f7ff ffc4 	bl	8002304 <global_stdio_init.part.0>
 800237c:	e7f2      	b.n	8002364 <__sinit+0xc>
 800237e:	bf00      	nop
 8002380:	080022c5 	.word	0x080022c5
 8002384:	20000390 	.word	0x20000390

08002388 <_fwalk_sglue>:
 8002388:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800238c:	4607      	mov	r7, r0
 800238e:	4688      	mov	r8, r1
 8002390:	4614      	mov	r4, r2
 8002392:	2600      	movs	r6, #0
 8002394:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002398:	f1b9 0901 	subs.w	r9, r9, #1
 800239c:	d505      	bpl.n	80023aa <_fwalk_sglue+0x22>
 800239e:	6824      	ldr	r4, [r4, #0]
 80023a0:	2c00      	cmp	r4, #0
 80023a2:	d1f7      	bne.n	8002394 <_fwalk_sglue+0xc>
 80023a4:	4630      	mov	r0, r6
 80023a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80023aa:	89ab      	ldrh	r3, [r5, #12]
 80023ac:	2b01      	cmp	r3, #1
 80023ae:	d907      	bls.n	80023c0 <_fwalk_sglue+0x38>
 80023b0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80023b4:	3301      	adds	r3, #1
 80023b6:	d003      	beq.n	80023c0 <_fwalk_sglue+0x38>
 80023b8:	4629      	mov	r1, r5
 80023ba:	4638      	mov	r0, r7
 80023bc:	47c0      	blx	r8
 80023be:	4306      	orrs	r6, r0
 80023c0:	3568      	adds	r5, #104	; 0x68
 80023c2:	e7e9      	b.n	8002398 <_fwalk_sglue+0x10>

080023c4 <sniprintf>:
 80023c4:	b40c      	push	{r2, r3}
 80023c6:	b530      	push	{r4, r5, lr}
 80023c8:	4b17      	ldr	r3, [pc, #92]	; (8002428 <sniprintf+0x64>)
 80023ca:	1e0c      	subs	r4, r1, #0
 80023cc:	681d      	ldr	r5, [r3, #0]
 80023ce:	b09d      	sub	sp, #116	; 0x74
 80023d0:	da08      	bge.n	80023e4 <sniprintf+0x20>
 80023d2:	238b      	movs	r3, #139	; 0x8b
 80023d4:	602b      	str	r3, [r5, #0]
 80023d6:	f04f 30ff 	mov.w	r0, #4294967295
 80023da:	b01d      	add	sp, #116	; 0x74
 80023dc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80023e0:	b002      	add	sp, #8
 80023e2:	4770      	bx	lr
 80023e4:	f44f 7302 	mov.w	r3, #520	; 0x208
 80023e8:	f8ad 3014 	strh.w	r3, [sp, #20]
 80023ec:	bf14      	ite	ne
 80023ee:	f104 33ff 	addne.w	r3, r4, #4294967295
 80023f2:	4623      	moveq	r3, r4
 80023f4:	9304      	str	r3, [sp, #16]
 80023f6:	9307      	str	r3, [sp, #28]
 80023f8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80023fc:	9002      	str	r0, [sp, #8]
 80023fe:	9006      	str	r0, [sp, #24]
 8002400:	f8ad 3016 	strh.w	r3, [sp, #22]
 8002404:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8002406:	ab21      	add	r3, sp, #132	; 0x84
 8002408:	a902      	add	r1, sp, #8
 800240a:	4628      	mov	r0, r5
 800240c:	9301      	str	r3, [sp, #4]
 800240e:	f001 fc63 	bl	8003cd8 <_svfiprintf_r>
 8002412:	1c43      	adds	r3, r0, #1
 8002414:	bfbc      	itt	lt
 8002416:	238b      	movlt	r3, #139	; 0x8b
 8002418:	602b      	strlt	r3, [r5, #0]
 800241a:	2c00      	cmp	r4, #0
 800241c:	d0dd      	beq.n	80023da <sniprintf+0x16>
 800241e:	9b02      	ldr	r3, [sp, #8]
 8002420:	2200      	movs	r2, #0
 8002422:	701a      	strb	r2, [r3, #0]
 8002424:	e7d9      	b.n	80023da <sniprintf+0x16>
 8002426:	bf00      	nop
 8002428:	20000060 	.word	0x20000060

0800242c <siscanf>:
 800242c:	b40e      	push	{r1, r2, r3}
 800242e:	b510      	push	{r4, lr}
 8002430:	b09f      	sub	sp, #124	; 0x7c
 8002432:	ac21      	add	r4, sp, #132	; 0x84
 8002434:	f44f 7101 	mov.w	r1, #516	; 0x204
 8002438:	f854 2b04 	ldr.w	r2, [r4], #4
 800243c:	9201      	str	r2, [sp, #4]
 800243e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8002442:	9004      	str	r0, [sp, #16]
 8002444:	9008      	str	r0, [sp, #32]
 8002446:	f7fd ff1b 	bl	8000280 <strlen>
 800244a:	4b0c      	ldr	r3, [pc, #48]	; (800247c <siscanf+0x50>)
 800244c:	9005      	str	r0, [sp, #20]
 800244e:	9009      	str	r0, [sp, #36]	; 0x24
 8002450:	930d      	str	r3, [sp, #52]	; 0x34
 8002452:	480b      	ldr	r0, [pc, #44]	; (8002480 <siscanf+0x54>)
 8002454:	9a01      	ldr	r2, [sp, #4]
 8002456:	6800      	ldr	r0, [r0, #0]
 8002458:	9403      	str	r4, [sp, #12]
 800245a:	2300      	movs	r3, #0
 800245c:	9311      	str	r3, [sp, #68]	; 0x44
 800245e:	9316      	str	r3, [sp, #88]	; 0x58
 8002460:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002464:	f8ad 301e 	strh.w	r3, [sp, #30]
 8002468:	a904      	add	r1, sp, #16
 800246a:	4623      	mov	r3, r4
 800246c:	f001 fd8c 	bl	8003f88 <__ssvfiscanf_r>
 8002470:	b01f      	add	sp, #124	; 0x7c
 8002472:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002476:	b003      	add	sp, #12
 8002478:	4770      	bx	lr
 800247a:	bf00      	nop
 800247c:	080024a7 	.word	0x080024a7
 8002480:	20000060 	.word	0x20000060

08002484 <__sread>:
 8002484:	b510      	push	{r4, lr}
 8002486:	460c      	mov	r4, r1
 8002488:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800248c:	f000 f884 	bl	8002598 <_read_r>
 8002490:	2800      	cmp	r0, #0
 8002492:	bfab      	itete	ge
 8002494:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8002496:	89a3      	ldrhlt	r3, [r4, #12]
 8002498:	181b      	addge	r3, r3, r0
 800249a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800249e:	bfac      	ite	ge
 80024a0:	6563      	strge	r3, [r4, #84]	; 0x54
 80024a2:	81a3      	strhlt	r3, [r4, #12]
 80024a4:	bd10      	pop	{r4, pc}

080024a6 <__seofread>:
 80024a6:	2000      	movs	r0, #0
 80024a8:	4770      	bx	lr

080024aa <__swrite>:
 80024aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80024ae:	461f      	mov	r7, r3
 80024b0:	898b      	ldrh	r3, [r1, #12]
 80024b2:	05db      	lsls	r3, r3, #23
 80024b4:	4605      	mov	r5, r0
 80024b6:	460c      	mov	r4, r1
 80024b8:	4616      	mov	r6, r2
 80024ba:	d505      	bpl.n	80024c8 <__swrite+0x1e>
 80024bc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80024c0:	2302      	movs	r3, #2
 80024c2:	2200      	movs	r2, #0
 80024c4:	f000 f856 	bl	8002574 <_lseek_r>
 80024c8:	89a3      	ldrh	r3, [r4, #12]
 80024ca:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80024ce:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80024d2:	81a3      	strh	r3, [r4, #12]
 80024d4:	4632      	mov	r2, r6
 80024d6:	463b      	mov	r3, r7
 80024d8:	4628      	mov	r0, r5
 80024da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80024de:	f000 b86d 	b.w	80025bc <_write_r>

080024e2 <__sseek>:
 80024e2:	b510      	push	{r4, lr}
 80024e4:	460c      	mov	r4, r1
 80024e6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80024ea:	f000 f843 	bl	8002574 <_lseek_r>
 80024ee:	1c43      	adds	r3, r0, #1
 80024f0:	89a3      	ldrh	r3, [r4, #12]
 80024f2:	bf15      	itete	ne
 80024f4:	6560      	strne	r0, [r4, #84]	; 0x54
 80024f6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80024fa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80024fe:	81a3      	strheq	r3, [r4, #12]
 8002500:	bf18      	it	ne
 8002502:	81a3      	strhne	r3, [r4, #12]
 8002504:	bd10      	pop	{r4, pc}

08002506 <__sclose>:
 8002506:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800250a:	f000 b823 	b.w	8002554 <_close_r>

0800250e <memset>:
 800250e:	4402      	add	r2, r0
 8002510:	4603      	mov	r3, r0
 8002512:	4293      	cmp	r3, r2
 8002514:	d100      	bne.n	8002518 <memset+0xa>
 8002516:	4770      	bx	lr
 8002518:	f803 1b01 	strb.w	r1, [r3], #1
 800251c:	e7f9      	b.n	8002512 <memset+0x4>

0800251e <strstr>:
 800251e:	780a      	ldrb	r2, [r1, #0]
 8002520:	b570      	push	{r4, r5, r6, lr}
 8002522:	b96a      	cbnz	r2, 8002540 <strstr+0x22>
 8002524:	bd70      	pop	{r4, r5, r6, pc}
 8002526:	429a      	cmp	r2, r3
 8002528:	d109      	bne.n	800253e <strstr+0x20>
 800252a:	460c      	mov	r4, r1
 800252c:	4605      	mov	r5, r0
 800252e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8002532:	2b00      	cmp	r3, #0
 8002534:	d0f6      	beq.n	8002524 <strstr+0x6>
 8002536:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 800253a:	429e      	cmp	r6, r3
 800253c:	d0f7      	beq.n	800252e <strstr+0x10>
 800253e:	3001      	adds	r0, #1
 8002540:	7803      	ldrb	r3, [r0, #0]
 8002542:	2b00      	cmp	r3, #0
 8002544:	d1ef      	bne.n	8002526 <strstr+0x8>
 8002546:	4618      	mov	r0, r3
 8002548:	e7ec      	b.n	8002524 <strstr+0x6>
	...

0800254c <_localeconv_r>:
 800254c:	4800      	ldr	r0, [pc, #0]	; (8002550 <_localeconv_r+0x4>)
 800254e:	4770      	bx	lr
 8002550:	20000154 	.word	0x20000154

08002554 <_close_r>:
 8002554:	b538      	push	{r3, r4, r5, lr}
 8002556:	4d06      	ldr	r5, [pc, #24]	; (8002570 <_close_r+0x1c>)
 8002558:	2300      	movs	r3, #0
 800255a:	4604      	mov	r4, r0
 800255c:	4608      	mov	r0, r1
 800255e:	602b      	str	r3, [r5, #0]
 8002560:	f7ff f8df 	bl	8001722 <_close>
 8002564:	1c43      	adds	r3, r0, #1
 8002566:	d102      	bne.n	800256e <_close_r+0x1a>
 8002568:	682b      	ldr	r3, [r5, #0]
 800256a:	b103      	cbz	r3, 800256e <_close_r+0x1a>
 800256c:	6023      	str	r3, [r4, #0]
 800256e:	bd38      	pop	{r3, r4, r5, pc}
 8002570:	20000394 	.word	0x20000394

08002574 <_lseek_r>:
 8002574:	b538      	push	{r3, r4, r5, lr}
 8002576:	4d07      	ldr	r5, [pc, #28]	; (8002594 <_lseek_r+0x20>)
 8002578:	4604      	mov	r4, r0
 800257a:	4608      	mov	r0, r1
 800257c:	4611      	mov	r1, r2
 800257e:	2200      	movs	r2, #0
 8002580:	602a      	str	r2, [r5, #0]
 8002582:	461a      	mov	r2, r3
 8002584:	f7ff f8f4 	bl	8001770 <_lseek>
 8002588:	1c43      	adds	r3, r0, #1
 800258a:	d102      	bne.n	8002592 <_lseek_r+0x1e>
 800258c:	682b      	ldr	r3, [r5, #0]
 800258e:	b103      	cbz	r3, 8002592 <_lseek_r+0x1e>
 8002590:	6023      	str	r3, [r4, #0]
 8002592:	bd38      	pop	{r3, r4, r5, pc}
 8002594:	20000394 	.word	0x20000394

08002598 <_read_r>:
 8002598:	b538      	push	{r3, r4, r5, lr}
 800259a:	4d07      	ldr	r5, [pc, #28]	; (80025b8 <_read_r+0x20>)
 800259c:	4604      	mov	r4, r0
 800259e:	4608      	mov	r0, r1
 80025a0:	4611      	mov	r1, r2
 80025a2:	2200      	movs	r2, #0
 80025a4:	602a      	str	r2, [r5, #0]
 80025a6:	461a      	mov	r2, r3
 80025a8:	f7ff f882 	bl	80016b0 <_read>
 80025ac:	1c43      	adds	r3, r0, #1
 80025ae:	d102      	bne.n	80025b6 <_read_r+0x1e>
 80025b0:	682b      	ldr	r3, [r5, #0]
 80025b2:	b103      	cbz	r3, 80025b6 <_read_r+0x1e>
 80025b4:	6023      	str	r3, [r4, #0]
 80025b6:	bd38      	pop	{r3, r4, r5, pc}
 80025b8:	20000394 	.word	0x20000394

080025bc <_write_r>:
 80025bc:	b538      	push	{r3, r4, r5, lr}
 80025be:	4d07      	ldr	r5, [pc, #28]	; (80025dc <_write_r+0x20>)
 80025c0:	4604      	mov	r4, r0
 80025c2:	4608      	mov	r0, r1
 80025c4:	4611      	mov	r1, r2
 80025c6:	2200      	movs	r2, #0
 80025c8:	602a      	str	r2, [r5, #0]
 80025ca:	461a      	mov	r2, r3
 80025cc:	f7ff f88d 	bl	80016ea <_write>
 80025d0:	1c43      	adds	r3, r0, #1
 80025d2:	d102      	bne.n	80025da <_write_r+0x1e>
 80025d4:	682b      	ldr	r3, [r5, #0]
 80025d6:	b103      	cbz	r3, 80025da <_write_r+0x1e>
 80025d8:	6023      	str	r3, [r4, #0]
 80025da:	bd38      	pop	{r3, r4, r5, pc}
 80025dc:	20000394 	.word	0x20000394

080025e0 <__errno>:
 80025e0:	4b01      	ldr	r3, [pc, #4]	; (80025e8 <__errno+0x8>)
 80025e2:	6818      	ldr	r0, [r3, #0]
 80025e4:	4770      	bx	lr
 80025e6:	bf00      	nop
 80025e8:	20000060 	.word	0x20000060

080025ec <__libc_init_array>:
 80025ec:	b570      	push	{r4, r5, r6, lr}
 80025ee:	4d0d      	ldr	r5, [pc, #52]	; (8002624 <__libc_init_array+0x38>)
 80025f0:	4c0d      	ldr	r4, [pc, #52]	; (8002628 <__libc_init_array+0x3c>)
 80025f2:	1b64      	subs	r4, r4, r5
 80025f4:	10a4      	asrs	r4, r4, #2
 80025f6:	2600      	movs	r6, #0
 80025f8:	42a6      	cmp	r6, r4
 80025fa:	d109      	bne.n	8002610 <__libc_init_array+0x24>
 80025fc:	4d0b      	ldr	r5, [pc, #44]	; (800262c <__libc_init_array+0x40>)
 80025fe:	4c0c      	ldr	r4, [pc, #48]	; (8002630 <__libc_init_array+0x44>)
 8002600:	f002 fd20 	bl	8005044 <_init>
 8002604:	1b64      	subs	r4, r4, r5
 8002606:	10a4      	asrs	r4, r4, #2
 8002608:	2600      	movs	r6, #0
 800260a:	42a6      	cmp	r6, r4
 800260c:	d105      	bne.n	800261a <__libc_init_array+0x2e>
 800260e:	bd70      	pop	{r4, r5, r6, pc}
 8002610:	f855 3b04 	ldr.w	r3, [r5], #4
 8002614:	4798      	blx	r3
 8002616:	3601      	adds	r6, #1
 8002618:	e7ee      	b.n	80025f8 <__libc_init_array+0xc>
 800261a:	f855 3b04 	ldr.w	r3, [r5], #4
 800261e:	4798      	blx	r3
 8002620:	3601      	adds	r6, #1
 8002622:	e7f2      	b.n	800260a <__libc_init_array+0x1e>
 8002624:	08005488 	.word	0x08005488
 8002628:	08005488 	.word	0x08005488
 800262c:	08005488 	.word	0x08005488
 8002630:	0800548c 	.word	0x0800548c

08002634 <__retarget_lock_acquire_recursive>:
 8002634:	4770      	bx	lr

08002636 <__retarget_lock_release_recursive>:
 8002636:	4770      	bx	lr

08002638 <quorem>:
 8002638:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800263c:	6903      	ldr	r3, [r0, #16]
 800263e:	690c      	ldr	r4, [r1, #16]
 8002640:	42a3      	cmp	r3, r4
 8002642:	4607      	mov	r7, r0
 8002644:	db7e      	blt.n	8002744 <quorem+0x10c>
 8002646:	3c01      	subs	r4, #1
 8002648:	f101 0814 	add.w	r8, r1, #20
 800264c:	f100 0514 	add.w	r5, r0, #20
 8002650:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002654:	9301      	str	r3, [sp, #4]
 8002656:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800265a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800265e:	3301      	adds	r3, #1
 8002660:	429a      	cmp	r2, r3
 8002662:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8002666:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800266a:	fbb2 f6f3 	udiv	r6, r2, r3
 800266e:	d331      	bcc.n	80026d4 <quorem+0x9c>
 8002670:	f04f 0e00 	mov.w	lr, #0
 8002674:	4640      	mov	r0, r8
 8002676:	46ac      	mov	ip, r5
 8002678:	46f2      	mov	sl, lr
 800267a:	f850 2b04 	ldr.w	r2, [r0], #4
 800267e:	b293      	uxth	r3, r2
 8002680:	fb06 e303 	mla	r3, r6, r3, lr
 8002684:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8002688:	0c1a      	lsrs	r2, r3, #16
 800268a:	b29b      	uxth	r3, r3
 800268c:	ebaa 0303 	sub.w	r3, sl, r3
 8002690:	f8dc a000 	ldr.w	sl, [ip]
 8002694:	fa13 f38a 	uxtah	r3, r3, sl
 8002698:	fb06 220e 	mla	r2, r6, lr, r2
 800269c:	9300      	str	r3, [sp, #0]
 800269e:	9b00      	ldr	r3, [sp, #0]
 80026a0:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80026a4:	b292      	uxth	r2, r2
 80026a6:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 80026aa:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80026ae:	f8bd 3000 	ldrh.w	r3, [sp]
 80026b2:	4581      	cmp	r9, r0
 80026b4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80026b8:	f84c 3b04 	str.w	r3, [ip], #4
 80026bc:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80026c0:	d2db      	bcs.n	800267a <quorem+0x42>
 80026c2:	f855 300b 	ldr.w	r3, [r5, fp]
 80026c6:	b92b      	cbnz	r3, 80026d4 <quorem+0x9c>
 80026c8:	9b01      	ldr	r3, [sp, #4]
 80026ca:	3b04      	subs	r3, #4
 80026cc:	429d      	cmp	r5, r3
 80026ce:	461a      	mov	r2, r3
 80026d0:	d32c      	bcc.n	800272c <quorem+0xf4>
 80026d2:	613c      	str	r4, [r7, #16]
 80026d4:	4638      	mov	r0, r7
 80026d6:	f001 f9a5 	bl	8003a24 <__mcmp>
 80026da:	2800      	cmp	r0, #0
 80026dc:	db22      	blt.n	8002724 <quorem+0xec>
 80026de:	3601      	adds	r6, #1
 80026e0:	4629      	mov	r1, r5
 80026e2:	2000      	movs	r0, #0
 80026e4:	f858 2b04 	ldr.w	r2, [r8], #4
 80026e8:	f8d1 c000 	ldr.w	ip, [r1]
 80026ec:	b293      	uxth	r3, r2
 80026ee:	1ac3      	subs	r3, r0, r3
 80026f0:	0c12      	lsrs	r2, r2, #16
 80026f2:	fa13 f38c 	uxtah	r3, r3, ip
 80026f6:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 80026fa:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80026fe:	b29b      	uxth	r3, r3
 8002700:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002704:	45c1      	cmp	r9, r8
 8002706:	f841 3b04 	str.w	r3, [r1], #4
 800270a:	ea4f 4022 	mov.w	r0, r2, asr #16
 800270e:	d2e9      	bcs.n	80026e4 <quorem+0xac>
 8002710:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002714:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002718:	b922      	cbnz	r2, 8002724 <quorem+0xec>
 800271a:	3b04      	subs	r3, #4
 800271c:	429d      	cmp	r5, r3
 800271e:	461a      	mov	r2, r3
 8002720:	d30a      	bcc.n	8002738 <quorem+0x100>
 8002722:	613c      	str	r4, [r7, #16]
 8002724:	4630      	mov	r0, r6
 8002726:	b003      	add	sp, #12
 8002728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800272c:	6812      	ldr	r2, [r2, #0]
 800272e:	3b04      	subs	r3, #4
 8002730:	2a00      	cmp	r2, #0
 8002732:	d1ce      	bne.n	80026d2 <quorem+0x9a>
 8002734:	3c01      	subs	r4, #1
 8002736:	e7c9      	b.n	80026cc <quorem+0x94>
 8002738:	6812      	ldr	r2, [r2, #0]
 800273a:	3b04      	subs	r3, #4
 800273c:	2a00      	cmp	r2, #0
 800273e:	d1f0      	bne.n	8002722 <quorem+0xea>
 8002740:	3c01      	subs	r4, #1
 8002742:	e7eb      	b.n	800271c <quorem+0xe4>
 8002744:	2000      	movs	r0, #0
 8002746:	e7ee      	b.n	8002726 <quorem+0xee>

08002748 <_dtoa_r>:
 8002748:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800274c:	ed2d 8b04 	vpush	{d8-d9}
 8002750:	69c5      	ldr	r5, [r0, #28]
 8002752:	b093      	sub	sp, #76	; 0x4c
 8002754:	ed8d 0b02 	vstr	d0, [sp, #8]
 8002758:	ec57 6b10 	vmov	r6, r7, d0
 800275c:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8002760:	9107      	str	r1, [sp, #28]
 8002762:	4604      	mov	r4, r0
 8002764:	920a      	str	r2, [sp, #40]	; 0x28
 8002766:	930d      	str	r3, [sp, #52]	; 0x34
 8002768:	b975      	cbnz	r5, 8002788 <_dtoa_r+0x40>
 800276a:	2010      	movs	r0, #16
 800276c:	f000 fe2a 	bl	80033c4 <malloc>
 8002770:	4602      	mov	r2, r0
 8002772:	61e0      	str	r0, [r4, #28]
 8002774:	b920      	cbnz	r0, 8002780 <_dtoa_r+0x38>
 8002776:	4bae      	ldr	r3, [pc, #696]	; (8002a30 <_dtoa_r+0x2e8>)
 8002778:	21ef      	movs	r1, #239	; 0xef
 800277a:	48ae      	ldr	r0, [pc, #696]	; (8002a34 <_dtoa_r+0x2ec>)
 800277c:	f002 f824 	bl	80047c8 <__assert_func>
 8002780:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002784:	6005      	str	r5, [r0, #0]
 8002786:	60c5      	str	r5, [r0, #12]
 8002788:	69e3      	ldr	r3, [r4, #28]
 800278a:	6819      	ldr	r1, [r3, #0]
 800278c:	b151      	cbz	r1, 80027a4 <_dtoa_r+0x5c>
 800278e:	685a      	ldr	r2, [r3, #4]
 8002790:	604a      	str	r2, [r1, #4]
 8002792:	2301      	movs	r3, #1
 8002794:	4093      	lsls	r3, r2
 8002796:	608b      	str	r3, [r1, #8]
 8002798:	4620      	mov	r0, r4
 800279a:	f000 ff07 	bl	80035ac <_Bfree>
 800279e:	69e3      	ldr	r3, [r4, #28]
 80027a0:	2200      	movs	r2, #0
 80027a2:	601a      	str	r2, [r3, #0]
 80027a4:	1e3b      	subs	r3, r7, #0
 80027a6:	bfbb      	ittet	lt
 80027a8:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80027ac:	9303      	strlt	r3, [sp, #12]
 80027ae:	2300      	movge	r3, #0
 80027b0:	2201      	movlt	r2, #1
 80027b2:	bfac      	ite	ge
 80027b4:	f8c8 3000 	strge.w	r3, [r8]
 80027b8:	f8c8 2000 	strlt.w	r2, [r8]
 80027bc:	4b9e      	ldr	r3, [pc, #632]	; (8002a38 <_dtoa_r+0x2f0>)
 80027be:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80027c2:	ea33 0308 	bics.w	r3, r3, r8
 80027c6:	d11b      	bne.n	8002800 <_dtoa_r+0xb8>
 80027c8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80027ca:	f242 730f 	movw	r3, #9999	; 0x270f
 80027ce:	6013      	str	r3, [r2, #0]
 80027d0:	f3c8 0313 	ubfx	r3, r8, #0, #20
 80027d4:	4333      	orrs	r3, r6
 80027d6:	f000 8593 	beq.w	8003300 <_dtoa_r+0xbb8>
 80027da:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80027dc:	b963      	cbnz	r3, 80027f8 <_dtoa_r+0xb0>
 80027de:	4b97      	ldr	r3, [pc, #604]	; (8002a3c <_dtoa_r+0x2f4>)
 80027e0:	e027      	b.n	8002832 <_dtoa_r+0xea>
 80027e2:	4b97      	ldr	r3, [pc, #604]	; (8002a40 <_dtoa_r+0x2f8>)
 80027e4:	9300      	str	r3, [sp, #0]
 80027e6:	3308      	adds	r3, #8
 80027e8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80027ea:	6013      	str	r3, [r2, #0]
 80027ec:	9800      	ldr	r0, [sp, #0]
 80027ee:	b013      	add	sp, #76	; 0x4c
 80027f0:	ecbd 8b04 	vpop	{d8-d9}
 80027f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80027f8:	4b90      	ldr	r3, [pc, #576]	; (8002a3c <_dtoa_r+0x2f4>)
 80027fa:	9300      	str	r3, [sp, #0]
 80027fc:	3303      	adds	r3, #3
 80027fe:	e7f3      	b.n	80027e8 <_dtoa_r+0xa0>
 8002800:	ed9d 7b02 	vldr	d7, [sp, #8]
 8002804:	2200      	movs	r2, #0
 8002806:	ec51 0b17 	vmov	r0, r1, d7
 800280a:	eeb0 8a47 	vmov.f32	s16, s14
 800280e:	eef0 8a67 	vmov.f32	s17, s15
 8002812:	2300      	movs	r3, #0
 8002814:	f7fe f960 	bl	8000ad8 <__aeabi_dcmpeq>
 8002818:	4681      	mov	r9, r0
 800281a:	b160      	cbz	r0, 8002836 <_dtoa_r+0xee>
 800281c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800281e:	2301      	movs	r3, #1
 8002820:	6013      	str	r3, [r2, #0]
 8002822:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002824:	2b00      	cmp	r3, #0
 8002826:	f000 8568 	beq.w	80032fa <_dtoa_r+0xbb2>
 800282a:	4b86      	ldr	r3, [pc, #536]	; (8002a44 <_dtoa_r+0x2fc>)
 800282c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800282e:	6013      	str	r3, [r2, #0]
 8002830:	3b01      	subs	r3, #1
 8002832:	9300      	str	r3, [sp, #0]
 8002834:	e7da      	b.n	80027ec <_dtoa_r+0xa4>
 8002836:	aa10      	add	r2, sp, #64	; 0x40
 8002838:	a911      	add	r1, sp, #68	; 0x44
 800283a:	4620      	mov	r0, r4
 800283c:	eeb0 0a48 	vmov.f32	s0, s16
 8002840:	eef0 0a68 	vmov.f32	s1, s17
 8002844:	f001 f994 	bl	8003b70 <__d2b>
 8002848:	f3c8 550a 	ubfx	r5, r8, #20, #11
 800284c:	4682      	mov	sl, r0
 800284e:	2d00      	cmp	r5, #0
 8002850:	d07f      	beq.n	8002952 <_dtoa_r+0x20a>
 8002852:	ee18 3a90 	vmov	r3, s17
 8002856:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800285a:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 800285e:	ec51 0b18 	vmov	r0, r1, d8
 8002862:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8002866:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800286a:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800286e:	4619      	mov	r1, r3
 8002870:	2200      	movs	r2, #0
 8002872:	4b75      	ldr	r3, [pc, #468]	; (8002a48 <_dtoa_r+0x300>)
 8002874:	f7fd fd10 	bl	8000298 <__aeabi_dsub>
 8002878:	a367      	add	r3, pc, #412	; (adr r3, 8002a18 <_dtoa_r+0x2d0>)
 800287a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800287e:	f7fd fec3 	bl	8000608 <__aeabi_dmul>
 8002882:	a367      	add	r3, pc, #412	; (adr r3, 8002a20 <_dtoa_r+0x2d8>)
 8002884:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002888:	f7fd fd08 	bl	800029c <__adddf3>
 800288c:	4606      	mov	r6, r0
 800288e:	4628      	mov	r0, r5
 8002890:	460f      	mov	r7, r1
 8002892:	f7fd fe4f 	bl	8000534 <__aeabi_i2d>
 8002896:	a364      	add	r3, pc, #400	; (adr r3, 8002a28 <_dtoa_r+0x2e0>)
 8002898:	e9d3 2300 	ldrd	r2, r3, [r3]
 800289c:	f7fd feb4 	bl	8000608 <__aeabi_dmul>
 80028a0:	4602      	mov	r2, r0
 80028a2:	460b      	mov	r3, r1
 80028a4:	4630      	mov	r0, r6
 80028a6:	4639      	mov	r1, r7
 80028a8:	f7fd fcf8 	bl	800029c <__adddf3>
 80028ac:	4606      	mov	r6, r0
 80028ae:	460f      	mov	r7, r1
 80028b0:	f7fe f95a 	bl	8000b68 <__aeabi_d2iz>
 80028b4:	2200      	movs	r2, #0
 80028b6:	4683      	mov	fp, r0
 80028b8:	2300      	movs	r3, #0
 80028ba:	4630      	mov	r0, r6
 80028bc:	4639      	mov	r1, r7
 80028be:	f7fe f915 	bl	8000aec <__aeabi_dcmplt>
 80028c2:	b148      	cbz	r0, 80028d8 <_dtoa_r+0x190>
 80028c4:	4658      	mov	r0, fp
 80028c6:	f7fd fe35 	bl	8000534 <__aeabi_i2d>
 80028ca:	4632      	mov	r2, r6
 80028cc:	463b      	mov	r3, r7
 80028ce:	f7fe f903 	bl	8000ad8 <__aeabi_dcmpeq>
 80028d2:	b908      	cbnz	r0, 80028d8 <_dtoa_r+0x190>
 80028d4:	f10b 3bff 	add.w	fp, fp, #4294967295
 80028d8:	f1bb 0f16 	cmp.w	fp, #22
 80028dc:	d857      	bhi.n	800298e <_dtoa_r+0x246>
 80028de:	4b5b      	ldr	r3, [pc, #364]	; (8002a4c <_dtoa_r+0x304>)
 80028e0:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 80028e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028e8:	ec51 0b18 	vmov	r0, r1, d8
 80028ec:	f7fe f8fe 	bl	8000aec <__aeabi_dcmplt>
 80028f0:	2800      	cmp	r0, #0
 80028f2:	d04e      	beq.n	8002992 <_dtoa_r+0x24a>
 80028f4:	f10b 3bff 	add.w	fp, fp, #4294967295
 80028f8:	2300      	movs	r3, #0
 80028fa:	930c      	str	r3, [sp, #48]	; 0x30
 80028fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80028fe:	1b5b      	subs	r3, r3, r5
 8002900:	1e5a      	subs	r2, r3, #1
 8002902:	bf45      	ittet	mi
 8002904:	f1c3 0301 	rsbmi	r3, r3, #1
 8002908:	9305      	strmi	r3, [sp, #20]
 800290a:	2300      	movpl	r3, #0
 800290c:	2300      	movmi	r3, #0
 800290e:	9206      	str	r2, [sp, #24]
 8002910:	bf54      	ite	pl
 8002912:	9305      	strpl	r3, [sp, #20]
 8002914:	9306      	strmi	r3, [sp, #24]
 8002916:	f1bb 0f00 	cmp.w	fp, #0
 800291a:	db3c      	blt.n	8002996 <_dtoa_r+0x24e>
 800291c:	9b06      	ldr	r3, [sp, #24]
 800291e:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 8002922:	445b      	add	r3, fp
 8002924:	9306      	str	r3, [sp, #24]
 8002926:	2300      	movs	r3, #0
 8002928:	9308      	str	r3, [sp, #32]
 800292a:	9b07      	ldr	r3, [sp, #28]
 800292c:	2b09      	cmp	r3, #9
 800292e:	d868      	bhi.n	8002a02 <_dtoa_r+0x2ba>
 8002930:	2b05      	cmp	r3, #5
 8002932:	bfc4      	itt	gt
 8002934:	3b04      	subgt	r3, #4
 8002936:	9307      	strgt	r3, [sp, #28]
 8002938:	9b07      	ldr	r3, [sp, #28]
 800293a:	f1a3 0302 	sub.w	r3, r3, #2
 800293e:	bfcc      	ite	gt
 8002940:	2500      	movgt	r5, #0
 8002942:	2501      	movle	r5, #1
 8002944:	2b03      	cmp	r3, #3
 8002946:	f200 8085 	bhi.w	8002a54 <_dtoa_r+0x30c>
 800294a:	e8df f003 	tbb	[pc, r3]
 800294e:	3b2e      	.short	0x3b2e
 8002950:	5839      	.short	0x5839
 8002952:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8002956:	441d      	add	r5, r3
 8002958:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800295c:	2b20      	cmp	r3, #32
 800295e:	bfc1      	itttt	gt
 8002960:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8002964:	fa08 f803 	lslgt.w	r8, r8, r3
 8002968:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 800296c:	fa26 f303 	lsrgt.w	r3, r6, r3
 8002970:	bfd6      	itet	le
 8002972:	f1c3 0320 	rsble	r3, r3, #32
 8002976:	ea48 0003 	orrgt.w	r0, r8, r3
 800297a:	fa06 f003 	lslle.w	r0, r6, r3
 800297e:	f7fd fdc9 	bl	8000514 <__aeabi_ui2d>
 8002982:	2201      	movs	r2, #1
 8002984:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 8002988:	3d01      	subs	r5, #1
 800298a:	920e      	str	r2, [sp, #56]	; 0x38
 800298c:	e76f      	b.n	800286e <_dtoa_r+0x126>
 800298e:	2301      	movs	r3, #1
 8002990:	e7b3      	b.n	80028fa <_dtoa_r+0x1b2>
 8002992:	900c      	str	r0, [sp, #48]	; 0x30
 8002994:	e7b2      	b.n	80028fc <_dtoa_r+0x1b4>
 8002996:	9b05      	ldr	r3, [sp, #20]
 8002998:	eba3 030b 	sub.w	r3, r3, fp
 800299c:	9305      	str	r3, [sp, #20]
 800299e:	f1cb 0300 	rsb	r3, fp, #0
 80029a2:	9308      	str	r3, [sp, #32]
 80029a4:	2300      	movs	r3, #0
 80029a6:	930b      	str	r3, [sp, #44]	; 0x2c
 80029a8:	e7bf      	b.n	800292a <_dtoa_r+0x1e2>
 80029aa:	2300      	movs	r3, #0
 80029ac:	9309      	str	r3, [sp, #36]	; 0x24
 80029ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80029b0:	2b00      	cmp	r3, #0
 80029b2:	dc52      	bgt.n	8002a5a <_dtoa_r+0x312>
 80029b4:	2301      	movs	r3, #1
 80029b6:	9301      	str	r3, [sp, #4]
 80029b8:	9304      	str	r3, [sp, #16]
 80029ba:	461a      	mov	r2, r3
 80029bc:	920a      	str	r2, [sp, #40]	; 0x28
 80029be:	e00b      	b.n	80029d8 <_dtoa_r+0x290>
 80029c0:	2301      	movs	r3, #1
 80029c2:	e7f3      	b.n	80029ac <_dtoa_r+0x264>
 80029c4:	2300      	movs	r3, #0
 80029c6:	9309      	str	r3, [sp, #36]	; 0x24
 80029c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80029ca:	445b      	add	r3, fp
 80029cc:	9301      	str	r3, [sp, #4]
 80029ce:	3301      	adds	r3, #1
 80029d0:	2b01      	cmp	r3, #1
 80029d2:	9304      	str	r3, [sp, #16]
 80029d4:	bfb8      	it	lt
 80029d6:	2301      	movlt	r3, #1
 80029d8:	69e0      	ldr	r0, [r4, #28]
 80029da:	2100      	movs	r1, #0
 80029dc:	2204      	movs	r2, #4
 80029de:	f102 0614 	add.w	r6, r2, #20
 80029e2:	429e      	cmp	r6, r3
 80029e4:	d93d      	bls.n	8002a62 <_dtoa_r+0x31a>
 80029e6:	6041      	str	r1, [r0, #4]
 80029e8:	4620      	mov	r0, r4
 80029ea:	f000 fd9f 	bl	800352c <_Balloc>
 80029ee:	9000      	str	r0, [sp, #0]
 80029f0:	2800      	cmp	r0, #0
 80029f2:	d139      	bne.n	8002a68 <_dtoa_r+0x320>
 80029f4:	4b16      	ldr	r3, [pc, #88]	; (8002a50 <_dtoa_r+0x308>)
 80029f6:	4602      	mov	r2, r0
 80029f8:	f240 11af 	movw	r1, #431	; 0x1af
 80029fc:	e6bd      	b.n	800277a <_dtoa_r+0x32>
 80029fe:	2301      	movs	r3, #1
 8002a00:	e7e1      	b.n	80029c6 <_dtoa_r+0x27e>
 8002a02:	2501      	movs	r5, #1
 8002a04:	2300      	movs	r3, #0
 8002a06:	9307      	str	r3, [sp, #28]
 8002a08:	9509      	str	r5, [sp, #36]	; 0x24
 8002a0a:	f04f 33ff 	mov.w	r3, #4294967295
 8002a0e:	9301      	str	r3, [sp, #4]
 8002a10:	9304      	str	r3, [sp, #16]
 8002a12:	2200      	movs	r2, #0
 8002a14:	2312      	movs	r3, #18
 8002a16:	e7d1      	b.n	80029bc <_dtoa_r+0x274>
 8002a18:	636f4361 	.word	0x636f4361
 8002a1c:	3fd287a7 	.word	0x3fd287a7
 8002a20:	8b60c8b3 	.word	0x8b60c8b3
 8002a24:	3fc68a28 	.word	0x3fc68a28
 8002a28:	509f79fb 	.word	0x509f79fb
 8002a2c:	3fd34413 	.word	0x3fd34413
 8002a30:	0800513b 	.word	0x0800513b
 8002a34:	08005152 	.word	0x08005152
 8002a38:	7ff00000 	.word	0x7ff00000
 8002a3c:	08005137 	.word	0x08005137
 8002a40:	0800512e 	.word	0x0800512e
 8002a44:	0800533c 	.word	0x0800533c
 8002a48:	3ff80000 	.word	0x3ff80000
 8002a4c:	08005240 	.word	0x08005240
 8002a50:	080051aa 	.word	0x080051aa
 8002a54:	2301      	movs	r3, #1
 8002a56:	9309      	str	r3, [sp, #36]	; 0x24
 8002a58:	e7d7      	b.n	8002a0a <_dtoa_r+0x2c2>
 8002a5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002a5c:	9301      	str	r3, [sp, #4]
 8002a5e:	9304      	str	r3, [sp, #16]
 8002a60:	e7ba      	b.n	80029d8 <_dtoa_r+0x290>
 8002a62:	3101      	adds	r1, #1
 8002a64:	0052      	lsls	r2, r2, #1
 8002a66:	e7ba      	b.n	80029de <_dtoa_r+0x296>
 8002a68:	69e3      	ldr	r3, [r4, #28]
 8002a6a:	9a00      	ldr	r2, [sp, #0]
 8002a6c:	601a      	str	r2, [r3, #0]
 8002a6e:	9b04      	ldr	r3, [sp, #16]
 8002a70:	2b0e      	cmp	r3, #14
 8002a72:	f200 80a8 	bhi.w	8002bc6 <_dtoa_r+0x47e>
 8002a76:	2d00      	cmp	r5, #0
 8002a78:	f000 80a5 	beq.w	8002bc6 <_dtoa_r+0x47e>
 8002a7c:	f1bb 0f00 	cmp.w	fp, #0
 8002a80:	dd38      	ble.n	8002af4 <_dtoa_r+0x3ac>
 8002a82:	4bc0      	ldr	r3, [pc, #768]	; (8002d84 <_dtoa_r+0x63c>)
 8002a84:	f00b 020f 	and.w	r2, fp, #15
 8002a88:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002a8c:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8002a90:	e9d3 6700 	ldrd	r6, r7, [r3]
 8002a94:	ea4f 182b 	mov.w	r8, fp, asr #4
 8002a98:	d019      	beq.n	8002ace <_dtoa_r+0x386>
 8002a9a:	4bbb      	ldr	r3, [pc, #748]	; (8002d88 <_dtoa_r+0x640>)
 8002a9c:	ec51 0b18 	vmov	r0, r1, d8
 8002aa0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002aa4:	f7fd feda 	bl	800085c <__aeabi_ddiv>
 8002aa8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002aac:	f008 080f 	and.w	r8, r8, #15
 8002ab0:	2503      	movs	r5, #3
 8002ab2:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 8002d88 <_dtoa_r+0x640>
 8002ab6:	f1b8 0f00 	cmp.w	r8, #0
 8002aba:	d10a      	bne.n	8002ad2 <_dtoa_r+0x38a>
 8002abc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002ac0:	4632      	mov	r2, r6
 8002ac2:	463b      	mov	r3, r7
 8002ac4:	f7fd feca 	bl	800085c <__aeabi_ddiv>
 8002ac8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002acc:	e02b      	b.n	8002b26 <_dtoa_r+0x3de>
 8002ace:	2502      	movs	r5, #2
 8002ad0:	e7ef      	b.n	8002ab2 <_dtoa_r+0x36a>
 8002ad2:	f018 0f01 	tst.w	r8, #1
 8002ad6:	d008      	beq.n	8002aea <_dtoa_r+0x3a2>
 8002ad8:	4630      	mov	r0, r6
 8002ada:	4639      	mov	r1, r7
 8002adc:	e9d9 2300 	ldrd	r2, r3, [r9]
 8002ae0:	f7fd fd92 	bl	8000608 <__aeabi_dmul>
 8002ae4:	3501      	adds	r5, #1
 8002ae6:	4606      	mov	r6, r0
 8002ae8:	460f      	mov	r7, r1
 8002aea:	ea4f 0868 	mov.w	r8, r8, asr #1
 8002aee:	f109 0908 	add.w	r9, r9, #8
 8002af2:	e7e0      	b.n	8002ab6 <_dtoa_r+0x36e>
 8002af4:	f000 809f 	beq.w	8002c36 <_dtoa_r+0x4ee>
 8002af8:	f1cb 0600 	rsb	r6, fp, #0
 8002afc:	4ba1      	ldr	r3, [pc, #644]	; (8002d84 <_dtoa_r+0x63c>)
 8002afe:	4fa2      	ldr	r7, [pc, #648]	; (8002d88 <_dtoa_r+0x640>)
 8002b00:	f006 020f 	and.w	r2, r6, #15
 8002b04:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002b08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b0c:	ec51 0b18 	vmov	r0, r1, d8
 8002b10:	f7fd fd7a 	bl	8000608 <__aeabi_dmul>
 8002b14:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002b18:	1136      	asrs	r6, r6, #4
 8002b1a:	2300      	movs	r3, #0
 8002b1c:	2502      	movs	r5, #2
 8002b1e:	2e00      	cmp	r6, #0
 8002b20:	d17e      	bne.n	8002c20 <_dtoa_r+0x4d8>
 8002b22:	2b00      	cmp	r3, #0
 8002b24:	d1d0      	bne.n	8002ac8 <_dtoa_r+0x380>
 8002b26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002b28:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8002b2c:	2b00      	cmp	r3, #0
 8002b2e:	f000 8084 	beq.w	8002c3a <_dtoa_r+0x4f2>
 8002b32:	4b96      	ldr	r3, [pc, #600]	; (8002d8c <_dtoa_r+0x644>)
 8002b34:	2200      	movs	r2, #0
 8002b36:	4640      	mov	r0, r8
 8002b38:	4649      	mov	r1, r9
 8002b3a:	f7fd ffd7 	bl	8000aec <__aeabi_dcmplt>
 8002b3e:	2800      	cmp	r0, #0
 8002b40:	d07b      	beq.n	8002c3a <_dtoa_r+0x4f2>
 8002b42:	9b04      	ldr	r3, [sp, #16]
 8002b44:	2b00      	cmp	r3, #0
 8002b46:	d078      	beq.n	8002c3a <_dtoa_r+0x4f2>
 8002b48:	9b01      	ldr	r3, [sp, #4]
 8002b4a:	2b00      	cmp	r3, #0
 8002b4c:	dd39      	ble.n	8002bc2 <_dtoa_r+0x47a>
 8002b4e:	4b90      	ldr	r3, [pc, #576]	; (8002d90 <_dtoa_r+0x648>)
 8002b50:	2200      	movs	r2, #0
 8002b52:	4640      	mov	r0, r8
 8002b54:	4649      	mov	r1, r9
 8002b56:	f7fd fd57 	bl	8000608 <__aeabi_dmul>
 8002b5a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002b5e:	9e01      	ldr	r6, [sp, #4]
 8002b60:	f10b 37ff 	add.w	r7, fp, #4294967295
 8002b64:	3501      	adds	r5, #1
 8002b66:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8002b6a:	4628      	mov	r0, r5
 8002b6c:	f7fd fce2 	bl	8000534 <__aeabi_i2d>
 8002b70:	4642      	mov	r2, r8
 8002b72:	464b      	mov	r3, r9
 8002b74:	f7fd fd48 	bl	8000608 <__aeabi_dmul>
 8002b78:	4b86      	ldr	r3, [pc, #536]	; (8002d94 <_dtoa_r+0x64c>)
 8002b7a:	2200      	movs	r2, #0
 8002b7c:	f7fd fb8e 	bl	800029c <__adddf3>
 8002b80:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 8002b84:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002b88:	9303      	str	r3, [sp, #12]
 8002b8a:	2e00      	cmp	r6, #0
 8002b8c:	d158      	bne.n	8002c40 <_dtoa_r+0x4f8>
 8002b8e:	4b82      	ldr	r3, [pc, #520]	; (8002d98 <_dtoa_r+0x650>)
 8002b90:	2200      	movs	r2, #0
 8002b92:	4640      	mov	r0, r8
 8002b94:	4649      	mov	r1, r9
 8002b96:	f7fd fb7f 	bl	8000298 <__aeabi_dsub>
 8002b9a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002b9e:	4680      	mov	r8, r0
 8002ba0:	4689      	mov	r9, r1
 8002ba2:	f7fd ffc1 	bl	8000b28 <__aeabi_dcmpgt>
 8002ba6:	2800      	cmp	r0, #0
 8002ba8:	f040 8296 	bne.w	80030d8 <_dtoa_r+0x990>
 8002bac:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8002bb0:	4640      	mov	r0, r8
 8002bb2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002bb6:	4649      	mov	r1, r9
 8002bb8:	f7fd ff98 	bl	8000aec <__aeabi_dcmplt>
 8002bbc:	2800      	cmp	r0, #0
 8002bbe:	f040 8289 	bne.w	80030d4 <_dtoa_r+0x98c>
 8002bc2:	ed8d 8b02 	vstr	d8, [sp, #8]
 8002bc6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002bc8:	2b00      	cmp	r3, #0
 8002bca:	f2c0 814e 	blt.w	8002e6a <_dtoa_r+0x722>
 8002bce:	f1bb 0f0e 	cmp.w	fp, #14
 8002bd2:	f300 814a 	bgt.w	8002e6a <_dtoa_r+0x722>
 8002bd6:	4b6b      	ldr	r3, [pc, #428]	; (8002d84 <_dtoa_r+0x63c>)
 8002bd8:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8002bdc:	e9d3 8900 	ldrd	r8, r9, [r3]
 8002be0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002be2:	2b00      	cmp	r3, #0
 8002be4:	f280 80dc 	bge.w	8002da0 <_dtoa_r+0x658>
 8002be8:	9b04      	ldr	r3, [sp, #16]
 8002bea:	2b00      	cmp	r3, #0
 8002bec:	f300 80d8 	bgt.w	8002da0 <_dtoa_r+0x658>
 8002bf0:	f040 826f 	bne.w	80030d2 <_dtoa_r+0x98a>
 8002bf4:	4b68      	ldr	r3, [pc, #416]	; (8002d98 <_dtoa_r+0x650>)
 8002bf6:	2200      	movs	r2, #0
 8002bf8:	4640      	mov	r0, r8
 8002bfa:	4649      	mov	r1, r9
 8002bfc:	f7fd fd04 	bl	8000608 <__aeabi_dmul>
 8002c00:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002c04:	f7fd ff86 	bl	8000b14 <__aeabi_dcmpge>
 8002c08:	9e04      	ldr	r6, [sp, #16]
 8002c0a:	4637      	mov	r7, r6
 8002c0c:	2800      	cmp	r0, #0
 8002c0e:	f040 8245 	bne.w	800309c <_dtoa_r+0x954>
 8002c12:	9d00      	ldr	r5, [sp, #0]
 8002c14:	2331      	movs	r3, #49	; 0x31
 8002c16:	f805 3b01 	strb.w	r3, [r5], #1
 8002c1a:	f10b 0b01 	add.w	fp, fp, #1
 8002c1e:	e241      	b.n	80030a4 <_dtoa_r+0x95c>
 8002c20:	07f2      	lsls	r2, r6, #31
 8002c22:	d505      	bpl.n	8002c30 <_dtoa_r+0x4e8>
 8002c24:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002c28:	f7fd fcee 	bl	8000608 <__aeabi_dmul>
 8002c2c:	3501      	adds	r5, #1
 8002c2e:	2301      	movs	r3, #1
 8002c30:	1076      	asrs	r6, r6, #1
 8002c32:	3708      	adds	r7, #8
 8002c34:	e773      	b.n	8002b1e <_dtoa_r+0x3d6>
 8002c36:	2502      	movs	r5, #2
 8002c38:	e775      	b.n	8002b26 <_dtoa_r+0x3de>
 8002c3a:	9e04      	ldr	r6, [sp, #16]
 8002c3c:	465f      	mov	r7, fp
 8002c3e:	e792      	b.n	8002b66 <_dtoa_r+0x41e>
 8002c40:	9900      	ldr	r1, [sp, #0]
 8002c42:	4b50      	ldr	r3, [pc, #320]	; (8002d84 <_dtoa_r+0x63c>)
 8002c44:	ed9d 7b02 	vldr	d7, [sp, #8]
 8002c48:	4431      	add	r1, r6
 8002c4a:	9102      	str	r1, [sp, #8]
 8002c4c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002c4e:	eeb0 9a47 	vmov.f32	s18, s14
 8002c52:	eef0 9a67 	vmov.f32	s19, s15
 8002c56:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8002c5a:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002c5e:	2900      	cmp	r1, #0
 8002c60:	d044      	beq.n	8002cec <_dtoa_r+0x5a4>
 8002c62:	494e      	ldr	r1, [pc, #312]	; (8002d9c <_dtoa_r+0x654>)
 8002c64:	2000      	movs	r0, #0
 8002c66:	f7fd fdf9 	bl	800085c <__aeabi_ddiv>
 8002c6a:	ec53 2b19 	vmov	r2, r3, d9
 8002c6e:	f7fd fb13 	bl	8000298 <__aeabi_dsub>
 8002c72:	9d00      	ldr	r5, [sp, #0]
 8002c74:	ec41 0b19 	vmov	d9, r0, r1
 8002c78:	4649      	mov	r1, r9
 8002c7a:	4640      	mov	r0, r8
 8002c7c:	f7fd ff74 	bl	8000b68 <__aeabi_d2iz>
 8002c80:	4606      	mov	r6, r0
 8002c82:	f7fd fc57 	bl	8000534 <__aeabi_i2d>
 8002c86:	4602      	mov	r2, r0
 8002c88:	460b      	mov	r3, r1
 8002c8a:	4640      	mov	r0, r8
 8002c8c:	4649      	mov	r1, r9
 8002c8e:	f7fd fb03 	bl	8000298 <__aeabi_dsub>
 8002c92:	3630      	adds	r6, #48	; 0x30
 8002c94:	f805 6b01 	strb.w	r6, [r5], #1
 8002c98:	ec53 2b19 	vmov	r2, r3, d9
 8002c9c:	4680      	mov	r8, r0
 8002c9e:	4689      	mov	r9, r1
 8002ca0:	f7fd ff24 	bl	8000aec <__aeabi_dcmplt>
 8002ca4:	2800      	cmp	r0, #0
 8002ca6:	d164      	bne.n	8002d72 <_dtoa_r+0x62a>
 8002ca8:	4642      	mov	r2, r8
 8002caa:	464b      	mov	r3, r9
 8002cac:	4937      	ldr	r1, [pc, #220]	; (8002d8c <_dtoa_r+0x644>)
 8002cae:	2000      	movs	r0, #0
 8002cb0:	f7fd faf2 	bl	8000298 <__aeabi_dsub>
 8002cb4:	ec53 2b19 	vmov	r2, r3, d9
 8002cb8:	f7fd ff18 	bl	8000aec <__aeabi_dcmplt>
 8002cbc:	2800      	cmp	r0, #0
 8002cbe:	f040 80b6 	bne.w	8002e2e <_dtoa_r+0x6e6>
 8002cc2:	9b02      	ldr	r3, [sp, #8]
 8002cc4:	429d      	cmp	r5, r3
 8002cc6:	f43f af7c 	beq.w	8002bc2 <_dtoa_r+0x47a>
 8002cca:	4b31      	ldr	r3, [pc, #196]	; (8002d90 <_dtoa_r+0x648>)
 8002ccc:	ec51 0b19 	vmov	r0, r1, d9
 8002cd0:	2200      	movs	r2, #0
 8002cd2:	f7fd fc99 	bl	8000608 <__aeabi_dmul>
 8002cd6:	4b2e      	ldr	r3, [pc, #184]	; (8002d90 <_dtoa_r+0x648>)
 8002cd8:	ec41 0b19 	vmov	d9, r0, r1
 8002cdc:	2200      	movs	r2, #0
 8002cde:	4640      	mov	r0, r8
 8002ce0:	4649      	mov	r1, r9
 8002ce2:	f7fd fc91 	bl	8000608 <__aeabi_dmul>
 8002ce6:	4680      	mov	r8, r0
 8002ce8:	4689      	mov	r9, r1
 8002cea:	e7c5      	b.n	8002c78 <_dtoa_r+0x530>
 8002cec:	ec51 0b17 	vmov	r0, r1, d7
 8002cf0:	f7fd fc8a 	bl	8000608 <__aeabi_dmul>
 8002cf4:	9b02      	ldr	r3, [sp, #8]
 8002cf6:	9d00      	ldr	r5, [sp, #0]
 8002cf8:	930f      	str	r3, [sp, #60]	; 0x3c
 8002cfa:	ec41 0b19 	vmov	d9, r0, r1
 8002cfe:	4649      	mov	r1, r9
 8002d00:	4640      	mov	r0, r8
 8002d02:	f7fd ff31 	bl	8000b68 <__aeabi_d2iz>
 8002d06:	4606      	mov	r6, r0
 8002d08:	f7fd fc14 	bl	8000534 <__aeabi_i2d>
 8002d0c:	3630      	adds	r6, #48	; 0x30
 8002d0e:	4602      	mov	r2, r0
 8002d10:	460b      	mov	r3, r1
 8002d12:	4640      	mov	r0, r8
 8002d14:	4649      	mov	r1, r9
 8002d16:	f7fd fabf 	bl	8000298 <__aeabi_dsub>
 8002d1a:	f805 6b01 	strb.w	r6, [r5], #1
 8002d1e:	9b02      	ldr	r3, [sp, #8]
 8002d20:	429d      	cmp	r5, r3
 8002d22:	4680      	mov	r8, r0
 8002d24:	4689      	mov	r9, r1
 8002d26:	f04f 0200 	mov.w	r2, #0
 8002d2a:	d124      	bne.n	8002d76 <_dtoa_r+0x62e>
 8002d2c:	4b1b      	ldr	r3, [pc, #108]	; (8002d9c <_dtoa_r+0x654>)
 8002d2e:	ec51 0b19 	vmov	r0, r1, d9
 8002d32:	f7fd fab3 	bl	800029c <__adddf3>
 8002d36:	4602      	mov	r2, r0
 8002d38:	460b      	mov	r3, r1
 8002d3a:	4640      	mov	r0, r8
 8002d3c:	4649      	mov	r1, r9
 8002d3e:	f7fd fef3 	bl	8000b28 <__aeabi_dcmpgt>
 8002d42:	2800      	cmp	r0, #0
 8002d44:	d173      	bne.n	8002e2e <_dtoa_r+0x6e6>
 8002d46:	ec53 2b19 	vmov	r2, r3, d9
 8002d4a:	4914      	ldr	r1, [pc, #80]	; (8002d9c <_dtoa_r+0x654>)
 8002d4c:	2000      	movs	r0, #0
 8002d4e:	f7fd faa3 	bl	8000298 <__aeabi_dsub>
 8002d52:	4602      	mov	r2, r0
 8002d54:	460b      	mov	r3, r1
 8002d56:	4640      	mov	r0, r8
 8002d58:	4649      	mov	r1, r9
 8002d5a:	f7fd fec7 	bl	8000aec <__aeabi_dcmplt>
 8002d5e:	2800      	cmp	r0, #0
 8002d60:	f43f af2f 	beq.w	8002bc2 <_dtoa_r+0x47a>
 8002d64:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8002d66:	1e6b      	subs	r3, r5, #1
 8002d68:	930f      	str	r3, [sp, #60]	; 0x3c
 8002d6a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002d6e:	2b30      	cmp	r3, #48	; 0x30
 8002d70:	d0f8      	beq.n	8002d64 <_dtoa_r+0x61c>
 8002d72:	46bb      	mov	fp, r7
 8002d74:	e04a      	b.n	8002e0c <_dtoa_r+0x6c4>
 8002d76:	4b06      	ldr	r3, [pc, #24]	; (8002d90 <_dtoa_r+0x648>)
 8002d78:	f7fd fc46 	bl	8000608 <__aeabi_dmul>
 8002d7c:	4680      	mov	r8, r0
 8002d7e:	4689      	mov	r9, r1
 8002d80:	e7bd      	b.n	8002cfe <_dtoa_r+0x5b6>
 8002d82:	bf00      	nop
 8002d84:	08005240 	.word	0x08005240
 8002d88:	08005218 	.word	0x08005218
 8002d8c:	3ff00000 	.word	0x3ff00000
 8002d90:	40240000 	.word	0x40240000
 8002d94:	401c0000 	.word	0x401c0000
 8002d98:	40140000 	.word	0x40140000
 8002d9c:	3fe00000 	.word	0x3fe00000
 8002da0:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8002da4:	9d00      	ldr	r5, [sp, #0]
 8002da6:	4642      	mov	r2, r8
 8002da8:	464b      	mov	r3, r9
 8002daa:	4630      	mov	r0, r6
 8002dac:	4639      	mov	r1, r7
 8002dae:	f7fd fd55 	bl	800085c <__aeabi_ddiv>
 8002db2:	f7fd fed9 	bl	8000b68 <__aeabi_d2iz>
 8002db6:	9001      	str	r0, [sp, #4]
 8002db8:	f7fd fbbc 	bl	8000534 <__aeabi_i2d>
 8002dbc:	4642      	mov	r2, r8
 8002dbe:	464b      	mov	r3, r9
 8002dc0:	f7fd fc22 	bl	8000608 <__aeabi_dmul>
 8002dc4:	4602      	mov	r2, r0
 8002dc6:	460b      	mov	r3, r1
 8002dc8:	4630      	mov	r0, r6
 8002dca:	4639      	mov	r1, r7
 8002dcc:	f7fd fa64 	bl	8000298 <__aeabi_dsub>
 8002dd0:	9e01      	ldr	r6, [sp, #4]
 8002dd2:	9f04      	ldr	r7, [sp, #16]
 8002dd4:	3630      	adds	r6, #48	; 0x30
 8002dd6:	f805 6b01 	strb.w	r6, [r5], #1
 8002dda:	9e00      	ldr	r6, [sp, #0]
 8002ddc:	1bae      	subs	r6, r5, r6
 8002dde:	42b7      	cmp	r7, r6
 8002de0:	4602      	mov	r2, r0
 8002de2:	460b      	mov	r3, r1
 8002de4:	d134      	bne.n	8002e50 <_dtoa_r+0x708>
 8002de6:	f7fd fa59 	bl	800029c <__adddf3>
 8002dea:	4642      	mov	r2, r8
 8002dec:	464b      	mov	r3, r9
 8002dee:	4606      	mov	r6, r0
 8002df0:	460f      	mov	r7, r1
 8002df2:	f7fd fe99 	bl	8000b28 <__aeabi_dcmpgt>
 8002df6:	b9c8      	cbnz	r0, 8002e2c <_dtoa_r+0x6e4>
 8002df8:	4642      	mov	r2, r8
 8002dfa:	464b      	mov	r3, r9
 8002dfc:	4630      	mov	r0, r6
 8002dfe:	4639      	mov	r1, r7
 8002e00:	f7fd fe6a 	bl	8000ad8 <__aeabi_dcmpeq>
 8002e04:	b110      	cbz	r0, 8002e0c <_dtoa_r+0x6c4>
 8002e06:	9b01      	ldr	r3, [sp, #4]
 8002e08:	07db      	lsls	r3, r3, #31
 8002e0a:	d40f      	bmi.n	8002e2c <_dtoa_r+0x6e4>
 8002e0c:	4651      	mov	r1, sl
 8002e0e:	4620      	mov	r0, r4
 8002e10:	f000 fbcc 	bl	80035ac <_Bfree>
 8002e14:	2300      	movs	r3, #0
 8002e16:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002e18:	702b      	strb	r3, [r5, #0]
 8002e1a:	f10b 0301 	add.w	r3, fp, #1
 8002e1e:	6013      	str	r3, [r2, #0]
 8002e20:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002e22:	2b00      	cmp	r3, #0
 8002e24:	f43f ace2 	beq.w	80027ec <_dtoa_r+0xa4>
 8002e28:	601d      	str	r5, [r3, #0]
 8002e2a:	e4df      	b.n	80027ec <_dtoa_r+0xa4>
 8002e2c:	465f      	mov	r7, fp
 8002e2e:	462b      	mov	r3, r5
 8002e30:	461d      	mov	r5, r3
 8002e32:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002e36:	2a39      	cmp	r2, #57	; 0x39
 8002e38:	d106      	bne.n	8002e48 <_dtoa_r+0x700>
 8002e3a:	9a00      	ldr	r2, [sp, #0]
 8002e3c:	429a      	cmp	r2, r3
 8002e3e:	d1f7      	bne.n	8002e30 <_dtoa_r+0x6e8>
 8002e40:	9900      	ldr	r1, [sp, #0]
 8002e42:	2230      	movs	r2, #48	; 0x30
 8002e44:	3701      	adds	r7, #1
 8002e46:	700a      	strb	r2, [r1, #0]
 8002e48:	781a      	ldrb	r2, [r3, #0]
 8002e4a:	3201      	adds	r2, #1
 8002e4c:	701a      	strb	r2, [r3, #0]
 8002e4e:	e790      	b.n	8002d72 <_dtoa_r+0x62a>
 8002e50:	4ba3      	ldr	r3, [pc, #652]	; (80030e0 <_dtoa_r+0x998>)
 8002e52:	2200      	movs	r2, #0
 8002e54:	f7fd fbd8 	bl	8000608 <__aeabi_dmul>
 8002e58:	2200      	movs	r2, #0
 8002e5a:	2300      	movs	r3, #0
 8002e5c:	4606      	mov	r6, r0
 8002e5e:	460f      	mov	r7, r1
 8002e60:	f7fd fe3a 	bl	8000ad8 <__aeabi_dcmpeq>
 8002e64:	2800      	cmp	r0, #0
 8002e66:	d09e      	beq.n	8002da6 <_dtoa_r+0x65e>
 8002e68:	e7d0      	b.n	8002e0c <_dtoa_r+0x6c4>
 8002e6a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002e6c:	2a00      	cmp	r2, #0
 8002e6e:	f000 80ca 	beq.w	8003006 <_dtoa_r+0x8be>
 8002e72:	9a07      	ldr	r2, [sp, #28]
 8002e74:	2a01      	cmp	r2, #1
 8002e76:	f300 80ad 	bgt.w	8002fd4 <_dtoa_r+0x88c>
 8002e7a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002e7c:	2a00      	cmp	r2, #0
 8002e7e:	f000 80a5 	beq.w	8002fcc <_dtoa_r+0x884>
 8002e82:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8002e86:	9e08      	ldr	r6, [sp, #32]
 8002e88:	9d05      	ldr	r5, [sp, #20]
 8002e8a:	9a05      	ldr	r2, [sp, #20]
 8002e8c:	441a      	add	r2, r3
 8002e8e:	9205      	str	r2, [sp, #20]
 8002e90:	9a06      	ldr	r2, [sp, #24]
 8002e92:	2101      	movs	r1, #1
 8002e94:	441a      	add	r2, r3
 8002e96:	4620      	mov	r0, r4
 8002e98:	9206      	str	r2, [sp, #24]
 8002e9a:	f000 fc3d 	bl	8003718 <__i2b>
 8002e9e:	4607      	mov	r7, r0
 8002ea0:	b165      	cbz	r5, 8002ebc <_dtoa_r+0x774>
 8002ea2:	9b06      	ldr	r3, [sp, #24]
 8002ea4:	2b00      	cmp	r3, #0
 8002ea6:	dd09      	ble.n	8002ebc <_dtoa_r+0x774>
 8002ea8:	42ab      	cmp	r3, r5
 8002eaa:	9a05      	ldr	r2, [sp, #20]
 8002eac:	bfa8      	it	ge
 8002eae:	462b      	movge	r3, r5
 8002eb0:	1ad2      	subs	r2, r2, r3
 8002eb2:	9205      	str	r2, [sp, #20]
 8002eb4:	9a06      	ldr	r2, [sp, #24]
 8002eb6:	1aed      	subs	r5, r5, r3
 8002eb8:	1ad3      	subs	r3, r2, r3
 8002eba:	9306      	str	r3, [sp, #24]
 8002ebc:	9b08      	ldr	r3, [sp, #32]
 8002ebe:	b1f3      	cbz	r3, 8002efe <_dtoa_r+0x7b6>
 8002ec0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002ec2:	2b00      	cmp	r3, #0
 8002ec4:	f000 80a3 	beq.w	800300e <_dtoa_r+0x8c6>
 8002ec8:	2e00      	cmp	r6, #0
 8002eca:	dd10      	ble.n	8002eee <_dtoa_r+0x7a6>
 8002ecc:	4639      	mov	r1, r7
 8002ece:	4632      	mov	r2, r6
 8002ed0:	4620      	mov	r0, r4
 8002ed2:	f000 fce1 	bl	8003898 <__pow5mult>
 8002ed6:	4652      	mov	r2, sl
 8002ed8:	4601      	mov	r1, r0
 8002eda:	4607      	mov	r7, r0
 8002edc:	4620      	mov	r0, r4
 8002ede:	f000 fc31 	bl	8003744 <__multiply>
 8002ee2:	4651      	mov	r1, sl
 8002ee4:	4680      	mov	r8, r0
 8002ee6:	4620      	mov	r0, r4
 8002ee8:	f000 fb60 	bl	80035ac <_Bfree>
 8002eec:	46c2      	mov	sl, r8
 8002eee:	9b08      	ldr	r3, [sp, #32]
 8002ef0:	1b9a      	subs	r2, r3, r6
 8002ef2:	d004      	beq.n	8002efe <_dtoa_r+0x7b6>
 8002ef4:	4651      	mov	r1, sl
 8002ef6:	4620      	mov	r0, r4
 8002ef8:	f000 fcce 	bl	8003898 <__pow5mult>
 8002efc:	4682      	mov	sl, r0
 8002efe:	2101      	movs	r1, #1
 8002f00:	4620      	mov	r0, r4
 8002f02:	f000 fc09 	bl	8003718 <__i2b>
 8002f06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002f08:	2b00      	cmp	r3, #0
 8002f0a:	4606      	mov	r6, r0
 8002f0c:	f340 8081 	ble.w	8003012 <_dtoa_r+0x8ca>
 8002f10:	461a      	mov	r2, r3
 8002f12:	4601      	mov	r1, r0
 8002f14:	4620      	mov	r0, r4
 8002f16:	f000 fcbf 	bl	8003898 <__pow5mult>
 8002f1a:	9b07      	ldr	r3, [sp, #28]
 8002f1c:	2b01      	cmp	r3, #1
 8002f1e:	4606      	mov	r6, r0
 8002f20:	dd7a      	ble.n	8003018 <_dtoa_r+0x8d0>
 8002f22:	f04f 0800 	mov.w	r8, #0
 8002f26:	6933      	ldr	r3, [r6, #16]
 8002f28:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8002f2c:	6918      	ldr	r0, [r3, #16]
 8002f2e:	f000 fba5 	bl	800367c <__hi0bits>
 8002f32:	f1c0 0020 	rsb	r0, r0, #32
 8002f36:	9b06      	ldr	r3, [sp, #24]
 8002f38:	4418      	add	r0, r3
 8002f3a:	f010 001f 	ands.w	r0, r0, #31
 8002f3e:	f000 8094 	beq.w	800306a <_dtoa_r+0x922>
 8002f42:	f1c0 0320 	rsb	r3, r0, #32
 8002f46:	2b04      	cmp	r3, #4
 8002f48:	f340 8085 	ble.w	8003056 <_dtoa_r+0x90e>
 8002f4c:	9b05      	ldr	r3, [sp, #20]
 8002f4e:	f1c0 001c 	rsb	r0, r0, #28
 8002f52:	4403      	add	r3, r0
 8002f54:	9305      	str	r3, [sp, #20]
 8002f56:	9b06      	ldr	r3, [sp, #24]
 8002f58:	4403      	add	r3, r0
 8002f5a:	4405      	add	r5, r0
 8002f5c:	9306      	str	r3, [sp, #24]
 8002f5e:	9b05      	ldr	r3, [sp, #20]
 8002f60:	2b00      	cmp	r3, #0
 8002f62:	dd05      	ble.n	8002f70 <_dtoa_r+0x828>
 8002f64:	4651      	mov	r1, sl
 8002f66:	461a      	mov	r2, r3
 8002f68:	4620      	mov	r0, r4
 8002f6a:	f000 fcef 	bl	800394c <__lshift>
 8002f6e:	4682      	mov	sl, r0
 8002f70:	9b06      	ldr	r3, [sp, #24]
 8002f72:	2b00      	cmp	r3, #0
 8002f74:	dd05      	ble.n	8002f82 <_dtoa_r+0x83a>
 8002f76:	4631      	mov	r1, r6
 8002f78:	461a      	mov	r2, r3
 8002f7a:	4620      	mov	r0, r4
 8002f7c:	f000 fce6 	bl	800394c <__lshift>
 8002f80:	4606      	mov	r6, r0
 8002f82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002f84:	2b00      	cmp	r3, #0
 8002f86:	d072      	beq.n	800306e <_dtoa_r+0x926>
 8002f88:	4631      	mov	r1, r6
 8002f8a:	4650      	mov	r0, sl
 8002f8c:	f000 fd4a 	bl	8003a24 <__mcmp>
 8002f90:	2800      	cmp	r0, #0
 8002f92:	da6c      	bge.n	800306e <_dtoa_r+0x926>
 8002f94:	2300      	movs	r3, #0
 8002f96:	4651      	mov	r1, sl
 8002f98:	220a      	movs	r2, #10
 8002f9a:	4620      	mov	r0, r4
 8002f9c:	f000 fb28 	bl	80035f0 <__multadd>
 8002fa0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002fa2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002fa6:	4682      	mov	sl, r0
 8002fa8:	2b00      	cmp	r3, #0
 8002faa:	f000 81b0 	beq.w	800330e <_dtoa_r+0xbc6>
 8002fae:	2300      	movs	r3, #0
 8002fb0:	4639      	mov	r1, r7
 8002fb2:	220a      	movs	r2, #10
 8002fb4:	4620      	mov	r0, r4
 8002fb6:	f000 fb1b 	bl	80035f0 <__multadd>
 8002fba:	9b01      	ldr	r3, [sp, #4]
 8002fbc:	2b00      	cmp	r3, #0
 8002fbe:	4607      	mov	r7, r0
 8002fc0:	f300 8096 	bgt.w	80030f0 <_dtoa_r+0x9a8>
 8002fc4:	9b07      	ldr	r3, [sp, #28]
 8002fc6:	2b02      	cmp	r3, #2
 8002fc8:	dc59      	bgt.n	800307e <_dtoa_r+0x936>
 8002fca:	e091      	b.n	80030f0 <_dtoa_r+0x9a8>
 8002fcc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002fce:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002fd2:	e758      	b.n	8002e86 <_dtoa_r+0x73e>
 8002fd4:	9b04      	ldr	r3, [sp, #16]
 8002fd6:	1e5e      	subs	r6, r3, #1
 8002fd8:	9b08      	ldr	r3, [sp, #32]
 8002fda:	42b3      	cmp	r3, r6
 8002fdc:	bfbf      	itttt	lt
 8002fde:	9b08      	ldrlt	r3, [sp, #32]
 8002fe0:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 8002fe2:	9608      	strlt	r6, [sp, #32]
 8002fe4:	1af3      	sublt	r3, r6, r3
 8002fe6:	bfb4      	ite	lt
 8002fe8:	18d2      	addlt	r2, r2, r3
 8002fea:	1b9e      	subge	r6, r3, r6
 8002fec:	9b04      	ldr	r3, [sp, #16]
 8002fee:	bfbc      	itt	lt
 8002ff0:	920b      	strlt	r2, [sp, #44]	; 0x2c
 8002ff2:	2600      	movlt	r6, #0
 8002ff4:	2b00      	cmp	r3, #0
 8002ff6:	bfb7      	itett	lt
 8002ff8:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 8002ffc:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 8003000:	1a9d      	sublt	r5, r3, r2
 8003002:	2300      	movlt	r3, #0
 8003004:	e741      	b.n	8002e8a <_dtoa_r+0x742>
 8003006:	9e08      	ldr	r6, [sp, #32]
 8003008:	9d05      	ldr	r5, [sp, #20]
 800300a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800300c:	e748      	b.n	8002ea0 <_dtoa_r+0x758>
 800300e:	9a08      	ldr	r2, [sp, #32]
 8003010:	e770      	b.n	8002ef4 <_dtoa_r+0x7ac>
 8003012:	9b07      	ldr	r3, [sp, #28]
 8003014:	2b01      	cmp	r3, #1
 8003016:	dc19      	bgt.n	800304c <_dtoa_r+0x904>
 8003018:	9b02      	ldr	r3, [sp, #8]
 800301a:	b9bb      	cbnz	r3, 800304c <_dtoa_r+0x904>
 800301c:	9b03      	ldr	r3, [sp, #12]
 800301e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003022:	b99b      	cbnz	r3, 800304c <_dtoa_r+0x904>
 8003024:	9b03      	ldr	r3, [sp, #12]
 8003026:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800302a:	0d1b      	lsrs	r3, r3, #20
 800302c:	051b      	lsls	r3, r3, #20
 800302e:	b183      	cbz	r3, 8003052 <_dtoa_r+0x90a>
 8003030:	9b05      	ldr	r3, [sp, #20]
 8003032:	3301      	adds	r3, #1
 8003034:	9305      	str	r3, [sp, #20]
 8003036:	9b06      	ldr	r3, [sp, #24]
 8003038:	3301      	adds	r3, #1
 800303a:	9306      	str	r3, [sp, #24]
 800303c:	f04f 0801 	mov.w	r8, #1
 8003040:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003042:	2b00      	cmp	r3, #0
 8003044:	f47f af6f 	bne.w	8002f26 <_dtoa_r+0x7de>
 8003048:	2001      	movs	r0, #1
 800304a:	e774      	b.n	8002f36 <_dtoa_r+0x7ee>
 800304c:	f04f 0800 	mov.w	r8, #0
 8003050:	e7f6      	b.n	8003040 <_dtoa_r+0x8f8>
 8003052:	4698      	mov	r8, r3
 8003054:	e7f4      	b.n	8003040 <_dtoa_r+0x8f8>
 8003056:	d082      	beq.n	8002f5e <_dtoa_r+0x816>
 8003058:	9a05      	ldr	r2, [sp, #20]
 800305a:	331c      	adds	r3, #28
 800305c:	441a      	add	r2, r3
 800305e:	9205      	str	r2, [sp, #20]
 8003060:	9a06      	ldr	r2, [sp, #24]
 8003062:	441a      	add	r2, r3
 8003064:	441d      	add	r5, r3
 8003066:	9206      	str	r2, [sp, #24]
 8003068:	e779      	b.n	8002f5e <_dtoa_r+0x816>
 800306a:	4603      	mov	r3, r0
 800306c:	e7f4      	b.n	8003058 <_dtoa_r+0x910>
 800306e:	9b04      	ldr	r3, [sp, #16]
 8003070:	2b00      	cmp	r3, #0
 8003072:	dc37      	bgt.n	80030e4 <_dtoa_r+0x99c>
 8003074:	9b07      	ldr	r3, [sp, #28]
 8003076:	2b02      	cmp	r3, #2
 8003078:	dd34      	ble.n	80030e4 <_dtoa_r+0x99c>
 800307a:	9b04      	ldr	r3, [sp, #16]
 800307c:	9301      	str	r3, [sp, #4]
 800307e:	9b01      	ldr	r3, [sp, #4]
 8003080:	b963      	cbnz	r3, 800309c <_dtoa_r+0x954>
 8003082:	4631      	mov	r1, r6
 8003084:	2205      	movs	r2, #5
 8003086:	4620      	mov	r0, r4
 8003088:	f000 fab2 	bl	80035f0 <__multadd>
 800308c:	4601      	mov	r1, r0
 800308e:	4606      	mov	r6, r0
 8003090:	4650      	mov	r0, sl
 8003092:	f000 fcc7 	bl	8003a24 <__mcmp>
 8003096:	2800      	cmp	r0, #0
 8003098:	f73f adbb 	bgt.w	8002c12 <_dtoa_r+0x4ca>
 800309c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800309e:	9d00      	ldr	r5, [sp, #0]
 80030a0:	ea6f 0b03 	mvn.w	fp, r3
 80030a4:	f04f 0800 	mov.w	r8, #0
 80030a8:	4631      	mov	r1, r6
 80030aa:	4620      	mov	r0, r4
 80030ac:	f000 fa7e 	bl	80035ac <_Bfree>
 80030b0:	2f00      	cmp	r7, #0
 80030b2:	f43f aeab 	beq.w	8002e0c <_dtoa_r+0x6c4>
 80030b6:	f1b8 0f00 	cmp.w	r8, #0
 80030ba:	d005      	beq.n	80030c8 <_dtoa_r+0x980>
 80030bc:	45b8      	cmp	r8, r7
 80030be:	d003      	beq.n	80030c8 <_dtoa_r+0x980>
 80030c0:	4641      	mov	r1, r8
 80030c2:	4620      	mov	r0, r4
 80030c4:	f000 fa72 	bl	80035ac <_Bfree>
 80030c8:	4639      	mov	r1, r7
 80030ca:	4620      	mov	r0, r4
 80030cc:	f000 fa6e 	bl	80035ac <_Bfree>
 80030d0:	e69c      	b.n	8002e0c <_dtoa_r+0x6c4>
 80030d2:	2600      	movs	r6, #0
 80030d4:	4637      	mov	r7, r6
 80030d6:	e7e1      	b.n	800309c <_dtoa_r+0x954>
 80030d8:	46bb      	mov	fp, r7
 80030da:	4637      	mov	r7, r6
 80030dc:	e599      	b.n	8002c12 <_dtoa_r+0x4ca>
 80030de:	bf00      	nop
 80030e0:	40240000 	.word	0x40240000
 80030e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80030e6:	2b00      	cmp	r3, #0
 80030e8:	f000 80c8 	beq.w	800327c <_dtoa_r+0xb34>
 80030ec:	9b04      	ldr	r3, [sp, #16]
 80030ee:	9301      	str	r3, [sp, #4]
 80030f0:	2d00      	cmp	r5, #0
 80030f2:	dd05      	ble.n	8003100 <_dtoa_r+0x9b8>
 80030f4:	4639      	mov	r1, r7
 80030f6:	462a      	mov	r2, r5
 80030f8:	4620      	mov	r0, r4
 80030fa:	f000 fc27 	bl	800394c <__lshift>
 80030fe:	4607      	mov	r7, r0
 8003100:	f1b8 0f00 	cmp.w	r8, #0
 8003104:	d05b      	beq.n	80031be <_dtoa_r+0xa76>
 8003106:	6879      	ldr	r1, [r7, #4]
 8003108:	4620      	mov	r0, r4
 800310a:	f000 fa0f 	bl	800352c <_Balloc>
 800310e:	4605      	mov	r5, r0
 8003110:	b928      	cbnz	r0, 800311e <_dtoa_r+0x9d6>
 8003112:	4b83      	ldr	r3, [pc, #524]	; (8003320 <_dtoa_r+0xbd8>)
 8003114:	4602      	mov	r2, r0
 8003116:	f240 21ef 	movw	r1, #751	; 0x2ef
 800311a:	f7ff bb2e 	b.w	800277a <_dtoa_r+0x32>
 800311e:	693a      	ldr	r2, [r7, #16]
 8003120:	3202      	adds	r2, #2
 8003122:	0092      	lsls	r2, r2, #2
 8003124:	f107 010c 	add.w	r1, r7, #12
 8003128:	300c      	adds	r0, #12
 800312a:	f001 fb3f 	bl	80047ac <memcpy>
 800312e:	2201      	movs	r2, #1
 8003130:	4629      	mov	r1, r5
 8003132:	4620      	mov	r0, r4
 8003134:	f000 fc0a 	bl	800394c <__lshift>
 8003138:	9b00      	ldr	r3, [sp, #0]
 800313a:	3301      	adds	r3, #1
 800313c:	9304      	str	r3, [sp, #16]
 800313e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8003142:	4413      	add	r3, r2
 8003144:	9308      	str	r3, [sp, #32]
 8003146:	9b02      	ldr	r3, [sp, #8]
 8003148:	f003 0301 	and.w	r3, r3, #1
 800314c:	46b8      	mov	r8, r7
 800314e:	9306      	str	r3, [sp, #24]
 8003150:	4607      	mov	r7, r0
 8003152:	9b04      	ldr	r3, [sp, #16]
 8003154:	4631      	mov	r1, r6
 8003156:	3b01      	subs	r3, #1
 8003158:	4650      	mov	r0, sl
 800315a:	9301      	str	r3, [sp, #4]
 800315c:	f7ff fa6c 	bl	8002638 <quorem>
 8003160:	4641      	mov	r1, r8
 8003162:	9002      	str	r0, [sp, #8]
 8003164:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8003168:	4650      	mov	r0, sl
 800316a:	f000 fc5b 	bl	8003a24 <__mcmp>
 800316e:	463a      	mov	r2, r7
 8003170:	9005      	str	r0, [sp, #20]
 8003172:	4631      	mov	r1, r6
 8003174:	4620      	mov	r0, r4
 8003176:	f000 fc71 	bl	8003a5c <__mdiff>
 800317a:	68c2      	ldr	r2, [r0, #12]
 800317c:	4605      	mov	r5, r0
 800317e:	bb02      	cbnz	r2, 80031c2 <_dtoa_r+0xa7a>
 8003180:	4601      	mov	r1, r0
 8003182:	4650      	mov	r0, sl
 8003184:	f000 fc4e 	bl	8003a24 <__mcmp>
 8003188:	4602      	mov	r2, r0
 800318a:	4629      	mov	r1, r5
 800318c:	4620      	mov	r0, r4
 800318e:	9209      	str	r2, [sp, #36]	; 0x24
 8003190:	f000 fa0c 	bl	80035ac <_Bfree>
 8003194:	9b07      	ldr	r3, [sp, #28]
 8003196:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003198:	9d04      	ldr	r5, [sp, #16]
 800319a:	ea43 0102 	orr.w	r1, r3, r2
 800319e:	9b06      	ldr	r3, [sp, #24]
 80031a0:	4319      	orrs	r1, r3
 80031a2:	d110      	bne.n	80031c6 <_dtoa_r+0xa7e>
 80031a4:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80031a8:	d029      	beq.n	80031fe <_dtoa_r+0xab6>
 80031aa:	9b05      	ldr	r3, [sp, #20]
 80031ac:	2b00      	cmp	r3, #0
 80031ae:	dd02      	ble.n	80031b6 <_dtoa_r+0xa6e>
 80031b0:	9b02      	ldr	r3, [sp, #8]
 80031b2:	f103 0931 	add.w	r9, r3, #49	; 0x31
 80031b6:	9b01      	ldr	r3, [sp, #4]
 80031b8:	f883 9000 	strb.w	r9, [r3]
 80031bc:	e774      	b.n	80030a8 <_dtoa_r+0x960>
 80031be:	4638      	mov	r0, r7
 80031c0:	e7ba      	b.n	8003138 <_dtoa_r+0x9f0>
 80031c2:	2201      	movs	r2, #1
 80031c4:	e7e1      	b.n	800318a <_dtoa_r+0xa42>
 80031c6:	9b05      	ldr	r3, [sp, #20]
 80031c8:	2b00      	cmp	r3, #0
 80031ca:	db04      	blt.n	80031d6 <_dtoa_r+0xa8e>
 80031cc:	9907      	ldr	r1, [sp, #28]
 80031ce:	430b      	orrs	r3, r1
 80031d0:	9906      	ldr	r1, [sp, #24]
 80031d2:	430b      	orrs	r3, r1
 80031d4:	d120      	bne.n	8003218 <_dtoa_r+0xad0>
 80031d6:	2a00      	cmp	r2, #0
 80031d8:	dded      	ble.n	80031b6 <_dtoa_r+0xa6e>
 80031da:	4651      	mov	r1, sl
 80031dc:	2201      	movs	r2, #1
 80031de:	4620      	mov	r0, r4
 80031e0:	f000 fbb4 	bl	800394c <__lshift>
 80031e4:	4631      	mov	r1, r6
 80031e6:	4682      	mov	sl, r0
 80031e8:	f000 fc1c 	bl	8003a24 <__mcmp>
 80031ec:	2800      	cmp	r0, #0
 80031ee:	dc03      	bgt.n	80031f8 <_dtoa_r+0xab0>
 80031f0:	d1e1      	bne.n	80031b6 <_dtoa_r+0xa6e>
 80031f2:	f019 0f01 	tst.w	r9, #1
 80031f6:	d0de      	beq.n	80031b6 <_dtoa_r+0xa6e>
 80031f8:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80031fc:	d1d8      	bne.n	80031b0 <_dtoa_r+0xa68>
 80031fe:	9a01      	ldr	r2, [sp, #4]
 8003200:	2339      	movs	r3, #57	; 0x39
 8003202:	7013      	strb	r3, [r2, #0]
 8003204:	462b      	mov	r3, r5
 8003206:	461d      	mov	r5, r3
 8003208:	3b01      	subs	r3, #1
 800320a:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800320e:	2a39      	cmp	r2, #57	; 0x39
 8003210:	d06c      	beq.n	80032ec <_dtoa_r+0xba4>
 8003212:	3201      	adds	r2, #1
 8003214:	701a      	strb	r2, [r3, #0]
 8003216:	e747      	b.n	80030a8 <_dtoa_r+0x960>
 8003218:	2a00      	cmp	r2, #0
 800321a:	dd07      	ble.n	800322c <_dtoa_r+0xae4>
 800321c:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003220:	d0ed      	beq.n	80031fe <_dtoa_r+0xab6>
 8003222:	9a01      	ldr	r2, [sp, #4]
 8003224:	f109 0301 	add.w	r3, r9, #1
 8003228:	7013      	strb	r3, [r2, #0]
 800322a:	e73d      	b.n	80030a8 <_dtoa_r+0x960>
 800322c:	9b04      	ldr	r3, [sp, #16]
 800322e:	9a08      	ldr	r2, [sp, #32]
 8003230:	f803 9c01 	strb.w	r9, [r3, #-1]
 8003234:	4293      	cmp	r3, r2
 8003236:	d043      	beq.n	80032c0 <_dtoa_r+0xb78>
 8003238:	4651      	mov	r1, sl
 800323a:	2300      	movs	r3, #0
 800323c:	220a      	movs	r2, #10
 800323e:	4620      	mov	r0, r4
 8003240:	f000 f9d6 	bl	80035f0 <__multadd>
 8003244:	45b8      	cmp	r8, r7
 8003246:	4682      	mov	sl, r0
 8003248:	f04f 0300 	mov.w	r3, #0
 800324c:	f04f 020a 	mov.w	r2, #10
 8003250:	4641      	mov	r1, r8
 8003252:	4620      	mov	r0, r4
 8003254:	d107      	bne.n	8003266 <_dtoa_r+0xb1e>
 8003256:	f000 f9cb 	bl	80035f0 <__multadd>
 800325a:	4680      	mov	r8, r0
 800325c:	4607      	mov	r7, r0
 800325e:	9b04      	ldr	r3, [sp, #16]
 8003260:	3301      	adds	r3, #1
 8003262:	9304      	str	r3, [sp, #16]
 8003264:	e775      	b.n	8003152 <_dtoa_r+0xa0a>
 8003266:	f000 f9c3 	bl	80035f0 <__multadd>
 800326a:	4639      	mov	r1, r7
 800326c:	4680      	mov	r8, r0
 800326e:	2300      	movs	r3, #0
 8003270:	220a      	movs	r2, #10
 8003272:	4620      	mov	r0, r4
 8003274:	f000 f9bc 	bl	80035f0 <__multadd>
 8003278:	4607      	mov	r7, r0
 800327a:	e7f0      	b.n	800325e <_dtoa_r+0xb16>
 800327c:	9b04      	ldr	r3, [sp, #16]
 800327e:	9301      	str	r3, [sp, #4]
 8003280:	9d00      	ldr	r5, [sp, #0]
 8003282:	4631      	mov	r1, r6
 8003284:	4650      	mov	r0, sl
 8003286:	f7ff f9d7 	bl	8002638 <quorem>
 800328a:	f100 0930 	add.w	r9, r0, #48	; 0x30
 800328e:	9b00      	ldr	r3, [sp, #0]
 8003290:	f805 9b01 	strb.w	r9, [r5], #1
 8003294:	1aea      	subs	r2, r5, r3
 8003296:	9b01      	ldr	r3, [sp, #4]
 8003298:	4293      	cmp	r3, r2
 800329a:	dd07      	ble.n	80032ac <_dtoa_r+0xb64>
 800329c:	4651      	mov	r1, sl
 800329e:	2300      	movs	r3, #0
 80032a0:	220a      	movs	r2, #10
 80032a2:	4620      	mov	r0, r4
 80032a4:	f000 f9a4 	bl	80035f0 <__multadd>
 80032a8:	4682      	mov	sl, r0
 80032aa:	e7ea      	b.n	8003282 <_dtoa_r+0xb3a>
 80032ac:	9b01      	ldr	r3, [sp, #4]
 80032ae:	2b00      	cmp	r3, #0
 80032b0:	bfc8      	it	gt
 80032b2:	461d      	movgt	r5, r3
 80032b4:	9b00      	ldr	r3, [sp, #0]
 80032b6:	bfd8      	it	le
 80032b8:	2501      	movle	r5, #1
 80032ba:	441d      	add	r5, r3
 80032bc:	f04f 0800 	mov.w	r8, #0
 80032c0:	4651      	mov	r1, sl
 80032c2:	2201      	movs	r2, #1
 80032c4:	4620      	mov	r0, r4
 80032c6:	f000 fb41 	bl	800394c <__lshift>
 80032ca:	4631      	mov	r1, r6
 80032cc:	4682      	mov	sl, r0
 80032ce:	f000 fba9 	bl	8003a24 <__mcmp>
 80032d2:	2800      	cmp	r0, #0
 80032d4:	dc96      	bgt.n	8003204 <_dtoa_r+0xabc>
 80032d6:	d102      	bne.n	80032de <_dtoa_r+0xb96>
 80032d8:	f019 0f01 	tst.w	r9, #1
 80032dc:	d192      	bne.n	8003204 <_dtoa_r+0xabc>
 80032de:	462b      	mov	r3, r5
 80032e0:	461d      	mov	r5, r3
 80032e2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80032e6:	2a30      	cmp	r2, #48	; 0x30
 80032e8:	d0fa      	beq.n	80032e0 <_dtoa_r+0xb98>
 80032ea:	e6dd      	b.n	80030a8 <_dtoa_r+0x960>
 80032ec:	9a00      	ldr	r2, [sp, #0]
 80032ee:	429a      	cmp	r2, r3
 80032f0:	d189      	bne.n	8003206 <_dtoa_r+0xabe>
 80032f2:	f10b 0b01 	add.w	fp, fp, #1
 80032f6:	2331      	movs	r3, #49	; 0x31
 80032f8:	e796      	b.n	8003228 <_dtoa_r+0xae0>
 80032fa:	4b0a      	ldr	r3, [pc, #40]	; (8003324 <_dtoa_r+0xbdc>)
 80032fc:	f7ff ba99 	b.w	8002832 <_dtoa_r+0xea>
 8003300:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003302:	2b00      	cmp	r3, #0
 8003304:	f47f aa6d 	bne.w	80027e2 <_dtoa_r+0x9a>
 8003308:	4b07      	ldr	r3, [pc, #28]	; (8003328 <_dtoa_r+0xbe0>)
 800330a:	f7ff ba92 	b.w	8002832 <_dtoa_r+0xea>
 800330e:	9b01      	ldr	r3, [sp, #4]
 8003310:	2b00      	cmp	r3, #0
 8003312:	dcb5      	bgt.n	8003280 <_dtoa_r+0xb38>
 8003314:	9b07      	ldr	r3, [sp, #28]
 8003316:	2b02      	cmp	r3, #2
 8003318:	f73f aeb1 	bgt.w	800307e <_dtoa_r+0x936>
 800331c:	e7b0      	b.n	8003280 <_dtoa_r+0xb38>
 800331e:	bf00      	nop
 8003320:	080051aa 	.word	0x080051aa
 8003324:	0800533b 	.word	0x0800533b
 8003328:	0800512e 	.word	0x0800512e

0800332c <_free_r>:
 800332c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800332e:	2900      	cmp	r1, #0
 8003330:	d044      	beq.n	80033bc <_free_r+0x90>
 8003332:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003336:	9001      	str	r0, [sp, #4]
 8003338:	2b00      	cmp	r3, #0
 800333a:	f1a1 0404 	sub.w	r4, r1, #4
 800333e:	bfb8      	it	lt
 8003340:	18e4      	addlt	r4, r4, r3
 8003342:	f000 f8e7 	bl	8003514 <__malloc_lock>
 8003346:	4a1e      	ldr	r2, [pc, #120]	; (80033c0 <_free_r+0x94>)
 8003348:	9801      	ldr	r0, [sp, #4]
 800334a:	6813      	ldr	r3, [r2, #0]
 800334c:	b933      	cbnz	r3, 800335c <_free_r+0x30>
 800334e:	6063      	str	r3, [r4, #4]
 8003350:	6014      	str	r4, [r2, #0]
 8003352:	b003      	add	sp, #12
 8003354:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003358:	f000 b8e2 	b.w	8003520 <__malloc_unlock>
 800335c:	42a3      	cmp	r3, r4
 800335e:	d908      	bls.n	8003372 <_free_r+0x46>
 8003360:	6825      	ldr	r5, [r4, #0]
 8003362:	1961      	adds	r1, r4, r5
 8003364:	428b      	cmp	r3, r1
 8003366:	bf01      	itttt	eq
 8003368:	6819      	ldreq	r1, [r3, #0]
 800336a:	685b      	ldreq	r3, [r3, #4]
 800336c:	1949      	addeq	r1, r1, r5
 800336e:	6021      	streq	r1, [r4, #0]
 8003370:	e7ed      	b.n	800334e <_free_r+0x22>
 8003372:	461a      	mov	r2, r3
 8003374:	685b      	ldr	r3, [r3, #4]
 8003376:	b10b      	cbz	r3, 800337c <_free_r+0x50>
 8003378:	42a3      	cmp	r3, r4
 800337a:	d9fa      	bls.n	8003372 <_free_r+0x46>
 800337c:	6811      	ldr	r1, [r2, #0]
 800337e:	1855      	adds	r5, r2, r1
 8003380:	42a5      	cmp	r5, r4
 8003382:	d10b      	bne.n	800339c <_free_r+0x70>
 8003384:	6824      	ldr	r4, [r4, #0]
 8003386:	4421      	add	r1, r4
 8003388:	1854      	adds	r4, r2, r1
 800338a:	42a3      	cmp	r3, r4
 800338c:	6011      	str	r1, [r2, #0]
 800338e:	d1e0      	bne.n	8003352 <_free_r+0x26>
 8003390:	681c      	ldr	r4, [r3, #0]
 8003392:	685b      	ldr	r3, [r3, #4]
 8003394:	6053      	str	r3, [r2, #4]
 8003396:	440c      	add	r4, r1
 8003398:	6014      	str	r4, [r2, #0]
 800339a:	e7da      	b.n	8003352 <_free_r+0x26>
 800339c:	d902      	bls.n	80033a4 <_free_r+0x78>
 800339e:	230c      	movs	r3, #12
 80033a0:	6003      	str	r3, [r0, #0]
 80033a2:	e7d6      	b.n	8003352 <_free_r+0x26>
 80033a4:	6825      	ldr	r5, [r4, #0]
 80033a6:	1961      	adds	r1, r4, r5
 80033a8:	428b      	cmp	r3, r1
 80033aa:	bf04      	itt	eq
 80033ac:	6819      	ldreq	r1, [r3, #0]
 80033ae:	685b      	ldreq	r3, [r3, #4]
 80033b0:	6063      	str	r3, [r4, #4]
 80033b2:	bf04      	itt	eq
 80033b4:	1949      	addeq	r1, r1, r5
 80033b6:	6021      	streq	r1, [r4, #0]
 80033b8:	6054      	str	r4, [r2, #4]
 80033ba:	e7ca      	b.n	8003352 <_free_r+0x26>
 80033bc:	b003      	add	sp, #12
 80033be:	bd30      	pop	{r4, r5, pc}
 80033c0:	2000039c 	.word	0x2000039c

080033c4 <malloc>:
 80033c4:	4b02      	ldr	r3, [pc, #8]	; (80033d0 <malloc+0xc>)
 80033c6:	4601      	mov	r1, r0
 80033c8:	6818      	ldr	r0, [r3, #0]
 80033ca:	f000 b823 	b.w	8003414 <_malloc_r>
 80033ce:	bf00      	nop
 80033d0:	20000060 	.word	0x20000060

080033d4 <sbrk_aligned>:
 80033d4:	b570      	push	{r4, r5, r6, lr}
 80033d6:	4e0e      	ldr	r6, [pc, #56]	; (8003410 <sbrk_aligned+0x3c>)
 80033d8:	460c      	mov	r4, r1
 80033da:	6831      	ldr	r1, [r6, #0]
 80033dc:	4605      	mov	r5, r0
 80033de:	b911      	cbnz	r1, 80033e6 <sbrk_aligned+0x12>
 80033e0:	f001 f9d4 	bl	800478c <_sbrk_r>
 80033e4:	6030      	str	r0, [r6, #0]
 80033e6:	4621      	mov	r1, r4
 80033e8:	4628      	mov	r0, r5
 80033ea:	f001 f9cf 	bl	800478c <_sbrk_r>
 80033ee:	1c43      	adds	r3, r0, #1
 80033f0:	d00a      	beq.n	8003408 <sbrk_aligned+0x34>
 80033f2:	1cc4      	adds	r4, r0, #3
 80033f4:	f024 0403 	bic.w	r4, r4, #3
 80033f8:	42a0      	cmp	r0, r4
 80033fa:	d007      	beq.n	800340c <sbrk_aligned+0x38>
 80033fc:	1a21      	subs	r1, r4, r0
 80033fe:	4628      	mov	r0, r5
 8003400:	f001 f9c4 	bl	800478c <_sbrk_r>
 8003404:	3001      	adds	r0, #1
 8003406:	d101      	bne.n	800340c <sbrk_aligned+0x38>
 8003408:	f04f 34ff 	mov.w	r4, #4294967295
 800340c:	4620      	mov	r0, r4
 800340e:	bd70      	pop	{r4, r5, r6, pc}
 8003410:	200003a0 	.word	0x200003a0

08003414 <_malloc_r>:
 8003414:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003418:	1ccd      	adds	r5, r1, #3
 800341a:	f025 0503 	bic.w	r5, r5, #3
 800341e:	3508      	adds	r5, #8
 8003420:	2d0c      	cmp	r5, #12
 8003422:	bf38      	it	cc
 8003424:	250c      	movcc	r5, #12
 8003426:	2d00      	cmp	r5, #0
 8003428:	4607      	mov	r7, r0
 800342a:	db01      	blt.n	8003430 <_malloc_r+0x1c>
 800342c:	42a9      	cmp	r1, r5
 800342e:	d905      	bls.n	800343c <_malloc_r+0x28>
 8003430:	230c      	movs	r3, #12
 8003432:	603b      	str	r3, [r7, #0]
 8003434:	2600      	movs	r6, #0
 8003436:	4630      	mov	r0, r6
 8003438:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800343c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8003510 <_malloc_r+0xfc>
 8003440:	f000 f868 	bl	8003514 <__malloc_lock>
 8003444:	f8d8 3000 	ldr.w	r3, [r8]
 8003448:	461c      	mov	r4, r3
 800344a:	bb5c      	cbnz	r4, 80034a4 <_malloc_r+0x90>
 800344c:	4629      	mov	r1, r5
 800344e:	4638      	mov	r0, r7
 8003450:	f7ff ffc0 	bl	80033d4 <sbrk_aligned>
 8003454:	1c43      	adds	r3, r0, #1
 8003456:	4604      	mov	r4, r0
 8003458:	d155      	bne.n	8003506 <_malloc_r+0xf2>
 800345a:	f8d8 4000 	ldr.w	r4, [r8]
 800345e:	4626      	mov	r6, r4
 8003460:	2e00      	cmp	r6, #0
 8003462:	d145      	bne.n	80034f0 <_malloc_r+0xdc>
 8003464:	2c00      	cmp	r4, #0
 8003466:	d048      	beq.n	80034fa <_malloc_r+0xe6>
 8003468:	6823      	ldr	r3, [r4, #0]
 800346a:	4631      	mov	r1, r6
 800346c:	4638      	mov	r0, r7
 800346e:	eb04 0903 	add.w	r9, r4, r3
 8003472:	f001 f98b 	bl	800478c <_sbrk_r>
 8003476:	4581      	cmp	r9, r0
 8003478:	d13f      	bne.n	80034fa <_malloc_r+0xe6>
 800347a:	6821      	ldr	r1, [r4, #0]
 800347c:	1a6d      	subs	r5, r5, r1
 800347e:	4629      	mov	r1, r5
 8003480:	4638      	mov	r0, r7
 8003482:	f7ff ffa7 	bl	80033d4 <sbrk_aligned>
 8003486:	3001      	adds	r0, #1
 8003488:	d037      	beq.n	80034fa <_malloc_r+0xe6>
 800348a:	6823      	ldr	r3, [r4, #0]
 800348c:	442b      	add	r3, r5
 800348e:	6023      	str	r3, [r4, #0]
 8003490:	f8d8 3000 	ldr.w	r3, [r8]
 8003494:	2b00      	cmp	r3, #0
 8003496:	d038      	beq.n	800350a <_malloc_r+0xf6>
 8003498:	685a      	ldr	r2, [r3, #4]
 800349a:	42a2      	cmp	r2, r4
 800349c:	d12b      	bne.n	80034f6 <_malloc_r+0xe2>
 800349e:	2200      	movs	r2, #0
 80034a0:	605a      	str	r2, [r3, #4]
 80034a2:	e00f      	b.n	80034c4 <_malloc_r+0xb0>
 80034a4:	6822      	ldr	r2, [r4, #0]
 80034a6:	1b52      	subs	r2, r2, r5
 80034a8:	d41f      	bmi.n	80034ea <_malloc_r+0xd6>
 80034aa:	2a0b      	cmp	r2, #11
 80034ac:	d917      	bls.n	80034de <_malloc_r+0xca>
 80034ae:	1961      	adds	r1, r4, r5
 80034b0:	42a3      	cmp	r3, r4
 80034b2:	6025      	str	r5, [r4, #0]
 80034b4:	bf18      	it	ne
 80034b6:	6059      	strne	r1, [r3, #4]
 80034b8:	6863      	ldr	r3, [r4, #4]
 80034ba:	bf08      	it	eq
 80034bc:	f8c8 1000 	streq.w	r1, [r8]
 80034c0:	5162      	str	r2, [r4, r5]
 80034c2:	604b      	str	r3, [r1, #4]
 80034c4:	4638      	mov	r0, r7
 80034c6:	f104 060b 	add.w	r6, r4, #11
 80034ca:	f000 f829 	bl	8003520 <__malloc_unlock>
 80034ce:	f026 0607 	bic.w	r6, r6, #7
 80034d2:	1d23      	adds	r3, r4, #4
 80034d4:	1af2      	subs	r2, r6, r3
 80034d6:	d0ae      	beq.n	8003436 <_malloc_r+0x22>
 80034d8:	1b9b      	subs	r3, r3, r6
 80034da:	50a3      	str	r3, [r4, r2]
 80034dc:	e7ab      	b.n	8003436 <_malloc_r+0x22>
 80034de:	42a3      	cmp	r3, r4
 80034e0:	6862      	ldr	r2, [r4, #4]
 80034e2:	d1dd      	bne.n	80034a0 <_malloc_r+0x8c>
 80034e4:	f8c8 2000 	str.w	r2, [r8]
 80034e8:	e7ec      	b.n	80034c4 <_malloc_r+0xb0>
 80034ea:	4623      	mov	r3, r4
 80034ec:	6864      	ldr	r4, [r4, #4]
 80034ee:	e7ac      	b.n	800344a <_malloc_r+0x36>
 80034f0:	4634      	mov	r4, r6
 80034f2:	6876      	ldr	r6, [r6, #4]
 80034f4:	e7b4      	b.n	8003460 <_malloc_r+0x4c>
 80034f6:	4613      	mov	r3, r2
 80034f8:	e7cc      	b.n	8003494 <_malloc_r+0x80>
 80034fa:	230c      	movs	r3, #12
 80034fc:	603b      	str	r3, [r7, #0]
 80034fe:	4638      	mov	r0, r7
 8003500:	f000 f80e 	bl	8003520 <__malloc_unlock>
 8003504:	e797      	b.n	8003436 <_malloc_r+0x22>
 8003506:	6025      	str	r5, [r4, #0]
 8003508:	e7dc      	b.n	80034c4 <_malloc_r+0xb0>
 800350a:	605b      	str	r3, [r3, #4]
 800350c:	deff      	udf	#255	; 0xff
 800350e:	bf00      	nop
 8003510:	2000039c 	.word	0x2000039c

08003514 <__malloc_lock>:
 8003514:	4801      	ldr	r0, [pc, #4]	; (800351c <__malloc_lock+0x8>)
 8003516:	f7ff b88d 	b.w	8002634 <__retarget_lock_acquire_recursive>
 800351a:	bf00      	nop
 800351c:	20000398 	.word	0x20000398

08003520 <__malloc_unlock>:
 8003520:	4801      	ldr	r0, [pc, #4]	; (8003528 <__malloc_unlock+0x8>)
 8003522:	f7ff b888 	b.w	8002636 <__retarget_lock_release_recursive>
 8003526:	bf00      	nop
 8003528:	20000398 	.word	0x20000398

0800352c <_Balloc>:
 800352c:	b570      	push	{r4, r5, r6, lr}
 800352e:	69c6      	ldr	r6, [r0, #28]
 8003530:	4604      	mov	r4, r0
 8003532:	460d      	mov	r5, r1
 8003534:	b976      	cbnz	r6, 8003554 <_Balloc+0x28>
 8003536:	2010      	movs	r0, #16
 8003538:	f7ff ff44 	bl	80033c4 <malloc>
 800353c:	4602      	mov	r2, r0
 800353e:	61e0      	str	r0, [r4, #28]
 8003540:	b920      	cbnz	r0, 800354c <_Balloc+0x20>
 8003542:	4b18      	ldr	r3, [pc, #96]	; (80035a4 <_Balloc+0x78>)
 8003544:	4818      	ldr	r0, [pc, #96]	; (80035a8 <_Balloc+0x7c>)
 8003546:	216b      	movs	r1, #107	; 0x6b
 8003548:	f001 f93e 	bl	80047c8 <__assert_func>
 800354c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003550:	6006      	str	r6, [r0, #0]
 8003552:	60c6      	str	r6, [r0, #12]
 8003554:	69e6      	ldr	r6, [r4, #28]
 8003556:	68f3      	ldr	r3, [r6, #12]
 8003558:	b183      	cbz	r3, 800357c <_Balloc+0x50>
 800355a:	69e3      	ldr	r3, [r4, #28]
 800355c:	68db      	ldr	r3, [r3, #12]
 800355e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003562:	b9b8      	cbnz	r0, 8003594 <_Balloc+0x68>
 8003564:	2101      	movs	r1, #1
 8003566:	fa01 f605 	lsl.w	r6, r1, r5
 800356a:	1d72      	adds	r2, r6, #5
 800356c:	0092      	lsls	r2, r2, #2
 800356e:	4620      	mov	r0, r4
 8003570:	f001 f948 	bl	8004804 <_calloc_r>
 8003574:	b160      	cbz	r0, 8003590 <_Balloc+0x64>
 8003576:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800357a:	e00e      	b.n	800359a <_Balloc+0x6e>
 800357c:	2221      	movs	r2, #33	; 0x21
 800357e:	2104      	movs	r1, #4
 8003580:	4620      	mov	r0, r4
 8003582:	f001 f93f 	bl	8004804 <_calloc_r>
 8003586:	69e3      	ldr	r3, [r4, #28]
 8003588:	60f0      	str	r0, [r6, #12]
 800358a:	68db      	ldr	r3, [r3, #12]
 800358c:	2b00      	cmp	r3, #0
 800358e:	d1e4      	bne.n	800355a <_Balloc+0x2e>
 8003590:	2000      	movs	r0, #0
 8003592:	bd70      	pop	{r4, r5, r6, pc}
 8003594:	6802      	ldr	r2, [r0, #0]
 8003596:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800359a:	2300      	movs	r3, #0
 800359c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80035a0:	e7f7      	b.n	8003592 <_Balloc+0x66>
 80035a2:	bf00      	nop
 80035a4:	0800513b 	.word	0x0800513b
 80035a8:	080051bb 	.word	0x080051bb

080035ac <_Bfree>:
 80035ac:	b570      	push	{r4, r5, r6, lr}
 80035ae:	69c6      	ldr	r6, [r0, #28]
 80035b0:	4605      	mov	r5, r0
 80035b2:	460c      	mov	r4, r1
 80035b4:	b976      	cbnz	r6, 80035d4 <_Bfree+0x28>
 80035b6:	2010      	movs	r0, #16
 80035b8:	f7ff ff04 	bl	80033c4 <malloc>
 80035bc:	4602      	mov	r2, r0
 80035be:	61e8      	str	r0, [r5, #28]
 80035c0:	b920      	cbnz	r0, 80035cc <_Bfree+0x20>
 80035c2:	4b09      	ldr	r3, [pc, #36]	; (80035e8 <_Bfree+0x3c>)
 80035c4:	4809      	ldr	r0, [pc, #36]	; (80035ec <_Bfree+0x40>)
 80035c6:	218f      	movs	r1, #143	; 0x8f
 80035c8:	f001 f8fe 	bl	80047c8 <__assert_func>
 80035cc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80035d0:	6006      	str	r6, [r0, #0]
 80035d2:	60c6      	str	r6, [r0, #12]
 80035d4:	b13c      	cbz	r4, 80035e6 <_Bfree+0x3a>
 80035d6:	69eb      	ldr	r3, [r5, #28]
 80035d8:	6862      	ldr	r2, [r4, #4]
 80035da:	68db      	ldr	r3, [r3, #12]
 80035dc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80035e0:	6021      	str	r1, [r4, #0]
 80035e2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80035e6:	bd70      	pop	{r4, r5, r6, pc}
 80035e8:	0800513b 	.word	0x0800513b
 80035ec:	080051bb 	.word	0x080051bb

080035f0 <__multadd>:
 80035f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80035f4:	690d      	ldr	r5, [r1, #16]
 80035f6:	4607      	mov	r7, r0
 80035f8:	460c      	mov	r4, r1
 80035fa:	461e      	mov	r6, r3
 80035fc:	f101 0c14 	add.w	ip, r1, #20
 8003600:	2000      	movs	r0, #0
 8003602:	f8dc 3000 	ldr.w	r3, [ip]
 8003606:	b299      	uxth	r1, r3
 8003608:	fb02 6101 	mla	r1, r2, r1, r6
 800360c:	0c1e      	lsrs	r6, r3, #16
 800360e:	0c0b      	lsrs	r3, r1, #16
 8003610:	fb02 3306 	mla	r3, r2, r6, r3
 8003614:	b289      	uxth	r1, r1
 8003616:	3001      	adds	r0, #1
 8003618:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800361c:	4285      	cmp	r5, r0
 800361e:	f84c 1b04 	str.w	r1, [ip], #4
 8003622:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003626:	dcec      	bgt.n	8003602 <__multadd+0x12>
 8003628:	b30e      	cbz	r6, 800366e <__multadd+0x7e>
 800362a:	68a3      	ldr	r3, [r4, #8]
 800362c:	42ab      	cmp	r3, r5
 800362e:	dc19      	bgt.n	8003664 <__multadd+0x74>
 8003630:	6861      	ldr	r1, [r4, #4]
 8003632:	4638      	mov	r0, r7
 8003634:	3101      	adds	r1, #1
 8003636:	f7ff ff79 	bl	800352c <_Balloc>
 800363a:	4680      	mov	r8, r0
 800363c:	b928      	cbnz	r0, 800364a <__multadd+0x5a>
 800363e:	4602      	mov	r2, r0
 8003640:	4b0c      	ldr	r3, [pc, #48]	; (8003674 <__multadd+0x84>)
 8003642:	480d      	ldr	r0, [pc, #52]	; (8003678 <__multadd+0x88>)
 8003644:	21ba      	movs	r1, #186	; 0xba
 8003646:	f001 f8bf 	bl	80047c8 <__assert_func>
 800364a:	6922      	ldr	r2, [r4, #16]
 800364c:	3202      	adds	r2, #2
 800364e:	f104 010c 	add.w	r1, r4, #12
 8003652:	0092      	lsls	r2, r2, #2
 8003654:	300c      	adds	r0, #12
 8003656:	f001 f8a9 	bl	80047ac <memcpy>
 800365a:	4621      	mov	r1, r4
 800365c:	4638      	mov	r0, r7
 800365e:	f7ff ffa5 	bl	80035ac <_Bfree>
 8003662:	4644      	mov	r4, r8
 8003664:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003668:	3501      	adds	r5, #1
 800366a:	615e      	str	r6, [r3, #20]
 800366c:	6125      	str	r5, [r4, #16]
 800366e:	4620      	mov	r0, r4
 8003670:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003674:	080051aa 	.word	0x080051aa
 8003678:	080051bb 	.word	0x080051bb

0800367c <__hi0bits>:
 800367c:	0c03      	lsrs	r3, r0, #16
 800367e:	041b      	lsls	r3, r3, #16
 8003680:	b9d3      	cbnz	r3, 80036b8 <__hi0bits+0x3c>
 8003682:	0400      	lsls	r0, r0, #16
 8003684:	2310      	movs	r3, #16
 8003686:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800368a:	bf04      	itt	eq
 800368c:	0200      	lsleq	r0, r0, #8
 800368e:	3308      	addeq	r3, #8
 8003690:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8003694:	bf04      	itt	eq
 8003696:	0100      	lsleq	r0, r0, #4
 8003698:	3304      	addeq	r3, #4
 800369a:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800369e:	bf04      	itt	eq
 80036a0:	0080      	lsleq	r0, r0, #2
 80036a2:	3302      	addeq	r3, #2
 80036a4:	2800      	cmp	r0, #0
 80036a6:	db05      	blt.n	80036b4 <__hi0bits+0x38>
 80036a8:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 80036ac:	f103 0301 	add.w	r3, r3, #1
 80036b0:	bf08      	it	eq
 80036b2:	2320      	moveq	r3, #32
 80036b4:	4618      	mov	r0, r3
 80036b6:	4770      	bx	lr
 80036b8:	2300      	movs	r3, #0
 80036ba:	e7e4      	b.n	8003686 <__hi0bits+0xa>

080036bc <__lo0bits>:
 80036bc:	6803      	ldr	r3, [r0, #0]
 80036be:	f013 0207 	ands.w	r2, r3, #7
 80036c2:	d00c      	beq.n	80036de <__lo0bits+0x22>
 80036c4:	07d9      	lsls	r1, r3, #31
 80036c6:	d422      	bmi.n	800370e <__lo0bits+0x52>
 80036c8:	079a      	lsls	r2, r3, #30
 80036ca:	bf49      	itett	mi
 80036cc:	085b      	lsrmi	r3, r3, #1
 80036ce:	089b      	lsrpl	r3, r3, #2
 80036d0:	6003      	strmi	r3, [r0, #0]
 80036d2:	2201      	movmi	r2, #1
 80036d4:	bf5c      	itt	pl
 80036d6:	6003      	strpl	r3, [r0, #0]
 80036d8:	2202      	movpl	r2, #2
 80036da:	4610      	mov	r0, r2
 80036dc:	4770      	bx	lr
 80036de:	b299      	uxth	r1, r3
 80036e0:	b909      	cbnz	r1, 80036e6 <__lo0bits+0x2a>
 80036e2:	0c1b      	lsrs	r3, r3, #16
 80036e4:	2210      	movs	r2, #16
 80036e6:	b2d9      	uxtb	r1, r3
 80036e8:	b909      	cbnz	r1, 80036ee <__lo0bits+0x32>
 80036ea:	3208      	adds	r2, #8
 80036ec:	0a1b      	lsrs	r3, r3, #8
 80036ee:	0719      	lsls	r1, r3, #28
 80036f0:	bf04      	itt	eq
 80036f2:	091b      	lsreq	r3, r3, #4
 80036f4:	3204      	addeq	r2, #4
 80036f6:	0799      	lsls	r1, r3, #30
 80036f8:	bf04      	itt	eq
 80036fa:	089b      	lsreq	r3, r3, #2
 80036fc:	3202      	addeq	r2, #2
 80036fe:	07d9      	lsls	r1, r3, #31
 8003700:	d403      	bmi.n	800370a <__lo0bits+0x4e>
 8003702:	085b      	lsrs	r3, r3, #1
 8003704:	f102 0201 	add.w	r2, r2, #1
 8003708:	d003      	beq.n	8003712 <__lo0bits+0x56>
 800370a:	6003      	str	r3, [r0, #0]
 800370c:	e7e5      	b.n	80036da <__lo0bits+0x1e>
 800370e:	2200      	movs	r2, #0
 8003710:	e7e3      	b.n	80036da <__lo0bits+0x1e>
 8003712:	2220      	movs	r2, #32
 8003714:	e7e1      	b.n	80036da <__lo0bits+0x1e>
	...

08003718 <__i2b>:
 8003718:	b510      	push	{r4, lr}
 800371a:	460c      	mov	r4, r1
 800371c:	2101      	movs	r1, #1
 800371e:	f7ff ff05 	bl	800352c <_Balloc>
 8003722:	4602      	mov	r2, r0
 8003724:	b928      	cbnz	r0, 8003732 <__i2b+0x1a>
 8003726:	4b05      	ldr	r3, [pc, #20]	; (800373c <__i2b+0x24>)
 8003728:	4805      	ldr	r0, [pc, #20]	; (8003740 <__i2b+0x28>)
 800372a:	f240 1145 	movw	r1, #325	; 0x145
 800372e:	f001 f84b 	bl	80047c8 <__assert_func>
 8003732:	2301      	movs	r3, #1
 8003734:	6144      	str	r4, [r0, #20]
 8003736:	6103      	str	r3, [r0, #16]
 8003738:	bd10      	pop	{r4, pc}
 800373a:	bf00      	nop
 800373c:	080051aa 	.word	0x080051aa
 8003740:	080051bb 	.word	0x080051bb

08003744 <__multiply>:
 8003744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003748:	4691      	mov	r9, r2
 800374a:	690a      	ldr	r2, [r1, #16]
 800374c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8003750:	429a      	cmp	r2, r3
 8003752:	bfb8      	it	lt
 8003754:	460b      	movlt	r3, r1
 8003756:	460c      	mov	r4, r1
 8003758:	bfbc      	itt	lt
 800375a:	464c      	movlt	r4, r9
 800375c:	4699      	movlt	r9, r3
 800375e:	6927      	ldr	r7, [r4, #16]
 8003760:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8003764:	68a3      	ldr	r3, [r4, #8]
 8003766:	6861      	ldr	r1, [r4, #4]
 8003768:	eb07 060a 	add.w	r6, r7, sl
 800376c:	42b3      	cmp	r3, r6
 800376e:	b085      	sub	sp, #20
 8003770:	bfb8      	it	lt
 8003772:	3101      	addlt	r1, #1
 8003774:	f7ff feda 	bl	800352c <_Balloc>
 8003778:	b930      	cbnz	r0, 8003788 <__multiply+0x44>
 800377a:	4602      	mov	r2, r0
 800377c:	4b44      	ldr	r3, [pc, #272]	; (8003890 <__multiply+0x14c>)
 800377e:	4845      	ldr	r0, [pc, #276]	; (8003894 <__multiply+0x150>)
 8003780:	f44f 71b1 	mov.w	r1, #354	; 0x162
 8003784:	f001 f820 	bl	80047c8 <__assert_func>
 8003788:	f100 0514 	add.w	r5, r0, #20
 800378c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003790:	462b      	mov	r3, r5
 8003792:	2200      	movs	r2, #0
 8003794:	4543      	cmp	r3, r8
 8003796:	d321      	bcc.n	80037dc <__multiply+0x98>
 8003798:	f104 0314 	add.w	r3, r4, #20
 800379c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80037a0:	f109 0314 	add.w	r3, r9, #20
 80037a4:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 80037a8:	9202      	str	r2, [sp, #8]
 80037aa:	1b3a      	subs	r2, r7, r4
 80037ac:	3a15      	subs	r2, #21
 80037ae:	f022 0203 	bic.w	r2, r2, #3
 80037b2:	3204      	adds	r2, #4
 80037b4:	f104 0115 	add.w	r1, r4, #21
 80037b8:	428f      	cmp	r7, r1
 80037ba:	bf38      	it	cc
 80037bc:	2204      	movcc	r2, #4
 80037be:	9201      	str	r2, [sp, #4]
 80037c0:	9a02      	ldr	r2, [sp, #8]
 80037c2:	9303      	str	r3, [sp, #12]
 80037c4:	429a      	cmp	r2, r3
 80037c6:	d80c      	bhi.n	80037e2 <__multiply+0x9e>
 80037c8:	2e00      	cmp	r6, #0
 80037ca:	dd03      	ble.n	80037d4 <__multiply+0x90>
 80037cc:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80037d0:	2b00      	cmp	r3, #0
 80037d2:	d05b      	beq.n	800388c <__multiply+0x148>
 80037d4:	6106      	str	r6, [r0, #16]
 80037d6:	b005      	add	sp, #20
 80037d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80037dc:	f843 2b04 	str.w	r2, [r3], #4
 80037e0:	e7d8      	b.n	8003794 <__multiply+0x50>
 80037e2:	f8b3 a000 	ldrh.w	sl, [r3]
 80037e6:	f1ba 0f00 	cmp.w	sl, #0
 80037ea:	d024      	beq.n	8003836 <__multiply+0xf2>
 80037ec:	f104 0e14 	add.w	lr, r4, #20
 80037f0:	46a9      	mov	r9, r5
 80037f2:	f04f 0c00 	mov.w	ip, #0
 80037f6:	f85e 2b04 	ldr.w	r2, [lr], #4
 80037fa:	f8d9 1000 	ldr.w	r1, [r9]
 80037fe:	fa1f fb82 	uxth.w	fp, r2
 8003802:	b289      	uxth	r1, r1
 8003804:	fb0a 110b 	mla	r1, sl, fp, r1
 8003808:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800380c:	f8d9 2000 	ldr.w	r2, [r9]
 8003810:	4461      	add	r1, ip
 8003812:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8003816:	fb0a c20b 	mla	r2, sl, fp, ip
 800381a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800381e:	b289      	uxth	r1, r1
 8003820:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8003824:	4577      	cmp	r7, lr
 8003826:	f849 1b04 	str.w	r1, [r9], #4
 800382a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800382e:	d8e2      	bhi.n	80037f6 <__multiply+0xb2>
 8003830:	9a01      	ldr	r2, [sp, #4]
 8003832:	f845 c002 	str.w	ip, [r5, r2]
 8003836:	9a03      	ldr	r2, [sp, #12]
 8003838:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800383c:	3304      	adds	r3, #4
 800383e:	f1b9 0f00 	cmp.w	r9, #0
 8003842:	d021      	beq.n	8003888 <__multiply+0x144>
 8003844:	6829      	ldr	r1, [r5, #0]
 8003846:	f104 0c14 	add.w	ip, r4, #20
 800384a:	46ae      	mov	lr, r5
 800384c:	f04f 0a00 	mov.w	sl, #0
 8003850:	f8bc b000 	ldrh.w	fp, [ip]
 8003854:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8003858:	fb09 220b 	mla	r2, r9, fp, r2
 800385c:	4452      	add	r2, sl
 800385e:	b289      	uxth	r1, r1
 8003860:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8003864:	f84e 1b04 	str.w	r1, [lr], #4
 8003868:	f85c 1b04 	ldr.w	r1, [ip], #4
 800386c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003870:	f8be 1000 	ldrh.w	r1, [lr]
 8003874:	fb09 110a 	mla	r1, r9, sl, r1
 8003878:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 800387c:	4567      	cmp	r7, ip
 800387e:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003882:	d8e5      	bhi.n	8003850 <__multiply+0x10c>
 8003884:	9a01      	ldr	r2, [sp, #4]
 8003886:	50a9      	str	r1, [r5, r2]
 8003888:	3504      	adds	r5, #4
 800388a:	e799      	b.n	80037c0 <__multiply+0x7c>
 800388c:	3e01      	subs	r6, #1
 800388e:	e79b      	b.n	80037c8 <__multiply+0x84>
 8003890:	080051aa 	.word	0x080051aa
 8003894:	080051bb 	.word	0x080051bb

08003898 <__pow5mult>:
 8003898:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800389c:	4615      	mov	r5, r2
 800389e:	f012 0203 	ands.w	r2, r2, #3
 80038a2:	4606      	mov	r6, r0
 80038a4:	460f      	mov	r7, r1
 80038a6:	d007      	beq.n	80038b8 <__pow5mult+0x20>
 80038a8:	4c25      	ldr	r4, [pc, #148]	; (8003940 <__pow5mult+0xa8>)
 80038aa:	3a01      	subs	r2, #1
 80038ac:	2300      	movs	r3, #0
 80038ae:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80038b2:	f7ff fe9d 	bl	80035f0 <__multadd>
 80038b6:	4607      	mov	r7, r0
 80038b8:	10ad      	asrs	r5, r5, #2
 80038ba:	d03d      	beq.n	8003938 <__pow5mult+0xa0>
 80038bc:	69f4      	ldr	r4, [r6, #28]
 80038be:	b97c      	cbnz	r4, 80038e0 <__pow5mult+0x48>
 80038c0:	2010      	movs	r0, #16
 80038c2:	f7ff fd7f 	bl	80033c4 <malloc>
 80038c6:	4602      	mov	r2, r0
 80038c8:	61f0      	str	r0, [r6, #28]
 80038ca:	b928      	cbnz	r0, 80038d8 <__pow5mult+0x40>
 80038cc:	4b1d      	ldr	r3, [pc, #116]	; (8003944 <__pow5mult+0xac>)
 80038ce:	481e      	ldr	r0, [pc, #120]	; (8003948 <__pow5mult+0xb0>)
 80038d0:	f240 11b3 	movw	r1, #435	; 0x1b3
 80038d4:	f000 ff78 	bl	80047c8 <__assert_func>
 80038d8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80038dc:	6004      	str	r4, [r0, #0]
 80038de:	60c4      	str	r4, [r0, #12]
 80038e0:	f8d6 801c 	ldr.w	r8, [r6, #28]
 80038e4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80038e8:	b94c      	cbnz	r4, 80038fe <__pow5mult+0x66>
 80038ea:	f240 2171 	movw	r1, #625	; 0x271
 80038ee:	4630      	mov	r0, r6
 80038f0:	f7ff ff12 	bl	8003718 <__i2b>
 80038f4:	2300      	movs	r3, #0
 80038f6:	f8c8 0008 	str.w	r0, [r8, #8]
 80038fa:	4604      	mov	r4, r0
 80038fc:	6003      	str	r3, [r0, #0]
 80038fe:	f04f 0900 	mov.w	r9, #0
 8003902:	07eb      	lsls	r3, r5, #31
 8003904:	d50a      	bpl.n	800391c <__pow5mult+0x84>
 8003906:	4639      	mov	r1, r7
 8003908:	4622      	mov	r2, r4
 800390a:	4630      	mov	r0, r6
 800390c:	f7ff ff1a 	bl	8003744 <__multiply>
 8003910:	4639      	mov	r1, r7
 8003912:	4680      	mov	r8, r0
 8003914:	4630      	mov	r0, r6
 8003916:	f7ff fe49 	bl	80035ac <_Bfree>
 800391a:	4647      	mov	r7, r8
 800391c:	106d      	asrs	r5, r5, #1
 800391e:	d00b      	beq.n	8003938 <__pow5mult+0xa0>
 8003920:	6820      	ldr	r0, [r4, #0]
 8003922:	b938      	cbnz	r0, 8003934 <__pow5mult+0x9c>
 8003924:	4622      	mov	r2, r4
 8003926:	4621      	mov	r1, r4
 8003928:	4630      	mov	r0, r6
 800392a:	f7ff ff0b 	bl	8003744 <__multiply>
 800392e:	6020      	str	r0, [r4, #0]
 8003930:	f8c0 9000 	str.w	r9, [r0]
 8003934:	4604      	mov	r4, r0
 8003936:	e7e4      	b.n	8003902 <__pow5mult+0x6a>
 8003938:	4638      	mov	r0, r7
 800393a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800393e:	bf00      	nop
 8003940:	08005308 	.word	0x08005308
 8003944:	0800513b 	.word	0x0800513b
 8003948:	080051bb 	.word	0x080051bb

0800394c <__lshift>:
 800394c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003950:	460c      	mov	r4, r1
 8003952:	6849      	ldr	r1, [r1, #4]
 8003954:	6923      	ldr	r3, [r4, #16]
 8003956:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800395a:	68a3      	ldr	r3, [r4, #8]
 800395c:	4607      	mov	r7, r0
 800395e:	4691      	mov	r9, r2
 8003960:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003964:	f108 0601 	add.w	r6, r8, #1
 8003968:	42b3      	cmp	r3, r6
 800396a:	db0b      	blt.n	8003984 <__lshift+0x38>
 800396c:	4638      	mov	r0, r7
 800396e:	f7ff fddd 	bl	800352c <_Balloc>
 8003972:	4605      	mov	r5, r0
 8003974:	b948      	cbnz	r0, 800398a <__lshift+0x3e>
 8003976:	4602      	mov	r2, r0
 8003978:	4b28      	ldr	r3, [pc, #160]	; (8003a1c <__lshift+0xd0>)
 800397a:	4829      	ldr	r0, [pc, #164]	; (8003a20 <__lshift+0xd4>)
 800397c:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 8003980:	f000 ff22 	bl	80047c8 <__assert_func>
 8003984:	3101      	adds	r1, #1
 8003986:	005b      	lsls	r3, r3, #1
 8003988:	e7ee      	b.n	8003968 <__lshift+0x1c>
 800398a:	2300      	movs	r3, #0
 800398c:	f100 0114 	add.w	r1, r0, #20
 8003990:	f100 0210 	add.w	r2, r0, #16
 8003994:	4618      	mov	r0, r3
 8003996:	4553      	cmp	r3, sl
 8003998:	db33      	blt.n	8003a02 <__lshift+0xb6>
 800399a:	6920      	ldr	r0, [r4, #16]
 800399c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80039a0:	f104 0314 	add.w	r3, r4, #20
 80039a4:	f019 091f 	ands.w	r9, r9, #31
 80039a8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80039ac:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80039b0:	d02b      	beq.n	8003a0a <__lshift+0xbe>
 80039b2:	f1c9 0e20 	rsb	lr, r9, #32
 80039b6:	468a      	mov	sl, r1
 80039b8:	2200      	movs	r2, #0
 80039ba:	6818      	ldr	r0, [r3, #0]
 80039bc:	fa00 f009 	lsl.w	r0, r0, r9
 80039c0:	4310      	orrs	r0, r2
 80039c2:	f84a 0b04 	str.w	r0, [sl], #4
 80039c6:	f853 2b04 	ldr.w	r2, [r3], #4
 80039ca:	459c      	cmp	ip, r3
 80039cc:	fa22 f20e 	lsr.w	r2, r2, lr
 80039d0:	d8f3      	bhi.n	80039ba <__lshift+0x6e>
 80039d2:	ebac 0304 	sub.w	r3, ip, r4
 80039d6:	3b15      	subs	r3, #21
 80039d8:	f023 0303 	bic.w	r3, r3, #3
 80039dc:	3304      	adds	r3, #4
 80039de:	f104 0015 	add.w	r0, r4, #21
 80039e2:	4584      	cmp	ip, r0
 80039e4:	bf38      	it	cc
 80039e6:	2304      	movcc	r3, #4
 80039e8:	50ca      	str	r2, [r1, r3]
 80039ea:	b10a      	cbz	r2, 80039f0 <__lshift+0xa4>
 80039ec:	f108 0602 	add.w	r6, r8, #2
 80039f0:	3e01      	subs	r6, #1
 80039f2:	4638      	mov	r0, r7
 80039f4:	612e      	str	r6, [r5, #16]
 80039f6:	4621      	mov	r1, r4
 80039f8:	f7ff fdd8 	bl	80035ac <_Bfree>
 80039fc:	4628      	mov	r0, r5
 80039fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003a02:	f842 0f04 	str.w	r0, [r2, #4]!
 8003a06:	3301      	adds	r3, #1
 8003a08:	e7c5      	b.n	8003996 <__lshift+0x4a>
 8003a0a:	3904      	subs	r1, #4
 8003a0c:	f853 2b04 	ldr.w	r2, [r3], #4
 8003a10:	f841 2f04 	str.w	r2, [r1, #4]!
 8003a14:	459c      	cmp	ip, r3
 8003a16:	d8f9      	bhi.n	8003a0c <__lshift+0xc0>
 8003a18:	e7ea      	b.n	80039f0 <__lshift+0xa4>
 8003a1a:	bf00      	nop
 8003a1c:	080051aa 	.word	0x080051aa
 8003a20:	080051bb 	.word	0x080051bb

08003a24 <__mcmp>:
 8003a24:	b530      	push	{r4, r5, lr}
 8003a26:	6902      	ldr	r2, [r0, #16]
 8003a28:	690c      	ldr	r4, [r1, #16]
 8003a2a:	1b12      	subs	r2, r2, r4
 8003a2c:	d10e      	bne.n	8003a4c <__mcmp+0x28>
 8003a2e:	f100 0314 	add.w	r3, r0, #20
 8003a32:	3114      	adds	r1, #20
 8003a34:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8003a38:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8003a3c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8003a40:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8003a44:	42a5      	cmp	r5, r4
 8003a46:	d003      	beq.n	8003a50 <__mcmp+0x2c>
 8003a48:	d305      	bcc.n	8003a56 <__mcmp+0x32>
 8003a4a:	2201      	movs	r2, #1
 8003a4c:	4610      	mov	r0, r2
 8003a4e:	bd30      	pop	{r4, r5, pc}
 8003a50:	4283      	cmp	r3, r0
 8003a52:	d3f3      	bcc.n	8003a3c <__mcmp+0x18>
 8003a54:	e7fa      	b.n	8003a4c <__mcmp+0x28>
 8003a56:	f04f 32ff 	mov.w	r2, #4294967295
 8003a5a:	e7f7      	b.n	8003a4c <__mcmp+0x28>

08003a5c <__mdiff>:
 8003a5c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a60:	460c      	mov	r4, r1
 8003a62:	4606      	mov	r6, r0
 8003a64:	4611      	mov	r1, r2
 8003a66:	4620      	mov	r0, r4
 8003a68:	4690      	mov	r8, r2
 8003a6a:	f7ff ffdb 	bl	8003a24 <__mcmp>
 8003a6e:	1e05      	subs	r5, r0, #0
 8003a70:	d110      	bne.n	8003a94 <__mdiff+0x38>
 8003a72:	4629      	mov	r1, r5
 8003a74:	4630      	mov	r0, r6
 8003a76:	f7ff fd59 	bl	800352c <_Balloc>
 8003a7a:	b930      	cbnz	r0, 8003a8a <__mdiff+0x2e>
 8003a7c:	4b3a      	ldr	r3, [pc, #232]	; (8003b68 <__mdiff+0x10c>)
 8003a7e:	4602      	mov	r2, r0
 8003a80:	f240 2137 	movw	r1, #567	; 0x237
 8003a84:	4839      	ldr	r0, [pc, #228]	; (8003b6c <__mdiff+0x110>)
 8003a86:	f000 fe9f 	bl	80047c8 <__assert_func>
 8003a8a:	2301      	movs	r3, #1
 8003a8c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003a90:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a94:	bfa4      	itt	ge
 8003a96:	4643      	movge	r3, r8
 8003a98:	46a0      	movge	r8, r4
 8003a9a:	4630      	mov	r0, r6
 8003a9c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8003aa0:	bfa6      	itte	ge
 8003aa2:	461c      	movge	r4, r3
 8003aa4:	2500      	movge	r5, #0
 8003aa6:	2501      	movlt	r5, #1
 8003aa8:	f7ff fd40 	bl	800352c <_Balloc>
 8003aac:	b920      	cbnz	r0, 8003ab8 <__mdiff+0x5c>
 8003aae:	4b2e      	ldr	r3, [pc, #184]	; (8003b68 <__mdiff+0x10c>)
 8003ab0:	4602      	mov	r2, r0
 8003ab2:	f240 2145 	movw	r1, #581	; 0x245
 8003ab6:	e7e5      	b.n	8003a84 <__mdiff+0x28>
 8003ab8:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8003abc:	6926      	ldr	r6, [r4, #16]
 8003abe:	60c5      	str	r5, [r0, #12]
 8003ac0:	f104 0914 	add.w	r9, r4, #20
 8003ac4:	f108 0514 	add.w	r5, r8, #20
 8003ac8:	f100 0e14 	add.w	lr, r0, #20
 8003acc:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8003ad0:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8003ad4:	f108 0210 	add.w	r2, r8, #16
 8003ad8:	46f2      	mov	sl, lr
 8003ada:	2100      	movs	r1, #0
 8003adc:	f859 3b04 	ldr.w	r3, [r9], #4
 8003ae0:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8003ae4:	fa11 f88b 	uxtah	r8, r1, fp
 8003ae8:	b299      	uxth	r1, r3
 8003aea:	0c1b      	lsrs	r3, r3, #16
 8003aec:	eba8 0801 	sub.w	r8, r8, r1
 8003af0:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8003af4:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8003af8:	fa1f f888 	uxth.w	r8, r8
 8003afc:	1419      	asrs	r1, r3, #16
 8003afe:	454e      	cmp	r6, r9
 8003b00:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8003b04:	f84a 3b04 	str.w	r3, [sl], #4
 8003b08:	d8e8      	bhi.n	8003adc <__mdiff+0x80>
 8003b0a:	1b33      	subs	r3, r6, r4
 8003b0c:	3b15      	subs	r3, #21
 8003b0e:	f023 0303 	bic.w	r3, r3, #3
 8003b12:	3304      	adds	r3, #4
 8003b14:	3415      	adds	r4, #21
 8003b16:	42a6      	cmp	r6, r4
 8003b18:	bf38      	it	cc
 8003b1a:	2304      	movcc	r3, #4
 8003b1c:	441d      	add	r5, r3
 8003b1e:	4473      	add	r3, lr
 8003b20:	469e      	mov	lr, r3
 8003b22:	462e      	mov	r6, r5
 8003b24:	4566      	cmp	r6, ip
 8003b26:	d30e      	bcc.n	8003b46 <__mdiff+0xea>
 8003b28:	f10c 0203 	add.w	r2, ip, #3
 8003b2c:	1b52      	subs	r2, r2, r5
 8003b2e:	f022 0203 	bic.w	r2, r2, #3
 8003b32:	3d03      	subs	r5, #3
 8003b34:	45ac      	cmp	ip, r5
 8003b36:	bf38      	it	cc
 8003b38:	2200      	movcc	r2, #0
 8003b3a:	4413      	add	r3, r2
 8003b3c:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8003b40:	b17a      	cbz	r2, 8003b62 <__mdiff+0x106>
 8003b42:	6107      	str	r7, [r0, #16]
 8003b44:	e7a4      	b.n	8003a90 <__mdiff+0x34>
 8003b46:	f856 8b04 	ldr.w	r8, [r6], #4
 8003b4a:	fa11 f288 	uxtah	r2, r1, r8
 8003b4e:	1414      	asrs	r4, r2, #16
 8003b50:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8003b54:	b292      	uxth	r2, r2
 8003b56:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8003b5a:	f84e 2b04 	str.w	r2, [lr], #4
 8003b5e:	1421      	asrs	r1, r4, #16
 8003b60:	e7e0      	b.n	8003b24 <__mdiff+0xc8>
 8003b62:	3f01      	subs	r7, #1
 8003b64:	e7ea      	b.n	8003b3c <__mdiff+0xe0>
 8003b66:	bf00      	nop
 8003b68:	080051aa 	.word	0x080051aa
 8003b6c:	080051bb 	.word	0x080051bb

08003b70 <__d2b>:
 8003b70:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003b74:	460f      	mov	r7, r1
 8003b76:	2101      	movs	r1, #1
 8003b78:	ec59 8b10 	vmov	r8, r9, d0
 8003b7c:	4616      	mov	r6, r2
 8003b7e:	f7ff fcd5 	bl	800352c <_Balloc>
 8003b82:	4604      	mov	r4, r0
 8003b84:	b930      	cbnz	r0, 8003b94 <__d2b+0x24>
 8003b86:	4602      	mov	r2, r0
 8003b88:	4b24      	ldr	r3, [pc, #144]	; (8003c1c <__d2b+0xac>)
 8003b8a:	4825      	ldr	r0, [pc, #148]	; (8003c20 <__d2b+0xb0>)
 8003b8c:	f240 310f 	movw	r1, #783	; 0x30f
 8003b90:	f000 fe1a 	bl	80047c8 <__assert_func>
 8003b94:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003b98:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003b9c:	bb2d      	cbnz	r5, 8003bea <__d2b+0x7a>
 8003b9e:	9301      	str	r3, [sp, #4]
 8003ba0:	f1b8 0300 	subs.w	r3, r8, #0
 8003ba4:	d026      	beq.n	8003bf4 <__d2b+0x84>
 8003ba6:	4668      	mov	r0, sp
 8003ba8:	9300      	str	r3, [sp, #0]
 8003baa:	f7ff fd87 	bl	80036bc <__lo0bits>
 8003bae:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003bb2:	b1e8      	cbz	r0, 8003bf0 <__d2b+0x80>
 8003bb4:	f1c0 0320 	rsb	r3, r0, #32
 8003bb8:	fa02 f303 	lsl.w	r3, r2, r3
 8003bbc:	430b      	orrs	r3, r1
 8003bbe:	40c2      	lsrs	r2, r0
 8003bc0:	6163      	str	r3, [r4, #20]
 8003bc2:	9201      	str	r2, [sp, #4]
 8003bc4:	9b01      	ldr	r3, [sp, #4]
 8003bc6:	61a3      	str	r3, [r4, #24]
 8003bc8:	2b00      	cmp	r3, #0
 8003bca:	bf14      	ite	ne
 8003bcc:	2202      	movne	r2, #2
 8003bce:	2201      	moveq	r2, #1
 8003bd0:	6122      	str	r2, [r4, #16]
 8003bd2:	b1bd      	cbz	r5, 8003c04 <__d2b+0x94>
 8003bd4:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8003bd8:	4405      	add	r5, r0
 8003bda:	603d      	str	r5, [r7, #0]
 8003bdc:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8003be0:	6030      	str	r0, [r6, #0]
 8003be2:	4620      	mov	r0, r4
 8003be4:	b003      	add	sp, #12
 8003be6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003bea:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003bee:	e7d6      	b.n	8003b9e <__d2b+0x2e>
 8003bf0:	6161      	str	r1, [r4, #20]
 8003bf2:	e7e7      	b.n	8003bc4 <__d2b+0x54>
 8003bf4:	a801      	add	r0, sp, #4
 8003bf6:	f7ff fd61 	bl	80036bc <__lo0bits>
 8003bfa:	9b01      	ldr	r3, [sp, #4]
 8003bfc:	6163      	str	r3, [r4, #20]
 8003bfe:	3020      	adds	r0, #32
 8003c00:	2201      	movs	r2, #1
 8003c02:	e7e5      	b.n	8003bd0 <__d2b+0x60>
 8003c04:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003c08:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8003c0c:	6038      	str	r0, [r7, #0]
 8003c0e:	6918      	ldr	r0, [r3, #16]
 8003c10:	f7ff fd34 	bl	800367c <__hi0bits>
 8003c14:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003c18:	e7e2      	b.n	8003be0 <__d2b+0x70>
 8003c1a:	bf00      	nop
 8003c1c:	080051aa 	.word	0x080051aa
 8003c20:	080051bb 	.word	0x080051bb

08003c24 <__ssputs_r>:
 8003c24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003c28:	688e      	ldr	r6, [r1, #8]
 8003c2a:	461f      	mov	r7, r3
 8003c2c:	42be      	cmp	r6, r7
 8003c2e:	680b      	ldr	r3, [r1, #0]
 8003c30:	4682      	mov	sl, r0
 8003c32:	460c      	mov	r4, r1
 8003c34:	4690      	mov	r8, r2
 8003c36:	d82c      	bhi.n	8003c92 <__ssputs_r+0x6e>
 8003c38:	898a      	ldrh	r2, [r1, #12]
 8003c3a:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8003c3e:	d026      	beq.n	8003c8e <__ssputs_r+0x6a>
 8003c40:	6965      	ldr	r5, [r4, #20]
 8003c42:	6909      	ldr	r1, [r1, #16]
 8003c44:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003c48:	eba3 0901 	sub.w	r9, r3, r1
 8003c4c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003c50:	1c7b      	adds	r3, r7, #1
 8003c52:	444b      	add	r3, r9
 8003c54:	106d      	asrs	r5, r5, #1
 8003c56:	429d      	cmp	r5, r3
 8003c58:	bf38      	it	cc
 8003c5a:	461d      	movcc	r5, r3
 8003c5c:	0553      	lsls	r3, r2, #21
 8003c5e:	d527      	bpl.n	8003cb0 <__ssputs_r+0x8c>
 8003c60:	4629      	mov	r1, r5
 8003c62:	f7ff fbd7 	bl	8003414 <_malloc_r>
 8003c66:	4606      	mov	r6, r0
 8003c68:	b360      	cbz	r0, 8003cc4 <__ssputs_r+0xa0>
 8003c6a:	6921      	ldr	r1, [r4, #16]
 8003c6c:	464a      	mov	r2, r9
 8003c6e:	f000 fd9d 	bl	80047ac <memcpy>
 8003c72:	89a3      	ldrh	r3, [r4, #12]
 8003c74:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8003c78:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003c7c:	81a3      	strh	r3, [r4, #12]
 8003c7e:	6126      	str	r6, [r4, #16]
 8003c80:	6165      	str	r5, [r4, #20]
 8003c82:	444e      	add	r6, r9
 8003c84:	eba5 0509 	sub.w	r5, r5, r9
 8003c88:	6026      	str	r6, [r4, #0]
 8003c8a:	60a5      	str	r5, [r4, #8]
 8003c8c:	463e      	mov	r6, r7
 8003c8e:	42be      	cmp	r6, r7
 8003c90:	d900      	bls.n	8003c94 <__ssputs_r+0x70>
 8003c92:	463e      	mov	r6, r7
 8003c94:	6820      	ldr	r0, [r4, #0]
 8003c96:	4632      	mov	r2, r6
 8003c98:	4641      	mov	r1, r8
 8003c9a:	f000 fd5c 	bl	8004756 <memmove>
 8003c9e:	68a3      	ldr	r3, [r4, #8]
 8003ca0:	1b9b      	subs	r3, r3, r6
 8003ca2:	60a3      	str	r3, [r4, #8]
 8003ca4:	6823      	ldr	r3, [r4, #0]
 8003ca6:	4433      	add	r3, r6
 8003ca8:	6023      	str	r3, [r4, #0]
 8003caa:	2000      	movs	r0, #0
 8003cac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003cb0:	462a      	mov	r2, r5
 8003cb2:	f000 fdcf 	bl	8004854 <_realloc_r>
 8003cb6:	4606      	mov	r6, r0
 8003cb8:	2800      	cmp	r0, #0
 8003cba:	d1e0      	bne.n	8003c7e <__ssputs_r+0x5a>
 8003cbc:	6921      	ldr	r1, [r4, #16]
 8003cbe:	4650      	mov	r0, sl
 8003cc0:	f7ff fb34 	bl	800332c <_free_r>
 8003cc4:	230c      	movs	r3, #12
 8003cc6:	f8ca 3000 	str.w	r3, [sl]
 8003cca:	89a3      	ldrh	r3, [r4, #12]
 8003ccc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003cd0:	81a3      	strh	r3, [r4, #12]
 8003cd2:	f04f 30ff 	mov.w	r0, #4294967295
 8003cd6:	e7e9      	b.n	8003cac <__ssputs_r+0x88>

08003cd8 <_svfiprintf_r>:
 8003cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003cdc:	4698      	mov	r8, r3
 8003cde:	898b      	ldrh	r3, [r1, #12]
 8003ce0:	061b      	lsls	r3, r3, #24
 8003ce2:	b09d      	sub	sp, #116	; 0x74
 8003ce4:	4607      	mov	r7, r0
 8003ce6:	460d      	mov	r5, r1
 8003ce8:	4614      	mov	r4, r2
 8003cea:	d50e      	bpl.n	8003d0a <_svfiprintf_r+0x32>
 8003cec:	690b      	ldr	r3, [r1, #16]
 8003cee:	b963      	cbnz	r3, 8003d0a <_svfiprintf_r+0x32>
 8003cf0:	2140      	movs	r1, #64	; 0x40
 8003cf2:	f7ff fb8f 	bl	8003414 <_malloc_r>
 8003cf6:	6028      	str	r0, [r5, #0]
 8003cf8:	6128      	str	r0, [r5, #16]
 8003cfa:	b920      	cbnz	r0, 8003d06 <_svfiprintf_r+0x2e>
 8003cfc:	230c      	movs	r3, #12
 8003cfe:	603b      	str	r3, [r7, #0]
 8003d00:	f04f 30ff 	mov.w	r0, #4294967295
 8003d04:	e0d0      	b.n	8003ea8 <_svfiprintf_r+0x1d0>
 8003d06:	2340      	movs	r3, #64	; 0x40
 8003d08:	616b      	str	r3, [r5, #20]
 8003d0a:	2300      	movs	r3, #0
 8003d0c:	9309      	str	r3, [sp, #36]	; 0x24
 8003d0e:	2320      	movs	r3, #32
 8003d10:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003d14:	f8cd 800c 	str.w	r8, [sp, #12]
 8003d18:	2330      	movs	r3, #48	; 0x30
 8003d1a:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8003ec0 <_svfiprintf_r+0x1e8>
 8003d1e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003d22:	f04f 0901 	mov.w	r9, #1
 8003d26:	4623      	mov	r3, r4
 8003d28:	469a      	mov	sl, r3
 8003d2a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003d2e:	b10a      	cbz	r2, 8003d34 <_svfiprintf_r+0x5c>
 8003d30:	2a25      	cmp	r2, #37	; 0x25
 8003d32:	d1f9      	bne.n	8003d28 <_svfiprintf_r+0x50>
 8003d34:	ebba 0b04 	subs.w	fp, sl, r4
 8003d38:	d00b      	beq.n	8003d52 <_svfiprintf_r+0x7a>
 8003d3a:	465b      	mov	r3, fp
 8003d3c:	4622      	mov	r2, r4
 8003d3e:	4629      	mov	r1, r5
 8003d40:	4638      	mov	r0, r7
 8003d42:	f7ff ff6f 	bl	8003c24 <__ssputs_r>
 8003d46:	3001      	adds	r0, #1
 8003d48:	f000 80a9 	beq.w	8003e9e <_svfiprintf_r+0x1c6>
 8003d4c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003d4e:	445a      	add	r2, fp
 8003d50:	9209      	str	r2, [sp, #36]	; 0x24
 8003d52:	f89a 3000 	ldrb.w	r3, [sl]
 8003d56:	2b00      	cmp	r3, #0
 8003d58:	f000 80a1 	beq.w	8003e9e <_svfiprintf_r+0x1c6>
 8003d5c:	2300      	movs	r3, #0
 8003d5e:	f04f 32ff 	mov.w	r2, #4294967295
 8003d62:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003d66:	f10a 0a01 	add.w	sl, sl, #1
 8003d6a:	9304      	str	r3, [sp, #16]
 8003d6c:	9307      	str	r3, [sp, #28]
 8003d6e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003d72:	931a      	str	r3, [sp, #104]	; 0x68
 8003d74:	4654      	mov	r4, sl
 8003d76:	2205      	movs	r2, #5
 8003d78:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003d7c:	4850      	ldr	r0, [pc, #320]	; (8003ec0 <_svfiprintf_r+0x1e8>)
 8003d7e:	f7fc fa2f 	bl	80001e0 <memchr>
 8003d82:	9a04      	ldr	r2, [sp, #16]
 8003d84:	b9d8      	cbnz	r0, 8003dbe <_svfiprintf_r+0xe6>
 8003d86:	06d0      	lsls	r0, r2, #27
 8003d88:	bf44      	itt	mi
 8003d8a:	2320      	movmi	r3, #32
 8003d8c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003d90:	0711      	lsls	r1, r2, #28
 8003d92:	bf44      	itt	mi
 8003d94:	232b      	movmi	r3, #43	; 0x2b
 8003d96:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003d9a:	f89a 3000 	ldrb.w	r3, [sl]
 8003d9e:	2b2a      	cmp	r3, #42	; 0x2a
 8003da0:	d015      	beq.n	8003dce <_svfiprintf_r+0xf6>
 8003da2:	9a07      	ldr	r2, [sp, #28]
 8003da4:	4654      	mov	r4, sl
 8003da6:	2000      	movs	r0, #0
 8003da8:	f04f 0c0a 	mov.w	ip, #10
 8003dac:	4621      	mov	r1, r4
 8003dae:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003db2:	3b30      	subs	r3, #48	; 0x30
 8003db4:	2b09      	cmp	r3, #9
 8003db6:	d94d      	bls.n	8003e54 <_svfiprintf_r+0x17c>
 8003db8:	b1b0      	cbz	r0, 8003de8 <_svfiprintf_r+0x110>
 8003dba:	9207      	str	r2, [sp, #28]
 8003dbc:	e014      	b.n	8003de8 <_svfiprintf_r+0x110>
 8003dbe:	eba0 0308 	sub.w	r3, r0, r8
 8003dc2:	fa09 f303 	lsl.w	r3, r9, r3
 8003dc6:	4313      	orrs	r3, r2
 8003dc8:	9304      	str	r3, [sp, #16]
 8003dca:	46a2      	mov	sl, r4
 8003dcc:	e7d2      	b.n	8003d74 <_svfiprintf_r+0x9c>
 8003dce:	9b03      	ldr	r3, [sp, #12]
 8003dd0:	1d19      	adds	r1, r3, #4
 8003dd2:	681b      	ldr	r3, [r3, #0]
 8003dd4:	9103      	str	r1, [sp, #12]
 8003dd6:	2b00      	cmp	r3, #0
 8003dd8:	bfbb      	ittet	lt
 8003dda:	425b      	neglt	r3, r3
 8003ddc:	f042 0202 	orrlt.w	r2, r2, #2
 8003de0:	9307      	strge	r3, [sp, #28]
 8003de2:	9307      	strlt	r3, [sp, #28]
 8003de4:	bfb8      	it	lt
 8003de6:	9204      	strlt	r2, [sp, #16]
 8003de8:	7823      	ldrb	r3, [r4, #0]
 8003dea:	2b2e      	cmp	r3, #46	; 0x2e
 8003dec:	d10c      	bne.n	8003e08 <_svfiprintf_r+0x130>
 8003dee:	7863      	ldrb	r3, [r4, #1]
 8003df0:	2b2a      	cmp	r3, #42	; 0x2a
 8003df2:	d134      	bne.n	8003e5e <_svfiprintf_r+0x186>
 8003df4:	9b03      	ldr	r3, [sp, #12]
 8003df6:	1d1a      	adds	r2, r3, #4
 8003df8:	681b      	ldr	r3, [r3, #0]
 8003dfa:	9203      	str	r2, [sp, #12]
 8003dfc:	2b00      	cmp	r3, #0
 8003dfe:	bfb8      	it	lt
 8003e00:	f04f 33ff 	movlt.w	r3, #4294967295
 8003e04:	3402      	adds	r4, #2
 8003e06:	9305      	str	r3, [sp, #20]
 8003e08:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8003ed0 <_svfiprintf_r+0x1f8>
 8003e0c:	7821      	ldrb	r1, [r4, #0]
 8003e0e:	2203      	movs	r2, #3
 8003e10:	4650      	mov	r0, sl
 8003e12:	f7fc f9e5 	bl	80001e0 <memchr>
 8003e16:	b138      	cbz	r0, 8003e28 <_svfiprintf_r+0x150>
 8003e18:	9b04      	ldr	r3, [sp, #16]
 8003e1a:	eba0 000a 	sub.w	r0, r0, sl
 8003e1e:	2240      	movs	r2, #64	; 0x40
 8003e20:	4082      	lsls	r2, r0
 8003e22:	4313      	orrs	r3, r2
 8003e24:	3401      	adds	r4, #1
 8003e26:	9304      	str	r3, [sp, #16]
 8003e28:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003e2c:	4825      	ldr	r0, [pc, #148]	; (8003ec4 <_svfiprintf_r+0x1ec>)
 8003e2e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003e32:	2206      	movs	r2, #6
 8003e34:	f7fc f9d4 	bl	80001e0 <memchr>
 8003e38:	2800      	cmp	r0, #0
 8003e3a:	d038      	beq.n	8003eae <_svfiprintf_r+0x1d6>
 8003e3c:	4b22      	ldr	r3, [pc, #136]	; (8003ec8 <_svfiprintf_r+0x1f0>)
 8003e3e:	bb1b      	cbnz	r3, 8003e88 <_svfiprintf_r+0x1b0>
 8003e40:	9b03      	ldr	r3, [sp, #12]
 8003e42:	3307      	adds	r3, #7
 8003e44:	f023 0307 	bic.w	r3, r3, #7
 8003e48:	3308      	adds	r3, #8
 8003e4a:	9303      	str	r3, [sp, #12]
 8003e4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003e4e:	4433      	add	r3, r6
 8003e50:	9309      	str	r3, [sp, #36]	; 0x24
 8003e52:	e768      	b.n	8003d26 <_svfiprintf_r+0x4e>
 8003e54:	fb0c 3202 	mla	r2, ip, r2, r3
 8003e58:	460c      	mov	r4, r1
 8003e5a:	2001      	movs	r0, #1
 8003e5c:	e7a6      	b.n	8003dac <_svfiprintf_r+0xd4>
 8003e5e:	2300      	movs	r3, #0
 8003e60:	3401      	adds	r4, #1
 8003e62:	9305      	str	r3, [sp, #20]
 8003e64:	4619      	mov	r1, r3
 8003e66:	f04f 0c0a 	mov.w	ip, #10
 8003e6a:	4620      	mov	r0, r4
 8003e6c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003e70:	3a30      	subs	r2, #48	; 0x30
 8003e72:	2a09      	cmp	r2, #9
 8003e74:	d903      	bls.n	8003e7e <_svfiprintf_r+0x1a6>
 8003e76:	2b00      	cmp	r3, #0
 8003e78:	d0c6      	beq.n	8003e08 <_svfiprintf_r+0x130>
 8003e7a:	9105      	str	r1, [sp, #20]
 8003e7c:	e7c4      	b.n	8003e08 <_svfiprintf_r+0x130>
 8003e7e:	fb0c 2101 	mla	r1, ip, r1, r2
 8003e82:	4604      	mov	r4, r0
 8003e84:	2301      	movs	r3, #1
 8003e86:	e7f0      	b.n	8003e6a <_svfiprintf_r+0x192>
 8003e88:	ab03      	add	r3, sp, #12
 8003e8a:	9300      	str	r3, [sp, #0]
 8003e8c:	462a      	mov	r2, r5
 8003e8e:	4b0f      	ldr	r3, [pc, #60]	; (8003ecc <_svfiprintf_r+0x1f4>)
 8003e90:	a904      	add	r1, sp, #16
 8003e92:	4638      	mov	r0, r7
 8003e94:	f7fd fe20 	bl	8001ad8 <_printf_float>
 8003e98:	1c42      	adds	r2, r0, #1
 8003e9a:	4606      	mov	r6, r0
 8003e9c:	d1d6      	bne.n	8003e4c <_svfiprintf_r+0x174>
 8003e9e:	89ab      	ldrh	r3, [r5, #12]
 8003ea0:	065b      	lsls	r3, r3, #25
 8003ea2:	f53f af2d 	bmi.w	8003d00 <_svfiprintf_r+0x28>
 8003ea6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003ea8:	b01d      	add	sp, #116	; 0x74
 8003eaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003eae:	ab03      	add	r3, sp, #12
 8003eb0:	9300      	str	r3, [sp, #0]
 8003eb2:	462a      	mov	r2, r5
 8003eb4:	4b05      	ldr	r3, [pc, #20]	; (8003ecc <_svfiprintf_r+0x1f4>)
 8003eb6:	a904      	add	r1, sp, #16
 8003eb8:	4638      	mov	r0, r7
 8003eba:	f7fe f8b1 	bl	8002020 <_printf_i>
 8003ebe:	e7eb      	b.n	8003e98 <_svfiprintf_r+0x1c0>
 8003ec0:	08005314 	.word	0x08005314
 8003ec4:	0800531e 	.word	0x0800531e
 8003ec8:	08001ad9 	.word	0x08001ad9
 8003ecc:	08003c25 	.word	0x08003c25
 8003ed0:	0800531a 	.word	0x0800531a

08003ed4 <_sungetc_r>:
 8003ed4:	b538      	push	{r3, r4, r5, lr}
 8003ed6:	1c4b      	adds	r3, r1, #1
 8003ed8:	4614      	mov	r4, r2
 8003eda:	d103      	bne.n	8003ee4 <_sungetc_r+0x10>
 8003edc:	f04f 35ff 	mov.w	r5, #4294967295
 8003ee0:	4628      	mov	r0, r5
 8003ee2:	bd38      	pop	{r3, r4, r5, pc}
 8003ee4:	8993      	ldrh	r3, [r2, #12]
 8003ee6:	f023 0320 	bic.w	r3, r3, #32
 8003eea:	8193      	strh	r3, [r2, #12]
 8003eec:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003eee:	6852      	ldr	r2, [r2, #4]
 8003ef0:	b2cd      	uxtb	r5, r1
 8003ef2:	b18b      	cbz	r3, 8003f18 <_sungetc_r+0x44>
 8003ef4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8003ef6:	4293      	cmp	r3, r2
 8003ef8:	dd08      	ble.n	8003f0c <_sungetc_r+0x38>
 8003efa:	6823      	ldr	r3, [r4, #0]
 8003efc:	1e5a      	subs	r2, r3, #1
 8003efe:	6022      	str	r2, [r4, #0]
 8003f00:	f803 5c01 	strb.w	r5, [r3, #-1]
 8003f04:	6863      	ldr	r3, [r4, #4]
 8003f06:	3301      	adds	r3, #1
 8003f08:	6063      	str	r3, [r4, #4]
 8003f0a:	e7e9      	b.n	8003ee0 <_sungetc_r+0xc>
 8003f0c:	4621      	mov	r1, r4
 8003f0e:	f000 fbe8 	bl	80046e2 <__submore>
 8003f12:	2800      	cmp	r0, #0
 8003f14:	d0f1      	beq.n	8003efa <_sungetc_r+0x26>
 8003f16:	e7e1      	b.n	8003edc <_sungetc_r+0x8>
 8003f18:	6921      	ldr	r1, [r4, #16]
 8003f1a:	6823      	ldr	r3, [r4, #0]
 8003f1c:	b151      	cbz	r1, 8003f34 <_sungetc_r+0x60>
 8003f1e:	4299      	cmp	r1, r3
 8003f20:	d208      	bcs.n	8003f34 <_sungetc_r+0x60>
 8003f22:	f813 1c01 	ldrb.w	r1, [r3, #-1]
 8003f26:	42a9      	cmp	r1, r5
 8003f28:	d104      	bne.n	8003f34 <_sungetc_r+0x60>
 8003f2a:	3b01      	subs	r3, #1
 8003f2c:	3201      	adds	r2, #1
 8003f2e:	6023      	str	r3, [r4, #0]
 8003f30:	6062      	str	r2, [r4, #4]
 8003f32:	e7d5      	b.n	8003ee0 <_sungetc_r+0xc>
 8003f34:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
 8003f38:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003f3c:	6363      	str	r3, [r4, #52]	; 0x34
 8003f3e:	2303      	movs	r3, #3
 8003f40:	63a3      	str	r3, [r4, #56]	; 0x38
 8003f42:	4623      	mov	r3, r4
 8003f44:	f803 5f46 	strb.w	r5, [r3, #70]!
 8003f48:	6023      	str	r3, [r4, #0]
 8003f4a:	2301      	movs	r3, #1
 8003f4c:	e7dc      	b.n	8003f08 <_sungetc_r+0x34>

08003f4e <__ssrefill_r>:
 8003f4e:	b510      	push	{r4, lr}
 8003f50:	460c      	mov	r4, r1
 8003f52:	6b49      	ldr	r1, [r1, #52]	; 0x34
 8003f54:	b169      	cbz	r1, 8003f72 <__ssrefill_r+0x24>
 8003f56:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003f5a:	4299      	cmp	r1, r3
 8003f5c:	d001      	beq.n	8003f62 <__ssrefill_r+0x14>
 8003f5e:	f7ff f9e5 	bl	800332c <_free_r>
 8003f62:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003f64:	6063      	str	r3, [r4, #4]
 8003f66:	2000      	movs	r0, #0
 8003f68:	6360      	str	r0, [r4, #52]	; 0x34
 8003f6a:	b113      	cbz	r3, 8003f72 <__ssrefill_r+0x24>
 8003f6c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003f6e:	6023      	str	r3, [r4, #0]
 8003f70:	bd10      	pop	{r4, pc}
 8003f72:	6923      	ldr	r3, [r4, #16]
 8003f74:	6023      	str	r3, [r4, #0]
 8003f76:	2300      	movs	r3, #0
 8003f78:	6063      	str	r3, [r4, #4]
 8003f7a:	89a3      	ldrh	r3, [r4, #12]
 8003f7c:	f043 0320 	orr.w	r3, r3, #32
 8003f80:	81a3      	strh	r3, [r4, #12]
 8003f82:	f04f 30ff 	mov.w	r0, #4294967295
 8003f86:	e7f3      	b.n	8003f70 <__ssrefill_r+0x22>

08003f88 <__ssvfiscanf_r>:
 8003f88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f8c:	460c      	mov	r4, r1
 8003f8e:	f5ad 7d22 	sub.w	sp, sp, #648	; 0x288
 8003f92:	2100      	movs	r1, #0
 8003f94:	e9cd 1144 	strd	r1, r1, [sp, #272]	; 0x110
 8003f98:	49a6      	ldr	r1, [pc, #664]	; (8004234 <__ssvfiscanf_r+0x2ac>)
 8003f9a:	91a0      	str	r1, [sp, #640]	; 0x280
 8003f9c:	f10d 0804 	add.w	r8, sp, #4
 8003fa0:	49a5      	ldr	r1, [pc, #660]	; (8004238 <__ssvfiscanf_r+0x2b0>)
 8003fa2:	4fa6      	ldr	r7, [pc, #664]	; (800423c <__ssvfiscanf_r+0x2b4>)
 8003fa4:	f8df 9298 	ldr.w	r9, [pc, #664]	; 8004240 <__ssvfiscanf_r+0x2b8>
 8003fa8:	f8cd 8118 	str.w	r8, [sp, #280]	; 0x118
 8003fac:	4606      	mov	r6, r0
 8003fae:	91a1      	str	r1, [sp, #644]	; 0x284
 8003fb0:	9300      	str	r3, [sp, #0]
 8003fb2:	7813      	ldrb	r3, [r2, #0]
 8003fb4:	2b00      	cmp	r3, #0
 8003fb6:	f000 815a 	beq.w	800426e <__ssvfiscanf_r+0x2e6>
 8003fba:	5cf9      	ldrb	r1, [r7, r3]
 8003fbc:	f011 0108 	ands.w	r1, r1, #8
 8003fc0:	f102 0501 	add.w	r5, r2, #1
 8003fc4:	d019      	beq.n	8003ffa <__ssvfiscanf_r+0x72>
 8003fc6:	6863      	ldr	r3, [r4, #4]
 8003fc8:	2b00      	cmp	r3, #0
 8003fca:	dd0f      	ble.n	8003fec <__ssvfiscanf_r+0x64>
 8003fcc:	6823      	ldr	r3, [r4, #0]
 8003fce:	781a      	ldrb	r2, [r3, #0]
 8003fd0:	5cba      	ldrb	r2, [r7, r2]
 8003fd2:	0712      	lsls	r2, r2, #28
 8003fd4:	d401      	bmi.n	8003fda <__ssvfiscanf_r+0x52>
 8003fd6:	462a      	mov	r2, r5
 8003fd8:	e7eb      	b.n	8003fb2 <__ssvfiscanf_r+0x2a>
 8003fda:	9a45      	ldr	r2, [sp, #276]	; 0x114
 8003fdc:	3201      	adds	r2, #1
 8003fde:	9245      	str	r2, [sp, #276]	; 0x114
 8003fe0:	6862      	ldr	r2, [r4, #4]
 8003fe2:	3301      	adds	r3, #1
 8003fe4:	3a01      	subs	r2, #1
 8003fe6:	6062      	str	r2, [r4, #4]
 8003fe8:	6023      	str	r3, [r4, #0]
 8003fea:	e7ec      	b.n	8003fc6 <__ssvfiscanf_r+0x3e>
 8003fec:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8003fee:	4621      	mov	r1, r4
 8003ff0:	4630      	mov	r0, r6
 8003ff2:	4798      	blx	r3
 8003ff4:	2800      	cmp	r0, #0
 8003ff6:	d0e9      	beq.n	8003fcc <__ssvfiscanf_r+0x44>
 8003ff8:	e7ed      	b.n	8003fd6 <__ssvfiscanf_r+0x4e>
 8003ffa:	2b25      	cmp	r3, #37	; 0x25
 8003ffc:	d012      	beq.n	8004024 <__ssvfiscanf_r+0x9c>
 8003ffe:	469a      	mov	sl, r3
 8004000:	6863      	ldr	r3, [r4, #4]
 8004002:	2b00      	cmp	r3, #0
 8004004:	f340 8091 	ble.w	800412a <__ssvfiscanf_r+0x1a2>
 8004008:	6822      	ldr	r2, [r4, #0]
 800400a:	7813      	ldrb	r3, [r2, #0]
 800400c:	4553      	cmp	r3, sl
 800400e:	f040 812e 	bne.w	800426e <__ssvfiscanf_r+0x2e6>
 8004012:	6863      	ldr	r3, [r4, #4]
 8004014:	3b01      	subs	r3, #1
 8004016:	6063      	str	r3, [r4, #4]
 8004018:	9b45      	ldr	r3, [sp, #276]	; 0x114
 800401a:	3201      	adds	r2, #1
 800401c:	3301      	adds	r3, #1
 800401e:	6022      	str	r2, [r4, #0]
 8004020:	9345      	str	r3, [sp, #276]	; 0x114
 8004022:	e7d8      	b.n	8003fd6 <__ssvfiscanf_r+0x4e>
 8004024:	9141      	str	r1, [sp, #260]	; 0x104
 8004026:	9143      	str	r1, [sp, #268]	; 0x10c
 8004028:	7853      	ldrb	r3, [r2, #1]
 800402a:	2b2a      	cmp	r3, #42	; 0x2a
 800402c:	bf02      	ittt	eq
 800402e:	2310      	moveq	r3, #16
 8004030:	1c95      	addeq	r5, r2, #2
 8004032:	9341      	streq	r3, [sp, #260]	; 0x104
 8004034:	220a      	movs	r2, #10
 8004036:	46aa      	mov	sl, r5
 8004038:	f81a 1b01 	ldrb.w	r1, [sl], #1
 800403c:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8004040:	2b09      	cmp	r3, #9
 8004042:	d91c      	bls.n	800407e <__ssvfiscanf_r+0xf6>
 8004044:	487e      	ldr	r0, [pc, #504]	; (8004240 <__ssvfiscanf_r+0x2b8>)
 8004046:	2203      	movs	r2, #3
 8004048:	f7fc f8ca 	bl	80001e0 <memchr>
 800404c:	b138      	cbz	r0, 800405e <__ssvfiscanf_r+0xd6>
 800404e:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8004050:	eba0 0009 	sub.w	r0, r0, r9
 8004054:	2301      	movs	r3, #1
 8004056:	4083      	lsls	r3, r0
 8004058:	4313      	orrs	r3, r2
 800405a:	9341      	str	r3, [sp, #260]	; 0x104
 800405c:	4655      	mov	r5, sl
 800405e:	f815 3b01 	ldrb.w	r3, [r5], #1
 8004062:	2b78      	cmp	r3, #120	; 0x78
 8004064:	d806      	bhi.n	8004074 <__ssvfiscanf_r+0xec>
 8004066:	2b57      	cmp	r3, #87	; 0x57
 8004068:	d810      	bhi.n	800408c <__ssvfiscanf_r+0x104>
 800406a:	2b25      	cmp	r3, #37	; 0x25
 800406c:	d0c7      	beq.n	8003ffe <__ssvfiscanf_r+0x76>
 800406e:	d857      	bhi.n	8004120 <__ssvfiscanf_r+0x198>
 8004070:	2b00      	cmp	r3, #0
 8004072:	d065      	beq.n	8004140 <__ssvfiscanf_r+0x1b8>
 8004074:	2303      	movs	r3, #3
 8004076:	9347      	str	r3, [sp, #284]	; 0x11c
 8004078:	230a      	movs	r3, #10
 800407a:	9342      	str	r3, [sp, #264]	; 0x108
 800407c:	e076      	b.n	800416c <__ssvfiscanf_r+0x1e4>
 800407e:	9b43      	ldr	r3, [sp, #268]	; 0x10c
 8004080:	fb02 1103 	mla	r1, r2, r3, r1
 8004084:	3930      	subs	r1, #48	; 0x30
 8004086:	9143      	str	r1, [sp, #268]	; 0x10c
 8004088:	4655      	mov	r5, sl
 800408a:	e7d4      	b.n	8004036 <__ssvfiscanf_r+0xae>
 800408c:	f1a3 0258 	sub.w	r2, r3, #88	; 0x58
 8004090:	2a20      	cmp	r2, #32
 8004092:	d8ef      	bhi.n	8004074 <__ssvfiscanf_r+0xec>
 8004094:	a101      	add	r1, pc, #4	; (adr r1, 800409c <__ssvfiscanf_r+0x114>)
 8004096:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800409a:	bf00      	nop
 800409c:	0800414f 	.word	0x0800414f
 80040a0:	08004075 	.word	0x08004075
 80040a4:	08004075 	.word	0x08004075
 80040a8:	080041ad 	.word	0x080041ad
 80040ac:	08004075 	.word	0x08004075
 80040b0:	08004075 	.word	0x08004075
 80040b4:	08004075 	.word	0x08004075
 80040b8:	08004075 	.word	0x08004075
 80040bc:	08004075 	.word	0x08004075
 80040c0:	08004075 	.word	0x08004075
 80040c4:	08004075 	.word	0x08004075
 80040c8:	080041c3 	.word	0x080041c3
 80040cc:	080041a9 	.word	0x080041a9
 80040d0:	08004127 	.word	0x08004127
 80040d4:	08004127 	.word	0x08004127
 80040d8:	08004127 	.word	0x08004127
 80040dc:	08004075 	.word	0x08004075
 80040e0:	08004165 	.word	0x08004165
 80040e4:	08004075 	.word	0x08004075
 80040e8:	08004075 	.word	0x08004075
 80040ec:	08004075 	.word	0x08004075
 80040f0:	08004075 	.word	0x08004075
 80040f4:	080041d3 	.word	0x080041d3
 80040f8:	080041a1 	.word	0x080041a1
 80040fc:	08004147 	.word	0x08004147
 8004100:	08004075 	.word	0x08004075
 8004104:	08004075 	.word	0x08004075
 8004108:	080041cf 	.word	0x080041cf
 800410c:	08004075 	.word	0x08004075
 8004110:	080041a9 	.word	0x080041a9
 8004114:	08004075 	.word	0x08004075
 8004118:	08004075 	.word	0x08004075
 800411c:	0800414f 	.word	0x0800414f
 8004120:	3b45      	subs	r3, #69	; 0x45
 8004122:	2b02      	cmp	r3, #2
 8004124:	d8a6      	bhi.n	8004074 <__ssvfiscanf_r+0xec>
 8004126:	2305      	movs	r3, #5
 8004128:	e01f      	b.n	800416a <__ssvfiscanf_r+0x1e2>
 800412a:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 800412c:	4621      	mov	r1, r4
 800412e:	4630      	mov	r0, r6
 8004130:	4798      	blx	r3
 8004132:	2800      	cmp	r0, #0
 8004134:	f43f af68 	beq.w	8004008 <__ssvfiscanf_r+0x80>
 8004138:	9844      	ldr	r0, [sp, #272]	; 0x110
 800413a:	2800      	cmp	r0, #0
 800413c:	f040 808d 	bne.w	800425a <__ssvfiscanf_r+0x2d2>
 8004140:	f04f 30ff 	mov.w	r0, #4294967295
 8004144:	e08f      	b.n	8004266 <__ssvfiscanf_r+0x2de>
 8004146:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8004148:	f042 0220 	orr.w	r2, r2, #32
 800414c:	9241      	str	r2, [sp, #260]	; 0x104
 800414e:	9a41      	ldr	r2, [sp, #260]	; 0x104
 8004150:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004154:	9241      	str	r2, [sp, #260]	; 0x104
 8004156:	2210      	movs	r2, #16
 8004158:	2b6f      	cmp	r3, #111	; 0x6f
 800415a:	9242      	str	r2, [sp, #264]	; 0x108
 800415c:	bf34      	ite	cc
 800415e:	2303      	movcc	r3, #3
 8004160:	2304      	movcs	r3, #4
 8004162:	e002      	b.n	800416a <__ssvfiscanf_r+0x1e2>
 8004164:	2300      	movs	r3, #0
 8004166:	9342      	str	r3, [sp, #264]	; 0x108
 8004168:	2303      	movs	r3, #3
 800416a:	9347      	str	r3, [sp, #284]	; 0x11c
 800416c:	6863      	ldr	r3, [r4, #4]
 800416e:	2b00      	cmp	r3, #0
 8004170:	dd3d      	ble.n	80041ee <__ssvfiscanf_r+0x266>
 8004172:	9b41      	ldr	r3, [sp, #260]	; 0x104
 8004174:	0659      	lsls	r1, r3, #25
 8004176:	d404      	bmi.n	8004182 <__ssvfiscanf_r+0x1fa>
 8004178:	6823      	ldr	r3, [r4, #0]
 800417a:	781a      	ldrb	r2, [r3, #0]
 800417c:	5cba      	ldrb	r2, [r7, r2]
 800417e:	0712      	lsls	r2, r2, #28
 8004180:	d43c      	bmi.n	80041fc <__ssvfiscanf_r+0x274>
 8004182:	9b47      	ldr	r3, [sp, #284]	; 0x11c
 8004184:	2b02      	cmp	r3, #2
 8004186:	dc4b      	bgt.n	8004220 <__ssvfiscanf_r+0x298>
 8004188:	466b      	mov	r3, sp
 800418a:	4622      	mov	r2, r4
 800418c:	a941      	add	r1, sp, #260	; 0x104
 800418e:	4630      	mov	r0, r6
 8004190:	f000 f872 	bl	8004278 <_scanf_chars>
 8004194:	2801      	cmp	r0, #1
 8004196:	d06a      	beq.n	800426e <__ssvfiscanf_r+0x2e6>
 8004198:	2802      	cmp	r0, #2
 800419a:	f47f af1c 	bne.w	8003fd6 <__ssvfiscanf_r+0x4e>
 800419e:	e7cb      	b.n	8004138 <__ssvfiscanf_r+0x1b0>
 80041a0:	2308      	movs	r3, #8
 80041a2:	9342      	str	r3, [sp, #264]	; 0x108
 80041a4:	2304      	movs	r3, #4
 80041a6:	e7e0      	b.n	800416a <__ssvfiscanf_r+0x1e2>
 80041a8:	220a      	movs	r2, #10
 80041aa:	e7d5      	b.n	8004158 <__ssvfiscanf_r+0x1d0>
 80041ac:	4629      	mov	r1, r5
 80041ae:	4640      	mov	r0, r8
 80041b0:	f000 fa5e 	bl	8004670 <__sccl>
 80041b4:	9b41      	ldr	r3, [sp, #260]	; 0x104
 80041b6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80041ba:	9341      	str	r3, [sp, #260]	; 0x104
 80041bc:	4605      	mov	r5, r0
 80041be:	2301      	movs	r3, #1
 80041c0:	e7d3      	b.n	800416a <__ssvfiscanf_r+0x1e2>
 80041c2:	9b41      	ldr	r3, [sp, #260]	; 0x104
 80041c4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80041c8:	9341      	str	r3, [sp, #260]	; 0x104
 80041ca:	2300      	movs	r3, #0
 80041cc:	e7cd      	b.n	800416a <__ssvfiscanf_r+0x1e2>
 80041ce:	2302      	movs	r3, #2
 80041d0:	e7cb      	b.n	800416a <__ssvfiscanf_r+0x1e2>
 80041d2:	9841      	ldr	r0, [sp, #260]	; 0x104
 80041d4:	06c3      	lsls	r3, r0, #27
 80041d6:	f53f aefe 	bmi.w	8003fd6 <__ssvfiscanf_r+0x4e>
 80041da:	9b00      	ldr	r3, [sp, #0]
 80041dc:	9a45      	ldr	r2, [sp, #276]	; 0x114
 80041de:	1d19      	adds	r1, r3, #4
 80041e0:	9100      	str	r1, [sp, #0]
 80041e2:	681b      	ldr	r3, [r3, #0]
 80041e4:	07c0      	lsls	r0, r0, #31
 80041e6:	bf4c      	ite	mi
 80041e8:	801a      	strhmi	r2, [r3, #0]
 80041ea:	601a      	strpl	r2, [r3, #0]
 80041ec:	e6f3      	b.n	8003fd6 <__ssvfiscanf_r+0x4e>
 80041ee:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 80041f0:	4621      	mov	r1, r4
 80041f2:	4630      	mov	r0, r6
 80041f4:	4798      	blx	r3
 80041f6:	2800      	cmp	r0, #0
 80041f8:	d0bb      	beq.n	8004172 <__ssvfiscanf_r+0x1ea>
 80041fa:	e79d      	b.n	8004138 <__ssvfiscanf_r+0x1b0>
 80041fc:	9a45      	ldr	r2, [sp, #276]	; 0x114
 80041fe:	3201      	adds	r2, #1
 8004200:	9245      	str	r2, [sp, #276]	; 0x114
 8004202:	6862      	ldr	r2, [r4, #4]
 8004204:	3a01      	subs	r2, #1
 8004206:	2a00      	cmp	r2, #0
 8004208:	6062      	str	r2, [r4, #4]
 800420a:	dd02      	ble.n	8004212 <__ssvfiscanf_r+0x28a>
 800420c:	3301      	adds	r3, #1
 800420e:	6023      	str	r3, [r4, #0]
 8004210:	e7b2      	b.n	8004178 <__ssvfiscanf_r+0x1f0>
 8004212:	9ba1      	ldr	r3, [sp, #644]	; 0x284
 8004214:	4621      	mov	r1, r4
 8004216:	4630      	mov	r0, r6
 8004218:	4798      	blx	r3
 800421a:	2800      	cmp	r0, #0
 800421c:	d0ac      	beq.n	8004178 <__ssvfiscanf_r+0x1f0>
 800421e:	e78b      	b.n	8004138 <__ssvfiscanf_r+0x1b0>
 8004220:	2b04      	cmp	r3, #4
 8004222:	dc0f      	bgt.n	8004244 <__ssvfiscanf_r+0x2bc>
 8004224:	466b      	mov	r3, sp
 8004226:	4622      	mov	r2, r4
 8004228:	a941      	add	r1, sp, #260	; 0x104
 800422a:	4630      	mov	r0, r6
 800422c:	f000 f87e 	bl	800432c <_scanf_i>
 8004230:	e7b0      	b.n	8004194 <__ssvfiscanf_r+0x20c>
 8004232:	bf00      	nop
 8004234:	08003ed5 	.word	0x08003ed5
 8004238:	08003f4f 	.word	0x08003f4f
 800423c:	08005387 	.word	0x08005387
 8004240:	0800531a 	.word	0x0800531a
 8004244:	4b0b      	ldr	r3, [pc, #44]	; (8004274 <__ssvfiscanf_r+0x2ec>)
 8004246:	2b00      	cmp	r3, #0
 8004248:	f43f aec5 	beq.w	8003fd6 <__ssvfiscanf_r+0x4e>
 800424c:	466b      	mov	r3, sp
 800424e:	4622      	mov	r2, r4
 8004250:	a941      	add	r1, sp, #260	; 0x104
 8004252:	4630      	mov	r0, r6
 8004254:	f3af 8000 	nop.w
 8004258:	e79c      	b.n	8004194 <__ssvfiscanf_r+0x20c>
 800425a:	89a3      	ldrh	r3, [r4, #12]
 800425c:	f013 0f40 	tst.w	r3, #64	; 0x40
 8004260:	bf18      	it	ne
 8004262:	f04f 30ff 	movne.w	r0, #4294967295
 8004266:	f50d 7d22 	add.w	sp, sp, #648	; 0x288
 800426a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800426e:	9844      	ldr	r0, [sp, #272]	; 0x110
 8004270:	e7f9      	b.n	8004266 <__ssvfiscanf_r+0x2de>
 8004272:	bf00      	nop
 8004274:	00000000 	.word	0x00000000

08004278 <_scanf_chars>:
 8004278:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800427c:	4615      	mov	r5, r2
 800427e:	688a      	ldr	r2, [r1, #8]
 8004280:	4680      	mov	r8, r0
 8004282:	460c      	mov	r4, r1
 8004284:	b932      	cbnz	r2, 8004294 <_scanf_chars+0x1c>
 8004286:	698a      	ldr	r2, [r1, #24]
 8004288:	2a00      	cmp	r2, #0
 800428a:	bf0c      	ite	eq
 800428c:	2201      	moveq	r2, #1
 800428e:	f04f 32ff 	movne.w	r2, #4294967295
 8004292:	608a      	str	r2, [r1, #8]
 8004294:	6822      	ldr	r2, [r4, #0]
 8004296:	f8df 9090 	ldr.w	r9, [pc, #144]	; 8004328 <_scanf_chars+0xb0>
 800429a:	06d1      	lsls	r1, r2, #27
 800429c:	bf5f      	itttt	pl
 800429e:	681a      	ldrpl	r2, [r3, #0]
 80042a0:	1d11      	addpl	r1, r2, #4
 80042a2:	6019      	strpl	r1, [r3, #0]
 80042a4:	6816      	ldrpl	r6, [r2, #0]
 80042a6:	2700      	movs	r7, #0
 80042a8:	69a0      	ldr	r0, [r4, #24]
 80042aa:	b188      	cbz	r0, 80042d0 <_scanf_chars+0x58>
 80042ac:	2801      	cmp	r0, #1
 80042ae:	d107      	bne.n	80042c0 <_scanf_chars+0x48>
 80042b0:	682a      	ldr	r2, [r5, #0]
 80042b2:	7811      	ldrb	r1, [r2, #0]
 80042b4:	6962      	ldr	r2, [r4, #20]
 80042b6:	5c52      	ldrb	r2, [r2, r1]
 80042b8:	b952      	cbnz	r2, 80042d0 <_scanf_chars+0x58>
 80042ba:	2f00      	cmp	r7, #0
 80042bc:	d031      	beq.n	8004322 <_scanf_chars+0xaa>
 80042be:	e022      	b.n	8004306 <_scanf_chars+0x8e>
 80042c0:	2802      	cmp	r0, #2
 80042c2:	d120      	bne.n	8004306 <_scanf_chars+0x8e>
 80042c4:	682b      	ldr	r3, [r5, #0]
 80042c6:	781b      	ldrb	r3, [r3, #0]
 80042c8:	f819 3003 	ldrb.w	r3, [r9, r3]
 80042cc:	071b      	lsls	r3, r3, #28
 80042ce:	d41a      	bmi.n	8004306 <_scanf_chars+0x8e>
 80042d0:	6823      	ldr	r3, [r4, #0]
 80042d2:	06da      	lsls	r2, r3, #27
 80042d4:	bf5e      	ittt	pl
 80042d6:	682b      	ldrpl	r3, [r5, #0]
 80042d8:	781b      	ldrbpl	r3, [r3, #0]
 80042da:	f806 3b01 	strbpl.w	r3, [r6], #1
 80042de:	682a      	ldr	r2, [r5, #0]
 80042e0:	686b      	ldr	r3, [r5, #4]
 80042e2:	3201      	adds	r2, #1
 80042e4:	602a      	str	r2, [r5, #0]
 80042e6:	68a2      	ldr	r2, [r4, #8]
 80042e8:	3b01      	subs	r3, #1
 80042ea:	3a01      	subs	r2, #1
 80042ec:	606b      	str	r3, [r5, #4]
 80042ee:	3701      	adds	r7, #1
 80042f0:	60a2      	str	r2, [r4, #8]
 80042f2:	b142      	cbz	r2, 8004306 <_scanf_chars+0x8e>
 80042f4:	2b00      	cmp	r3, #0
 80042f6:	dcd7      	bgt.n	80042a8 <_scanf_chars+0x30>
 80042f8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 80042fc:	4629      	mov	r1, r5
 80042fe:	4640      	mov	r0, r8
 8004300:	4798      	blx	r3
 8004302:	2800      	cmp	r0, #0
 8004304:	d0d0      	beq.n	80042a8 <_scanf_chars+0x30>
 8004306:	6823      	ldr	r3, [r4, #0]
 8004308:	f013 0310 	ands.w	r3, r3, #16
 800430c:	d105      	bne.n	800431a <_scanf_chars+0xa2>
 800430e:	68e2      	ldr	r2, [r4, #12]
 8004310:	3201      	adds	r2, #1
 8004312:	60e2      	str	r2, [r4, #12]
 8004314:	69a2      	ldr	r2, [r4, #24]
 8004316:	b102      	cbz	r2, 800431a <_scanf_chars+0xa2>
 8004318:	7033      	strb	r3, [r6, #0]
 800431a:	6923      	ldr	r3, [r4, #16]
 800431c:	443b      	add	r3, r7
 800431e:	6123      	str	r3, [r4, #16]
 8004320:	2000      	movs	r0, #0
 8004322:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004326:	bf00      	nop
 8004328:	08005387 	.word	0x08005387

0800432c <_scanf_i>:
 800432c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004330:	4698      	mov	r8, r3
 8004332:	4b74      	ldr	r3, [pc, #464]	; (8004504 <_scanf_i+0x1d8>)
 8004334:	460c      	mov	r4, r1
 8004336:	4682      	mov	sl, r0
 8004338:	4616      	mov	r6, r2
 800433a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800433e:	b087      	sub	sp, #28
 8004340:	ab03      	add	r3, sp, #12
 8004342:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004346:	4b70      	ldr	r3, [pc, #448]	; (8004508 <_scanf_i+0x1dc>)
 8004348:	69a1      	ldr	r1, [r4, #24]
 800434a:	4a70      	ldr	r2, [pc, #448]	; (800450c <_scanf_i+0x1e0>)
 800434c:	2903      	cmp	r1, #3
 800434e:	bf18      	it	ne
 8004350:	461a      	movne	r2, r3
 8004352:	68a3      	ldr	r3, [r4, #8]
 8004354:	9201      	str	r2, [sp, #4]
 8004356:	1e5a      	subs	r2, r3, #1
 8004358:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800435c:	bf88      	it	hi
 800435e:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8004362:	4627      	mov	r7, r4
 8004364:	bf82      	ittt	hi
 8004366:	eb03 0905 	addhi.w	r9, r3, r5
 800436a:	f240 135d 	movwhi	r3, #349	; 0x15d
 800436e:	60a3      	strhi	r3, [r4, #8]
 8004370:	f857 3b1c 	ldr.w	r3, [r7], #28
 8004374:	f443 6350 	orr.w	r3, r3, #3328	; 0xd00
 8004378:	bf98      	it	ls
 800437a:	f04f 0900 	movls.w	r9, #0
 800437e:	6023      	str	r3, [r4, #0]
 8004380:	463d      	mov	r5, r7
 8004382:	f04f 0b00 	mov.w	fp, #0
 8004386:	6831      	ldr	r1, [r6, #0]
 8004388:	ab03      	add	r3, sp, #12
 800438a:	7809      	ldrb	r1, [r1, #0]
 800438c:	f853 002b 	ldr.w	r0, [r3, fp, lsl #2]
 8004390:	2202      	movs	r2, #2
 8004392:	f7fb ff25 	bl	80001e0 <memchr>
 8004396:	b328      	cbz	r0, 80043e4 <_scanf_i+0xb8>
 8004398:	f1bb 0f01 	cmp.w	fp, #1
 800439c:	d159      	bne.n	8004452 <_scanf_i+0x126>
 800439e:	6862      	ldr	r2, [r4, #4]
 80043a0:	b92a      	cbnz	r2, 80043ae <_scanf_i+0x82>
 80043a2:	6822      	ldr	r2, [r4, #0]
 80043a4:	2308      	movs	r3, #8
 80043a6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80043aa:	6063      	str	r3, [r4, #4]
 80043ac:	6022      	str	r2, [r4, #0]
 80043ae:	6822      	ldr	r2, [r4, #0]
 80043b0:	f422 62a0 	bic.w	r2, r2, #1280	; 0x500
 80043b4:	6022      	str	r2, [r4, #0]
 80043b6:	68a2      	ldr	r2, [r4, #8]
 80043b8:	1e51      	subs	r1, r2, #1
 80043ba:	60a1      	str	r1, [r4, #8]
 80043bc:	b192      	cbz	r2, 80043e4 <_scanf_i+0xb8>
 80043be:	6832      	ldr	r2, [r6, #0]
 80043c0:	1c51      	adds	r1, r2, #1
 80043c2:	6031      	str	r1, [r6, #0]
 80043c4:	7812      	ldrb	r2, [r2, #0]
 80043c6:	f805 2b01 	strb.w	r2, [r5], #1
 80043ca:	6872      	ldr	r2, [r6, #4]
 80043cc:	3a01      	subs	r2, #1
 80043ce:	2a00      	cmp	r2, #0
 80043d0:	6072      	str	r2, [r6, #4]
 80043d2:	dc07      	bgt.n	80043e4 <_scanf_i+0xb8>
 80043d4:	f8d4 2180 	ldr.w	r2, [r4, #384]	; 0x180
 80043d8:	4631      	mov	r1, r6
 80043da:	4650      	mov	r0, sl
 80043dc:	4790      	blx	r2
 80043de:	2800      	cmp	r0, #0
 80043e0:	f040 8085 	bne.w	80044ee <_scanf_i+0x1c2>
 80043e4:	f10b 0b01 	add.w	fp, fp, #1
 80043e8:	f1bb 0f03 	cmp.w	fp, #3
 80043ec:	d1cb      	bne.n	8004386 <_scanf_i+0x5a>
 80043ee:	6863      	ldr	r3, [r4, #4]
 80043f0:	b90b      	cbnz	r3, 80043f6 <_scanf_i+0xca>
 80043f2:	230a      	movs	r3, #10
 80043f4:	6063      	str	r3, [r4, #4]
 80043f6:	6863      	ldr	r3, [r4, #4]
 80043f8:	4945      	ldr	r1, [pc, #276]	; (8004510 <_scanf_i+0x1e4>)
 80043fa:	6960      	ldr	r0, [r4, #20]
 80043fc:	1ac9      	subs	r1, r1, r3
 80043fe:	f000 f937 	bl	8004670 <__sccl>
 8004402:	f04f 0b00 	mov.w	fp, #0
 8004406:	68a3      	ldr	r3, [r4, #8]
 8004408:	6822      	ldr	r2, [r4, #0]
 800440a:	2b00      	cmp	r3, #0
 800440c:	d03d      	beq.n	800448a <_scanf_i+0x15e>
 800440e:	6831      	ldr	r1, [r6, #0]
 8004410:	6960      	ldr	r0, [r4, #20]
 8004412:	f891 c000 	ldrb.w	ip, [r1]
 8004416:	f810 000c 	ldrb.w	r0, [r0, ip]
 800441a:	2800      	cmp	r0, #0
 800441c:	d035      	beq.n	800448a <_scanf_i+0x15e>
 800441e:	f1bc 0f30 	cmp.w	ip, #48	; 0x30
 8004422:	d124      	bne.n	800446e <_scanf_i+0x142>
 8004424:	0510      	lsls	r0, r2, #20
 8004426:	d522      	bpl.n	800446e <_scanf_i+0x142>
 8004428:	f10b 0b01 	add.w	fp, fp, #1
 800442c:	f1b9 0f00 	cmp.w	r9, #0
 8004430:	d003      	beq.n	800443a <_scanf_i+0x10e>
 8004432:	3301      	adds	r3, #1
 8004434:	f109 39ff 	add.w	r9, r9, #4294967295
 8004438:	60a3      	str	r3, [r4, #8]
 800443a:	6873      	ldr	r3, [r6, #4]
 800443c:	3b01      	subs	r3, #1
 800443e:	2b00      	cmp	r3, #0
 8004440:	6073      	str	r3, [r6, #4]
 8004442:	dd1b      	ble.n	800447c <_scanf_i+0x150>
 8004444:	6833      	ldr	r3, [r6, #0]
 8004446:	3301      	adds	r3, #1
 8004448:	6033      	str	r3, [r6, #0]
 800444a:	68a3      	ldr	r3, [r4, #8]
 800444c:	3b01      	subs	r3, #1
 800444e:	60a3      	str	r3, [r4, #8]
 8004450:	e7d9      	b.n	8004406 <_scanf_i+0xda>
 8004452:	f1bb 0f02 	cmp.w	fp, #2
 8004456:	d1ae      	bne.n	80043b6 <_scanf_i+0x8a>
 8004458:	6822      	ldr	r2, [r4, #0]
 800445a:	f402 61c0 	and.w	r1, r2, #1536	; 0x600
 800445e:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8004462:	d1bf      	bne.n	80043e4 <_scanf_i+0xb8>
 8004464:	2310      	movs	r3, #16
 8004466:	6063      	str	r3, [r4, #4]
 8004468:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800446c:	e7a2      	b.n	80043b4 <_scanf_i+0x88>
 800446e:	f422 6210 	bic.w	r2, r2, #2304	; 0x900
 8004472:	6022      	str	r2, [r4, #0]
 8004474:	780b      	ldrb	r3, [r1, #0]
 8004476:	f805 3b01 	strb.w	r3, [r5], #1
 800447a:	e7de      	b.n	800443a <_scanf_i+0x10e>
 800447c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8004480:	4631      	mov	r1, r6
 8004482:	4650      	mov	r0, sl
 8004484:	4798      	blx	r3
 8004486:	2800      	cmp	r0, #0
 8004488:	d0df      	beq.n	800444a <_scanf_i+0x11e>
 800448a:	6823      	ldr	r3, [r4, #0]
 800448c:	05d9      	lsls	r1, r3, #23
 800448e:	d50d      	bpl.n	80044ac <_scanf_i+0x180>
 8004490:	42bd      	cmp	r5, r7
 8004492:	d909      	bls.n	80044a8 <_scanf_i+0x17c>
 8004494:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 8004498:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800449c:	4632      	mov	r2, r6
 800449e:	4650      	mov	r0, sl
 80044a0:	4798      	blx	r3
 80044a2:	f105 39ff 	add.w	r9, r5, #4294967295
 80044a6:	464d      	mov	r5, r9
 80044a8:	42bd      	cmp	r5, r7
 80044aa:	d028      	beq.n	80044fe <_scanf_i+0x1d2>
 80044ac:	6822      	ldr	r2, [r4, #0]
 80044ae:	f012 0210 	ands.w	r2, r2, #16
 80044b2:	d113      	bne.n	80044dc <_scanf_i+0x1b0>
 80044b4:	702a      	strb	r2, [r5, #0]
 80044b6:	6863      	ldr	r3, [r4, #4]
 80044b8:	9e01      	ldr	r6, [sp, #4]
 80044ba:	4639      	mov	r1, r7
 80044bc:	4650      	mov	r0, sl
 80044be:	47b0      	blx	r6
 80044c0:	f8d8 3000 	ldr.w	r3, [r8]
 80044c4:	6821      	ldr	r1, [r4, #0]
 80044c6:	1d1a      	adds	r2, r3, #4
 80044c8:	f8c8 2000 	str.w	r2, [r8]
 80044cc:	f011 0f20 	tst.w	r1, #32
 80044d0:	681b      	ldr	r3, [r3, #0]
 80044d2:	d00f      	beq.n	80044f4 <_scanf_i+0x1c8>
 80044d4:	6018      	str	r0, [r3, #0]
 80044d6:	68e3      	ldr	r3, [r4, #12]
 80044d8:	3301      	adds	r3, #1
 80044da:	60e3      	str	r3, [r4, #12]
 80044dc:	6923      	ldr	r3, [r4, #16]
 80044de:	1bed      	subs	r5, r5, r7
 80044e0:	445d      	add	r5, fp
 80044e2:	442b      	add	r3, r5
 80044e4:	6123      	str	r3, [r4, #16]
 80044e6:	2000      	movs	r0, #0
 80044e8:	b007      	add	sp, #28
 80044ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80044ee:	f04f 0b00 	mov.w	fp, #0
 80044f2:	e7ca      	b.n	800448a <_scanf_i+0x15e>
 80044f4:	07ca      	lsls	r2, r1, #31
 80044f6:	bf4c      	ite	mi
 80044f8:	8018      	strhmi	r0, [r3, #0]
 80044fa:	6018      	strpl	r0, [r3, #0]
 80044fc:	e7eb      	b.n	80044d6 <_scanf_i+0x1aa>
 80044fe:	2001      	movs	r0, #1
 8004500:	e7f2      	b.n	80044e8 <_scanf_i+0x1bc>
 8004502:	bf00      	nop
 8004504:	080050e0 	.word	0x080050e0
 8004508:	08004aa1 	.word	0x08004aa1
 800450c:	080049b9 	.word	0x080049b9
 8004510:	08005335 	.word	0x08005335

08004514 <__sflush_r>:
 8004514:	898a      	ldrh	r2, [r1, #12]
 8004516:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800451a:	4605      	mov	r5, r0
 800451c:	0710      	lsls	r0, r2, #28
 800451e:	460c      	mov	r4, r1
 8004520:	d458      	bmi.n	80045d4 <__sflush_r+0xc0>
 8004522:	684b      	ldr	r3, [r1, #4]
 8004524:	2b00      	cmp	r3, #0
 8004526:	dc05      	bgt.n	8004534 <__sflush_r+0x20>
 8004528:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800452a:	2b00      	cmp	r3, #0
 800452c:	dc02      	bgt.n	8004534 <__sflush_r+0x20>
 800452e:	2000      	movs	r0, #0
 8004530:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004534:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004536:	2e00      	cmp	r6, #0
 8004538:	d0f9      	beq.n	800452e <__sflush_r+0x1a>
 800453a:	2300      	movs	r3, #0
 800453c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004540:	682f      	ldr	r7, [r5, #0]
 8004542:	6a21      	ldr	r1, [r4, #32]
 8004544:	602b      	str	r3, [r5, #0]
 8004546:	d032      	beq.n	80045ae <__sflush_r+0x9a>
 8004548:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800454a:	89a3      	ldrh	r3, [r4, #12]
 800454c:	075a      	lsls	r2, r3, #29
 800454e:	d505      	bpl.n	800455c <__sflush_r+0x48>
 8004550:	6863      	ldr	r3, [r4, #4]
 8004552:	1ac0      	subs	r0, r0, r3
 8004554:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004556:	b10b      	cbz	r3, 800455c <__sflush_r+0x48>
 8004558:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800455a:	1ac0      	subs	r0, r0, r3
 800455c:	2300      	movs	r3, #0
 800455e:	4602      	mov	r2, r0
 8004560:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004562:	6a21      	ldr	r1, [r4, #32]
 8004564:	4628      	mov	r0, r5
 8004566:	47b0      	blx	r6
 8004568:	1c43      	adds	r3, r0, #1
 800456a:	89a3      	ldrh	r3, [r4, #12]
 800456c:	d106      	bne.n	800457c <__sflush_r+0x68>
 800456e:	6829      	ldr	r1, [r5, #0]
 8004570:	291d      	cmp	r1, #29
 8004572:	d82b      	bhi.n	80045cc <__sflush_r+0xb8>
 8004574:	4a29      	ldr	r2, [pc, #164]	; (800461c <__sflush_r+0x108>)
 8004576:	410a      	asrs	r2, r1
 8004578:	07d6      	lsls	r6, r2, #31
 800457a:	d427      	bmi.n	80045cc <__sflush_r+0xb8>
 800457c:	2200      	movs	r2, #0
 800457e:	6062      	str	r2, [r4, #4]
 8004580:	04d9      	lsls	r1, r3, #19
 8004582:	6922      	ldr	r2, [r4, #16]
 8004584:	6022      	str	r2, [r4, #0]
 8004586:	d504      	bpl.n	8004592 <__sflush_r+0x7e>
 8004588:	1c42      	adds	r2, r0, #1
 800458a:	d101      	bne.n	8004590 <__sflush_r+0x7c>
 800458c:	682b      	ldr	r3, [r5, #0]
 800458e:	b903      	cbnz	r3, 8004592 <__sflush_r+0x7e>
 8004590:	6560      	str	r0, [r4, #84]	; 0x54
 8004592:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004594:	602f      	str	r7, [r5, #0]
 8004596:	2900      	cmp	r1, #0
 8004598:	d0c9      	beq.n	800452e <__sflush_r+0x1a>
 800459a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800459e:	4299      	cmp	r1, r3
 80045a0:	d002      	beq.n	80045a8 <__sflush_r+0x94>
 80045a2:	4628      	mov	r0, r5
 80045a4:	f7fe fec2 	bl	800332c <_free_r>
 80045a8:	2000      	movs	r0, #0
 80045aa:	6360      	str	r0, [r4, #52]	; 0x34
 80045ac:	e7c0      	b.n	8004530 <__sflush_r+0x1c>
 80045ae:	2301      	movs	r3, #1
 80045b0:	4628      	mov	r0, r5
 80045b2:	47b0      	blx	r6
 80045b4:	1c41      	adds	r1, r0, #1
 80045b6:	d1c8      	bne.n	800454a <__sflush_r+0x36>
 80045b8:	682b      	ldr	r3, [r5, #0]
 80045ba:	2b00      	cmp	r3, #0
 80045bc:	d0c5      	beq.n	800454a <__sflush_r+0x36>
 80045be:	2b1d      	cmp	r3, #29
 80045c0:	d001      	beq.n	80045c6 <__sflush_r+0xb2>
 80045c2:	2b16      	cmp	r3, #22
 80045c4:	d101      	bne.n	80045ca <__sflush_r+0xb6>
 80045c6:	602f      	str	r7, [r5, #0]
 80045c8:	e7b1      	b.n	800452e <__sflush_r+0x1a>
 80045ca:	89a3      	ldrh	r3, [r4, #12]
 80045cc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80045d0:	81a3      	strh	r3, [r4, #12]
 80045d2:	e7ad      	b.n	8004530 <__sflush_r+0x1c>
 80045d4:	690f      	ldr	r7, [r1, #16]
 80045d6:	2f00      	cmp	r7, #0
 80045d8:	d0a9      	beq.n	800452e <__sflush_r+0x1a>
 80045da:	0793      	lsls	r3, r2, #30
 80045dc:	680e      	ldr	r6, [r1, #0]
 80045de:	bf08      	it	eq
 80045e0:	694b      	ldreq	r3, [r1, #20]
 80045e2:	600f      	str	r7, [r1, #0]
 80045e4:	bf18      	it	ne
 80045e6:	2300      	movne	r3, #0
 80045e8:	eba6 0807 	sub.w	r8, r6, r7
 80045ec:	608b      	str	r3, [r1, #8]
 80045ee:	f1b8 0f00 	cmp.w	r8, #0
 80045f2:	dd9c      	ble.n	800452e <__sflush_r+0x1a>
 80045f4:	6a21      	ldr	r1, [r4, #32]
 80045f6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80045f8:	4643      	mov	r3, r8
 80045fa:	463a      	mov	r2, r7
 80045fc:	4628      	mov	r0, r5
 80045fe:	47b0      	blx	r6
 8004600:	2800      	cmp	r0, #0
 8004602:	dc06      	bgt.n	8004612 <__sflush_r+0xfe>
 8004604:	89a3      	ldrh	r3, [r4, #12]
 8004606:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800460a:	81a3      	strh	r3, [r4, #12]
 800460c:	f04f 30ff 	mov.w	r0, #4294967295
 8004610:	e78e      	b.n	8004530 <__sflush_r+0x1c>
 8004612:	4407      	add	r7, r0
 8004614:	eba8 0800 	sub.w	r8, r8, r0
 8004618:	e7e9      	b.n	80045ee <__sflush_r+0xda>
 800461a:	bf00      	nop
 800461c:	dfbffffe 	.word	0xdfbffffe

08004620 <_fflush_r>:
 8004620:	b538      	push	{r3, r4, r5, lr}
 8004622:	690b      	ldr	r3, [r1, #16]
 8004624:	4605      	mov	r5, r0
 8004626:	460c      	mov	r4, r1
 8004628:	b913      	cbnz	r3, 8004630 <_fflush_r+0x10>
 800462a:	2500      	movs	r5, #0
 800462c:	4628      	mov	r0, r5
 800462e:	bd38      	pop	{r3, r4, r5, pc}
 8004630:	b118      	cbz	r0, 800463a <_fflush_r+0x1a>
 8004632:	6a03      	ldr	r3, [r0, #32]
 8004634:	b90b      	cbnz	r3, 800463a <_fflush_r+0x1a>
 8004636:	f7fd fe8f 	bl	8002358 <__sinit>
 800463a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800463e:	2b00      	cmp	r3, #0
 8004640:	d0f3      	beq.n	800462a <_fflush_r+0xa>
 8004642:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8004644:	07d0      	lsls	r0, r2, #31
 8004646:	d404      	bmi.n	8004652 <_fflush_r+0x32>
 8004648:	0599      	lsls	r1, r3, #22
 800464a:	d402      	bmi.n	8004652 <_fflush_r+0x32>
 800464c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800464e:	f7fd fff1 	bl	8002634 <__retarget_lock_acquire_recursive>
 8004652:	4628      	mov	r0, r5
 8004654:	4621      	mov	r1, r4
 8004656:	f7ff ff5d 	bl	8004514 <__sflush_r>
 800465a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800465c:	07da      	lsls	r2, r3, #31
 800465e:	4605      	mov	r5, r0
 8004660:	d4e4      	bmi.n	800462c <_fflush_r+0xc>
 8004662:	89a3      	ldrh	r3, [r4, #12]
 8004664:	059b      	lsls	r3, r3, #22
 8004666:	d4e1      	bmi.n	800462c <_fflush_r+0xc>
 8004668:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800466a:	f7fd ffe4 	bl	8002636 <__retarget_lock_release_recursive>
 800466e:	e7dd      	b.n	800462c <_fflush_r+0xc>

08004670 <__sccl>:
 8004670:	b570      	push	{r4, r5, r6, lr}
 8004672:	780b      	ldrb	r3, [r1, #0]
 8004674:	4604      	mov	r4, r0
 8004676:	2b5e      	cmp	r3, #94	; 0x5e
 8004678:	bf0b      	itete	eq
 800467a:	784b      	ldrbeq	r3, [r1, #1]
 800467c:	1c4a      	addne	r2, r1, #1
 800467e:	1c8a      	addeq	r2, r1, #2
 8004680:	2100      	movne	r1, #0
 8004682:	bf08      	it	eq
 8004684:	2101      	moveq	r1, #1
 8004686:	3801      	subs	r0, #1
 8004688:	f104 05ff 	add.w	r5, r4, #255	; 0xff
 800468c:	f800 1f01 	strb.w	r1, [r0, #1]!
 8004690:	42a8      	cmp	r0, r5
 8004692:	d1fb      	bne.n	800468c <__sccl+0x1c>
 8004694:	b90b      	cbnz	r3, 800469a <__sccl+0x2a>
 8004696:	1e50      	subs	r0, r2, #1
 8004698:	bd70      	pop	{r4, r5, r6, pc}
 800469a:	f081 0101 	eor.w	r1, r1, #1
 800469e:	54e1      	strb	r1, [r4, r3]
 80046a0:	4610      	mov	r0, r2
 80046a2:	4602      	mov	r2, r0
 80046a4:	f812 5b01 	ldrb.w	r5, [r2], #1
 80046a8:	2d2d      	cmp	r5, #45	; 0x2d
 80046aa:	d005      	beq.n	80046b8 <__sccl+0x48>
 80046ac:	2d5d      	cmp	r5, #93	; 0x5d
 80046ae:	d016      	beq.n	80046de <__sccl+0x6e>
 80046b0:	2d00      	cmp	r5, #0
 80046b2:	d0f1      	beq.n	8004698 <__sccl+0x28>
 80046b4:	462b      	mov	r3, r5
 80046b6:	e7f2      	b.n	800469e <__sccl+0x2e>
 80046b8:	7846      	ldrb	r6, [r0, #1]
 80046ba:	2e5d      	cmp	r6, #93	; 0x5d
 80046bc:	d0fa      	beq.n	80046b4 <__sccl+0x44>
 80046be:	42b3      	cmp	r3, r6
 80046c0:	dcf8      	bgt.n	80046b4 <__sccl+0x44>
 80046c2:	3002      	adds	r0, #2
 80046c4:	461a      	mov	r2, r3
 80046c6:	3201      	adds	r2, #1
 80046c8:	4296      	cmp	r6, r2
 80046ca:	54a1      	strb	r1, [r4, r2]
 80046cc:	dcfb      	bgt.n	80046c6 <__sccl+0x56>
 80046ce:	1af2      	subs	r2, r6, r3
 80046d0:	3a01      	subs	r2, #1
 80046d2:	1c5d      	adds	r5, r3, #1
 80046d4:	42b3      	cmp	r3, r6
 80046d6:	bfa8      	it	ge
 80046d8:	2200      	movge	r2, #0
 80046da:	18ab      	adds	r3, r5, r2
 80046dc:	e7e1      	b.n	80046a2 <__sccl+0x32>
 80046de:	4610      	mov	r0, r2
 80046e0:	e7da      	b.n	8004698 <__sccl+0x28>

080046e2 <__submore>:
 80046e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80046e6:	460c      	mov	r4, r1
 80046e8:	6b49      	ldr	r1, [r1, #52]	; 0x34
 80046ea:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80046ee:	4299      	cmp	r1, r3
 80046f0:	d11d      	bne.n	800472e <__submore+0x4c>
 80046f2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80046f6:	f7fe fe8d 	bl	8003414 <_malloc_r>
 80046fa:	b918      	cbnz	r0, 8004704 <__submore+0x22>
 80046fc:	f04f 30ff 	mov.w	r0, #4294967295
 8004700:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004704:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004708:	63a3      	str	r3, [r4, #56]	; 0x38
 800470a:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800470e:	6360      	str	r0, [r4, #52]	; 0x34
 8004710:	f880 33ff 	strb.w	r3, [r0, #1023]	; 0x3ff
 8004714:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8004718:	f880 33fe 	strb.w	r3, [r0, #1022]	; 0x3fe
 800471c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8004720:	f880 33fd 	strb.w	r3, [r0, #1021]	; 0x3fd
 8004724:	f200 30fd 	addw	r0, r0, #1021	; 0x3fd
 8004728:	6020      	str	r0, [r4, #0]
 800472a:	2000      	movs	r0, #0
 800472c:	e7e8      	b.n	8004700 <__submore+0x1e>
 800472e:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 8004730:	0077      	lsls	r7, r6, #1
 8004732:	463a      	mov	r2, r7
 8004734:	f000 f88e 	bl	8004854 <_realloc_r>
 8004738:	4605      	mov	r5, r0
 800473a:	2800      	cmp	r0, #0
 800473c:	d0de      	beq.n	80046fc <__submore+0x1a>
 800473e:	eb00 0806 	add.w	r8, r0, r6
 8004742:	4601      	mov	r1, r0
 8004744:	4632      	mov	r2, r6
 8004746:	4640      	mov	r0, r8
 8004748:	f000 f830 	bl	80047ac <memcpy>
 800474c:	e9c4 570d 	strd	r5, r7, [r4, #52]	; 0x34
 8004750:	f8c4 8000 	str.w	r8, [r4]
 8004754:	e7e9      	b.n	800472a <__submore+0x48>

08004756 <memmove>:
 8004756:	4288      	cmp	r0, r1
 8004758:	b510      	push	{r4, lr}
 800475a:	eb01 0402 	add.w	r4, r1, r2
 800475e:	d902      	bls.n	8004766 <memmove+0x10>
 8004760:	4284      	cmp	r4, r0
 8004762:	4623      	mov	r3, r4
 8004764:	d807      	bhi.n	8004776 <memmove+0x20>
 8004766:	1e43      	subs	r3, r0, #1
 8004768:	42a1      	cmp	r1, r4
 800476a:	d008      	beq.n	800477e <memmove+0x28>
 800476c:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004770:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004774:	e7f8      	b.n	8004768 <memmove+0x12>
 8004776:	4402      	add	r2, r0
 8004778:	4601      	mov	r1, r0
 800477a:	428a      	cmp	r2, r1
 800477c:	d100      	bne.n	8004780 <memmove+0x2a>
 800477e:	bd10      	pop	{r4, pc}
 8004780:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004784:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004788:	e7f7      	b.n	800477a <memmove+0x24>
	...

0800478c <_sbrk_r>:
 800478c:	b538      	push	{r3, r4, r5, lr}
 800478e:	4d06      	ldr	r5, [pc, #24]	; (80047a8 <_sbrk_r+0x1c>)
 8004790:	2300      	movs	r3, #0
 8004792:	4604      	mov	r4, r0
 8004794:	4608      	mov	r0, r1
 8004796:	602b      	str	r3, [r5, #0]
 8004798:	f7fc fff8 	bl	800178c <_sbrk>
 800479c:	1c43      	adds	r3, r0, #1
 800479e:	d102      	bne.n	80047a6 <_sbrk_r+0x1a>
 80047a0:	682b      	ldr	r3, [r5, #0]
 80047a2:	b103      	cbz	r3, 80047a6 <_sbrk_r+0x1a>
 80047a4:	6023      	str	r3, [r4, #0]
 80047a6:	bd38      	pop	{r3, r4, r5, pc}
 80047a8:	20000394 	.word	0x20000394

080047ac <memcpy>:
 80047ac:	440a      	add	r2, r1
 80047ae:	4291      	cmp	r1, r2
 80047b0:	f100 33ff 	add.w	r3, r0, #4294967295
 80047b4:	d100      	bne.n	80047b8 <memcpy+0xc>
 80047b6:	4770      	bx	lr
 80047b8:	b510      	push	{r4, lr}
 80047ba:	f811 4b01 	ldrb.w	r4, [r1], #1
 80047be:	f803 4f01 	strb.w	r4, [r3, #1]!
 80047c2:	4291      	cmp	r1, r2
 80047c4:	d1f9      	bne.n	80047ba <memcpy+0xe>
 80047c6:	bd10      	pop	{r4, pc}

080047c8 <__assert_func>:
 80047c8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80047ca:	4614      	mov	r4, r2
 80047cc:	461a      	mov	r2, r3
 80047ce:	4b09      	ldr	r3, [pc, #36]	; (80047f4 <__assert_func+0x2c>)
 80047d0:	681b      	ldr	r3, [r3, #0]
 80047d2:	4605      	mov	r5, r0
 80047d4:	68d8      	ldr	r0, [r3, #12]
 80047d6:	b14c      	cbz	r4, 80047ec <__assert_func+0x24>
 80047d8:	4b07      	ldr	r3, [pc, #28]	; (80047f8 <__assert_func+0x30>)
 80047da:	9100      	str	r1, [sp, #0]
 80047dc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80047e0:	4906      	ldr	r1, [pc, #24]	; (80047fc <__assert_func+0x34>)
 80047e2:	462b      	mov	r3, r5
 80047e4:	f000 f96c 	bl	8004ac0 <fiprintf>
 80047e8:	f000 f97c 	bl	8004ae4 <abort>
 80047ec:	4b04      	ldr	r3, [pc, #16]	; (8004800 <__assert_func+0x38>)
 80047ee:	461c      	mov	r4, r3
 80047f0:	e7f3      	b.n	80047da <__assert_func+0x12>
 80047f2:	bf00      	nop
 80047f4:	20000060 	.word	0x20000060
 80047f8:	0800534a 	.word	0x0800534a
 80047fc:	08005357 	.word	0x08005357
 8004800:	08005385 	.word	0x08005385

08004804 <_calloc_r>:
 8004804:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004806:	fba1 2402 	umull	r2, r4, r1, r2
 800480a:	b94c      	cbnz	r4, 8004820 <_calloc_r+0x1c>
 800480c:	4611      	mov	r1, r2
 800480e:	9201      	str	r2, [sp, #4]
 8004810:	f7fe fe00 	bl	8003414 <_malloc_r>
 8004814:	9a01      	ldr	r2, [sp, #4]
 8004816:	4605      	mov	r5, r0
 8004818:	b930      	cbnz	r0, 8004828 <_calloc_r+0x24>
 800481a:	4628      	mov	r0, r5
 800481c:	b003      	add	sp, #12
 800481e:	bd30      	pop	{r4, r5, pc}
 8004820:	220c      	movs	r2, #12
 8004822:	6002      	str	r2, [r0, #0]
 8004824:	2500      	movs	r5, #0
 8004826:	e7f8      	b.n	800481a <_calloc_r+0x16>
 8004828:	4621      	mov	r1, r4
 800482a:	f7fd fe70 	bl	800250e <memset>
 800482e:	e7f4      	b.n	800481a <_calloc_r+0x16>

08004830 <__ascii_mbtowc>:
 8004830:	b082      	sub	sp, #8
 8004832:	b901      	cbnz	r1, 8004836 <__ascii_mbtowc+0x6>
 8004834:	a901      	add	r1, sp, #4
 8004836:	b142      	cbz	r2, 800484a <__ascii_mbtowc+0x1a>
 8004838:	b14b      	cbz	r3, 800484e <__ascii_mbtowc+0x1e>
 800483a:	7813      	ldrb	r3, [r2, #0]
 800483c:	600b      	str	r3, [r1, #0]
 800483e:	7812      	ldrb	r2, [r2, #0]
 8004840:	1e10      	subs	r0, r2, #0
 8004842:	bf18      	it	ne
 8004844:	2001      	movne	r0, #1
 8004846:	b002      	add	sp, #8
 8004848:	4770      	bx	lr
 800484a:	4610      	mov	r0, r2
 800484c:	e7fb      	b.n	8004846 <__ascii_mbtowc+0x16>
 800484e:	f06f 0001 	mvn.w	r0, #1
 8004852:	e7f8      	b.n	8004846 <__ascii_mbtowc+0x16>

08004854 <_realloc_r>:
 8004854:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004858:	4680      	mov	r8, r0
 800485a:	4614      	mov	r4, r2
 800485c:	460e      	mov	r6, r1
 800485e:	b921      	cbnz	r1, 800486a <_realloc_r+0x16>
 8004860:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004864:	4611      	mov	r1, r2
 8004866:	f7fe bdd5 	b.w	8003414 <_malloc_r>
 800486a:	b92a      	cbnz	r2, 8004878 <_realloc_r+0x24>
 800486c:	f7fe fd5e 	bl	800332c <_free_r>
 8004870:	4625      	mov	r5, r4
 8004872:	4628      	mov	r0, r5
 8004874:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004878:	f000 f93b 	bl	8004af2 <_malloc_usable_size_r>
 800487c:	4284      	cmp	r4, r0
 800487e:	4607      	mov	r7, r0
 8004880:	d802      	bhi.n	8004888 <_realloc_r+0x34>
 8004882:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8004886:	d812      	bhi.n	80048ae <_realloc_r+0x5a>
 8004888:	4621      	mov	r1, r4
 800488a:	4640      	mov	r0, r8
 800488c:	f7fe fdc2 	bl	8003414 <_malloc_r>
 8004890:	4605      	mov	r5, r0
 8004892:	2800      	cmp	r0, #0
 8004894:	d0ed      	beq.n	8004872 <_realloc_r+0x1e>
 8004896:	42bc      	cmp	r4, r7
 8004898:	4622      	mov	r2, r4
 800489a:	4631      	mov	r1, r6
 800489c:	bf28      	it	cs
 800489e:	463a      	movcs	r2, r7
 80048a0:	f7ff ff84 	bl	80047ac <memcpy>
 80048a4:	4631      	mov	r1, r6
 80048a6:	4640      	mov	r0, r8
 80048a8:	f7fe fd40 	bl	800332c <_free_r>
 80048ac:	e7e1      	b.n	8004872 <_realloc_r+0x1e>
 80048ae:	4635      	mov	r5, r6
 80048b0:	e7df      	b.n	8004872 <_realloc_r+0x1e>
	...

080048b4 <_strtol_l.constprop.0>:
 80048b4:	2b01      	cmp	r3, #1
 80048b6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80048ba:	d001      	beq.n	80048c0 <_strtol_l.constprop.0+0xc>
 80048bc:	2b24      	cmp	r3, #36	; 0x24
 80048be:	d906      	bls.n	80048ce <_strtol_l.constprop.0+0x1a>
 80048c0:	f7fd fe8e 	bl	80025e0 <__errno>
 80048c4:	2316      	movs	r3, #22
 80048c6:	6003      	str	r3, [r0, #0]
 80048c8:	2000      	movs	r0, #0
 80048ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80048ce:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 80049b4 <_strtol_l.constprop.0+0x100>
 80048d2:	460d      	mov	r5, r1
 80048d4:	462e      	mov	r6, r5
 80048d6:	f815 4b01 	ldrb.w	r4, [r5], #1
 80048da:	f81c 7004 	ldrb.w	r7, [ip, r4]
 80048de:	f017 0708 	ands.w	r7, r7, #8
 80048e2:	d1f7      	bne.n	80048d4 <_strtol_l.constprop.0+0x20>
 80048e4:	2c2d      	cmp	r4, #45	; 0x2d
 80048e6:	d132      	bne.n	800494e <_strtol_l.constprop.0+0x9a>
 80048e8:	782c      	ldrb	r4, [r5, #0]
 80048ea:	2701      	movs	r7, #1
 80048ec:	1cb5      	adds	r5, r6, #2
 80048ee:	2b00      	cmp	r3, #0
 80048f0:	d05b      	beq.n	80049aa <_strtol_l.constprop.0+0xf6>
 80048f2:	2b10      	cmp	r3, #16
 80048f4:	d109      	bne.n	800490a <_strtol_l.constprop.0+0x56>
 80048f6:	2c30      	cmp	r4, #48	; 0x30
 80048f8:	d107      	bne.n	800490a <_strtol_l.constprop.0+0x56>
 80048fa:	782c      	ldrb	r4, [r5, #0]
 80048fc:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8004900:	2c58      	cmp	r4, #88	; 0x58
 8004902:	d14d      	bne.n	80049a0 <_strtol_l.constprop.0+0xec>
 8004904:	786c      	ldrb	r4, [r5, #1]
 8004906:	2310      	movs	r3, #16
 8004908:	3502      	adds	r5, #2
 800490a:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 800490e:	f108 38ff 	add.w	r8, r8, #4294967295
 8004912:	f04f 0e00 	mov.w	lr, #0
 8004916:	fbb8 f9f3 	udiv	r9, r8, r3
 800491a:	4676      	mov	r6, lr
 800491c:	fb03 8a19 	mls	sl, r3, r9, r8
 8004920:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8004924:	f1bc 0f09 	cmp.w	ip, #9
 8004928:	d816      	bhi.n	8004958 <_strtol_l.constprop.0+0xa4>
 800492a:	4664      	mov	r4, ip
 800492c:	42a3      	cmp	r3, r4
 800492e:	dd24      	ble.n	800497a <_strtol_l.constprop.0+0xc6>
 8004930:	f1be 3fff 	cmp.w	lr, #4294967295
 8004934:	d008      	beq.n	8004948 <_strtol_l.constprop.0+0x94>
 8004936:	45b1      	cmp	r9, r6
 8004938:	d31c      	bcc.n	8004974 <_strtol_l.constprop.0+0xc0>
 800493a:	d101      	bne.n	8004940 <_strtol_l.constprop.0+0x8c>
 800493c:	45a2      	cmp	sl, r4
 800493e:	db19      	blt.n	8004974 <_strtol_l.constprop.0+0xc0>
 8004940:	fb06 4603 	mla	r6, r6, r3, r4
 8004944:	f04f 0e01 	mov.w	lr, #1
 8004948:	f815 4b01 	ldrb.w	r4, [r5], #1
 800494c:	e7e8      	b.n	8004920 <_strtol_l.constprop.0+0x6c>
 800494e:	2c2b      	cmp	r4, #43	; 0x2b
 8004950:	bf04      	itt	eq
 8004952:	782c      	ldrbeq	r4, [r5, #0]
 8004954:	1cb5      	addeq	r5, r6, #2
 8004956:	e7ca      	b.n	80048ee <_strtol_l.constprop.0+0x3a>
 8004958:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 800495c:	f1bc 0f19 	cmp.w	ip, #25
 8004960:	d801      	bhi.n	8004966 <_strtol_l.constprop.0+0xb2>
 8004962:	3c37      	subs	r4, #55	; 0x37
 8004964:	e7e2      	b.n	800492c <_strtol_l.constprop.0+0x78>
 8004966:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 800496a:	f1bc 0f19 	cmp.w	ip, #25
 800496e:	d804      	bhi.n	800497a <_strtol_l.constprop.0+0xc6>
 8004970:	3c57      	subs	r4, #87	; 0x57
 8004972:	e7db      	b.n	800492c <_strtol_l.constprop.0+0x78>
 8004974:	f04f 3eff 	mov.w	lr, #4294967295
 8004978:	e7e6      	b.n	8004948 <_strtol_l.constprop.0+0x94>
 800497a:	f1be 3fff 	cmp.w	lr, #4294967295
 800497e:	d105      	bne.n	800498c <_strtol_l.constprop.0+0xd8>
 8004980:	2322      	movs	r3, #34	; 0x22
 8004982:	6003      	str	r3, [r0, #0]
 8004984:	4646      	mov	r6, r8
 8004986:	b942      	cbnz	r2, 800499a <_strtol_l.constprop.0+0xe6>
 8004988:	4630      	mov	r0, r6
 800498a:	e79e      	b.n	80048ca <_strtol_l.constprop.0+0x16>
 800498c:	b107      	cbz	r7, 8004990 <_strtol_l.constprop.0+0xdc>
 800498e:	4276      	negs	r6, r6
 8004990:	2a00      	cmp	r2, #0
 8004992:	d0f9      	beq.n	8004988 <_strtol_l.constprop.0+0xd4>
 8004994:	f1be 0f00 	cmp.w	lr, #0
 8004998:	d000      	beq.n	800499c <_strtol_l.constprop.0+0xe8>
 800499a:	1e69      	subs	r1, r5, #1
 800499c:	6011      	str	r1, [r2, #0]
 800499e:	e7f3      	b.n	8004988 <_strtol_l.constprop.0+0xd4>
 80049a0:	2430      	movs	r4, #48	; 0x30
 80049a2:	2b00      	cmp	r3, #0
 80049a4:	d1b1      	bne.n	800490a <_strtol_l.constprop.0+0x56>
 80049a6:	2308      	movs	r3, #8
 80049a8:	e7af      	b.n	800490a <_strtol_l.constprop.0+0x56>
 80049aa:	2c30      	cmp	r4, #48	; 0x30
 80049ac:	d0a5      	beq.n	80048fa <_strtol_l.constprop.0+0x46>
 80049ae:	230a      	movs	r3, #10
 80049b0:	e7ab      	b.n	800490a <_strtol_l.constprop.0+0x56>
 80049b2:	bf00      	nop
 80049b4:	08005387 	.word	0x08005387

080049b8 <_strtol_r>:
 80049b8:	f7ff bf7c 	b.w	80048b4 <_strtol_l.constprop.0>

080049bc <_strtoul_l.constprop.0>:
 80049bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80049c0:	4f36      	ldr	r7, [pc, #216]	; (8004a9c <_strtoul_l.constprop.0+0xe0>)
 80049c2:	4686      	mov	lr, r0
 80049c4:	460d      	mov	r5, r1
 80049c6:	4628      	mov	r0, r5
 80049c8:	f815 4b01 	ldrb.w	r4, [r5], #1
 80049cc:	5d3e      	ldrb	r6, [r7, r4]
 80049ce:	f016 0608 	ands.w	r6, r6, #8
 80049d2:	d1f8      	bne.n	80049c6 <_strtoul_l.constprop.0+0xa>
 80049d4:	2c2d      	cmp	r4, #45	; 0x2d
 80049d6:	d130      	bne.n	8004a3a <_strtoul_l.constprop.0+0x7e>
 80049d8:	782c      	ldrb	r4, [r5, #0]
 80049da:	2601      	movs	r6, #1
 80049dc:	1c85      	adds	r5, r0, #2
 80049de:	2b00      	cmp	r3, #0
 80049e0:	d057      	beq.n	8004a92 <_strtoul_l.constprop.0+0xd6>
 80049e2:	2b10      	cmp	r3, #16
 80049e4:	d109      	bne.n	80049fa <_strtoul_l.constprop.0+0x3e>
 80049e6:	2c30      	cmp	r4, #48	; 0x30
 80049e8:	d107      	bne.n	80049fa <_strtoul_l.constprop.0+0x3e>
 80049ea:	7828      	ldrb	r0, [r5, #0]
 80049ec:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 80049f0:	2858      	cmp	r0, #88	; 0x58
 80049f2:	d149      	bne.n	8004a88 <_strtoul_l.constprop.0+0xcc>
 80049f4:	786c      	ldrb	r4, [r5, #1]
 80049f6:	2310      	movs	r3, #16
 80049f8:	3502      	adds	r5, #2
 80049fa:	f04f 38ff 	mov.w	r8, #4294967295
 80049fe:	2700      	movs	r7, #0
 8004a00:	fbb8 f8f3 	udiv	r8, r8, r3
 8004a04:	fb03 f908 	mul.w	r9, r3, r8
 8004a08:	ea6f 0909 	mvn.w	r9, r9
 8004a0c:	4638      	mov	r0, r7
 8004a0e:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8004a12:	f1bc 0f09 	cmp.w	ip, #9
 8004a16:	d815      	bhi.n	8004a44 <_strtoul_l.constprop.0+0x88>
 8004a18:	4664      	mov	r4, ip
 8004a1a:	42a3      	cmp	r3, r4
 8004a1c:	dd23      	ble.n	8004a66 <_strtoul_l.constprop.0+0xaa>
 8004a1e:	f1b7 3fff 	cmp.w	r7, #4294967295
 8004a22:	d007      	beq.n	8004a34 <_strtoul_l.constprop.0+0x78>
 8004a24:	4580      	cmp	r8, r0
 8004a26:	d31b      	bcc.n	8004a60 <_strtoul_l.constprop.0+0xa4>
 8004a28:	d101      	bne.n	8004a2e <_strtoul_l.constprop.0+0x72>
 8004a2a:	45a1      	cmp	r9, r4
 8004a2c:	db18      	blt.n	8004a60 <_strtoul_l.constprop.0+0xa4>
 8004a2e:	fb00 4003 	mla	r0, r0, r3, r4
 8004a32:	2701      	movs	r7, #1
 8004a34:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004a38:	e7e9      	b.n	8004a0e <_strtoul_l.constprop.0+0x52>
 8004a3a:	2c2b      	cmp	r4, #43	; 0x2b
 8004a3c:	bf04      	itt	eq
 8004a3e:	782c      	ldrbeq	r4, [r5, #0]
 8004a40:	1c85      	addeq	r5, r0, #2
 8004a42:	e7cc      	b.n	80049de <_strtoul_l.constprop.0+0x22>
 8004a44:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 8004a48:	f1bc 0f19 	cmp.w	ip, #25
 8004a4c:	d801      	bhi.n	8004a52 <_strtoul_l.constprop.0+0x96>
 8004a4e:	3c37      	subs	r4, #55	; 0x37
 8004a50:	e7e3      	b.n	8004a1a <_strtoul_l.constprop.0+0x5e>
 8004a52:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 8004a56:	f1bc 0f19 	cmp.w	ip, #25
 8004a5a:	d804      	bhi.n	8004a66 <_strtoul_l.constprop.0+0xaa>
 8004a5c:	3c57      	subs	r4, #87	; 0x57
 8004a5e:	e7dc      	b.n	8004a1a <_strtoul_l.constprop.0+0x5e>
 8004a60:	f04f 37ff 	mov.w	r7, #4294967295
 8004a64:	e7e6      	b.n	8004a34 <_strtoul_l.constprop.0+0x78>
 8004a66:	1c7b      	adds	r3, r7, #1
 8004a68:	d106      	bne.n	8004a78 <_strtoul_l.constprop.0+0xbc>
 8004a6a:	2322      	movs	r3, #34	; 0x22
 8004a6c:	f8ce 3000 	str.w	r3, [lr]
 8004a70:	4638      	mov	r0, r7
 8004a72:	b932      	cbnz	r2, 8004a82 <_strtoul_l.constprop.0+0xc6>
 8004a74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004a78:	b106      	cbz	r6, 8004a7c <_strtoul_l.constprop.0+0xc0>
 8004a7a:	4240      	negs	r0, r0
 8004a7c:	2a00      	cmp	r2, #0
 8004a7e:	d0f9      	beq.n	8004a74 <_strtoul_l.constprop.0+0xb8>
 8004a80:	b107      	cbz	r7, 8004a84 <_strtoul_l.constprop.0+0xc8>
 8004a82:	1e69      	subs	r1, r5, #1
 8004a84:	6011      	str	r1, [r2, #0]
 8004a86:	e7f5      	b.n	8004a74 <_strtoul_l.constprop.0+0xb8>
 8004a88:	2430      	movs	r4, #48	; 0x30
 8004a8a:	2b00      	cmp	r3, #0
 8004a8c:	d1b5      	bne.n	80049fa <_strtoul_l.constprop.0+0x3e>
 8004a8e:	2308      	movs	r3, #8
 8004a90:	e7b3      	b.n	80049fa <_strtoul_l.constprop.0+0x3e>
 8004a92:	2c30      	cmp	r4, #48	; 0x30
 8004a94:	d0a9      	beq.n	80049ea <_strtoul_l.constprop.0+0x2e>
 8004a96:	230a      	movs	r3, #10
 8004a98:	e7af      	b.n	80049fa <_strtoul_l.constprop.0+0x3e>
 8004a9a:	bf00      	nop
 8004a9c:	08005387 	.word	0x08005387

08004aa0 <_strtoul_r>:
 8004aa0:	f7ff bf8c 	b.w	80049bc <_strtoul_l.constprop.0>

08004aa4 <__ascii_wctomb>:
 8004aa4:	b149      	cbz	r1, 8004aba <__ascii_wctomb+0x16>
 8004aa6:	2aff      	cmp	r2, #255	; 0xff
 8004aa8:	bf85      	ittet	hi
 8004aaa:	238a      	movhi	r3, #138	; 0x8a
 8004aac:	6003      	strhi	r3, [r0, #0]
 8004aae:	700a      	strbls	r2, [r1, #0]
 8004ab0:	f04f 30ff 	movhi.w	r0, #4294967295
 8004ab4:	bf98      	it	ls
 8004ab6:	2001      	movls	r0, #1
 8004ab8:	4770      	bx	lr
 8004aba:	4608      	mov	r0, r1
 8004abc:	4770      	bx	lr
	...

08004ac0 <fiprintf>:
 8004ac0:	b40e      	push	{r1, r2, r3}
 8004ac2:	b503      	push	{r0, r1, lr}
 8004ac4:	4601      	mov	r1, r0
 8004ac6:	ab03      	add	r3, sp, #12
 8004ac8:	4805      	ldr	r0, [pc, #20]	; (8004ae0 <fiprintf+0x20>)
 8004aca:	f853 2b04 	ldr.w	r2, [r3], #4
 8004ace:	6800      	ldr	r0, [r0, #0]
 8004ad0:	9301      	str	r3, [sp, #4]
 8004ad2:	f000 f83f 	bl	8004b54 <_vfiprintf_r>
 8004ad6:	b002      	add	sp, #8
 8004ad8:	f85d eb04 	ldr.w	lr, [sp], #4
 8004adc:	b003      	add	sp, #12
 8004ade:	4770      	bx	lr
 8004ae0:	20000060 	.word	0x20000060

08004ae4 <abort>:
 8004ae4:	b508      	push	{r3, lr}
 8004ae6:	2006      	movs	r0, #6
 8004ae8:	f000 fa0c 	bl	8004f04 <raise>
 8004aec:	2001      	movs	r0, #1
 8004aee:	f7fc fdd5 	bl	800169c <_exit>

08004af2 <_malloc_usable_size_r>:
 8004af2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004af6:	1f18      	subs	r0, r3, #4
 8004af8:	2b00      	cmp	r3, #0
 8004afa:	bfbc      	itt	lt
 8004afc:	580b      	ldrlt	r3, [r1, r0]
 8004afe:	18c0      	addlt	r0, r0, r3
 8004b00:	4770      	bx	lr

08004b02 <__sfputc_r>:
 8004b02:	6893      	ldr	r3, [r2, #8]
 8004b04:	3b01      	subs	r3, #1
 8004b06:	2b00      	cmp	r3, #0
 8004b08:	b410      	push	{r4}
 8004b0a:	6093      	str	r3, [r2, #8]
 8004b0c:	da08      	bge.n	8004b20 <__sfputc_r+0x1e>
 8004b0e:	6994      	ldr	r4, [r2, #24]
 8004b10:	42a3      	cmp	r3, r4
 8004b12:	db01      	blt.n	8004b18 <__sfputc_r+0x16>
 8004b14:	290a      	cmp	r1, #10
 8004b16:	d103      	bne.n	8004b20 <__sfputc_r+0x1e>
 8004b18:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004b1c:	f000 b934 	b.w	8004d88 <__swbuf_r>
 8004b20:	6813      	ldr	r3, [r2, #0]
 8004b22:	1c58      	adds	r0, r3, #1
 8004b24:	6010      	str	r0, [r2, #0]
 8004b26:	7019      	strb	r1, [r3, #0]
 8004b28:	4608      	mov	r0, r1
 8004b2a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004b2e:	4770      	bx	lr

08004b30 <__sfputs_r>:
 8004b30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004b32:	4606      	mov	r6, r0
 8004b34:	460f      	mov	r7, r1
 8004b36:	4614      	mov	r4, r2
 8004b38:	18d5      	adds	r5, r2, r3
 8004b3a:	42ac      	cmp	r4, r5
 8004b3c:	d101      	bne.n	8004b42 <__sfputs_r+0x12>
 8004b3e:	2000      	movs	r0, #0
 8004b40:	e007      	b.n	8004b52 <__sfputs_r+0x22>
 8004b42:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004b46:	463a      	mov	r2, r7
 8004b48:	4630      	mov	r0, r6
 8004b4a:	f7ff ffda 	bl	8004b02 <__sfputc_r>
 8004b4e:	1c43      	adds	r3, r0, #1
 8004b50:	d1f3      	bne.n	8004b3a <__sfputs_r+0xa>
 8004b52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004b54 <_vfiprintf_r>:
 8004b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004b58:	460d      	mov	r5, r1
 8004b5a:	b09d      	sub	sp, #116	; 0x74
 8004b5c:	4614      	mov	r4, r2
 8004b5e:	4698      	mov	r8, r3
 8004b60:	4606      	mov	r6, r0
 8004b62:	b118      	cbz	r0, 8004b6c <_vfiprintf_r+0x18>
 8004b64:	6a03      	ldr	r3, [r0, #32]
 8004b66:	b90b      	cbnz	r3, 8004b6c <_vfiprintf_r+0x18>
 8004b68:	f7fd fbf6 	bl	8002358 <__sinit>
 8004b6c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8004b6e:	07d9      	lsls	r1, r3, #31
 8004b70:	d405      	bmi.n	8004b7e <_vfiprintf_r+0x2a>
 8004b72:	89ab      	ldrh	r3, [r5, #12]
 8004b74:	059a      	lsls	r2, r3, #22
 8004b76:	d402      	bmi.n	8004b7e <_vfiprintf_r+0x2a>
 8004b78:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8004b7a:	f7fd fd5b 	bl	8002634 <__retarget_lock_acquire_recursive>
 8004b7e:	89ab      	ldrh	r3, [r5, #12]
 8004b80:	071b      	lsls	r3, r3, #28
 8004b82:	d501      	bpl.n	8004b88 <_vfiprintf_r+0x34>
 8004b84:	692b      	ldr	r3, [r5, #16]
 8004b86:	b99b      	cbnz	r3, 8004bb0 <_vfiprintf_r+0x5c>
 8004b88:	4629      	mov	r1, r5
 8004b8a:	4630      	mov	r0, r6
 8004b8c:	f000 f93a 	bl	8004e04 <__swsetup_r>
 8004b90:	b170      	cbz	r0, 8004bb0 <_vfiprintf_r+0x5c>
 8004b92:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8004b94:	07dc      	lsls	r4, r3, #31
 8004b96:	d504      	bpl.n	8004ba2 <_vfiprintf_r+0x4e>
 8004b98:	f04f 30ff 	mov.w	r0, #4294967295
 8004b9c:	b01d      	add	sp, #116	; 0x74
 8004b9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004ba2:	89ab      	ldrh	r3, [r5, #12]
 8004ba4:	0598      	lsls	r0, r3, #22
 8004ba6:	d4f7      	bmi.n	8004b98 <_vfiprintf_r+0x44>
 8004ba8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8004baa:	f7fd fd44 	bl	8002636 <__retarget_lock_release_recursive>
 8004bae:	e7f3      	b.n	8004b98 <_vfiprintf_r+0x44>
 8004bb0:	2300      	movs	r3, #0
 8004bb2:	9309      	str	r3, [sp, #36]	; 0x24
 8004bb4:	2320      	movs	r3, #32
 8004bb6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004bba:	f8cd 800c 	str.w	r8, [sp, #12]
 8004bbe:	2330      	movs	r3, #48	; 0x30
 8004bc0:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8004d74 <_vfiprintf_r+0x220>
 8004bc4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004bc8:	f04f 0901 	mov.w	r9, #1
 8004bcc:	4623      	mov	r3, r4
 8004bce:	469a      	mov	sl, r3
 8004bd0:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004bd4:	b10a      	cbz	r2, 8004bda <_vfiprintf_r+0x86>
 8004bd6:	2a25      	cmp	r2, #37	; 0x25
 8004bd8:	d1f9      	bne.n	8004bce <_vfiprintf_r+0x7a>
 8004bda:	ebba 0b04 	subs.w	fp, sl, r4
 8004bde:	d00b      	beq.n	8004bf8 <_vfiprintf_r+0xa4>
 8004be0:	465b      	mov	r3, fp
 8004be2:	4622      	mov	r2, r4
 8004be4:	4629      	mov	r1, r5
 8004be6:	4630      	mov	r0, r6
 8004be8:	f7ff ffa2 	bl	8004b30 <__sfputs_r>
 8004bec:	3001      	adds	r0, #1
 8004bee:	f000 80a9 	beq.w	8004d44 <_vfiprintf_r+0x1f0>
 8004bf2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004bf4:	445a      	add	r2, fp
 8004bf6:	9209      	str	r2, [sp, #36]	; 0x24
 8004bf8:	f89a 3000 	ldrb.w	r3, [sl]
 8004bfc:	2b00      	cmp	r3, #0
 8004bfe:	f000 80a1 	beq.w	8004d44 <_vfiprintf_r+0x1f0>
 8004c02:	2300      	movs	r3, #0
 8004c04:	f04f 32ff 	mov.w	r2, #4294967295
 8004c08:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004c0c:	f10a 0a01 	add.w	sl, sl, #1
 8004c10:	9304      	str	r3, [sp, #16]
 8004c12:	9307      	str	r3, [sp, #28]
 8004c14:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004c18:	931a      	str	r3, [sp, #104]	; 0x68
 8004c1a:	4654      	mov	r4, sl
 8004c1c:	2205      	movs	r2, #5
 8004c1e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004c22:	4854      	ldr	r0, [pc, #336]	; (8004d74 <_vfiprintf_r+0x220>)
 8004c24:	f7fb fadc 	bl	80001e0 <memchr>
 8004c28:	9a04      	ldr	r2, [sp, #16]
 8004c2a:	b9d8      	cbnz	r0, 8004c64 <_vfiprintf_r+0x110>
 8004c2c:	06d1      	lsls	r1, r2, #27
 8004c2e:	bf44      	itt	mi
 8004c30:	2320      	movmi	r3, #32
 8004c32:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004c36:	0713      	lsls	r3, r2, #28
 8004c38:	bf44      	itt	mi
 8004c3a:	232b      	movmi	r3, #43	; 0x2b
 8004c3c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004c40:	f89a 3000 	ldrb.w	r3, [sl]
 8004c44:	2b2a      	cmp	r3, #42	; 0x2a
 8004c46:	d015      	beq.n	8004c74 <_vfiprintf_r+0x120>
 8004c48:	9a07      	ldr	r2, [sp, #28]
 8004c4a:	4654      	mov	r4, sl
 8004c4c:	2000      	movs	r0, #0
 8004c4e:	f04f 0c0a 	mov.w	ip, #10
 8004c52:	4621      	mov	r1, r4
 8004c54:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004c58:	3b30      	subs	r3, #48	; 0x30
 8004c5a:	2b09      	cmp	r3, #9
 8004c5c:	d94d      	bls.n	8004cfa <_vfiprintf_r+0x1a6>
 8004c5e:	b1b0      	cbz	r0, 8004c8e <_vfiprintf_r+0x13a>
 8004c60:	9207      	str	r2, [sp, #28]
 8004c62:	e014      	b.n	8004c8e <_vfiprintf_r+0x13a>
 8004c64:	eba0 0308 	sub.w	r3, r0, r8
 8004c68:	fa09 f303 	lsl.w	r3, r9, r3
 8004c6c:	4313      	orrs	r3, r2
 8004c6e:	9304      	str	r3, [sp, #16]
 8004c70:	46a2      	mov	sl, r4
 8004c72:	e7d2      	b.n	8004c1a <_vfiprintf_r+0xc6>
 8004c74:	9b03      	ldr	r3, [sp, #12]
 8004c76:	1d19      	adds	r1, r3, #4
 8004c78:	681b      	ldr	r3, [r3, #0]
 8004c7a:	9103      	str	r1, [sp, #12]
 8004c7c:	2b00      	cmp	r3, #0
 8004c7e:	bfbb      	ittet	lt
 8004c80:	425b      	neglt	r3, r3
 8004c82:	f042 0202 	orrlt.w	r2, r2, #2
 8004c86:	9307      	strge	r3, [sp, #28]
 8004c88:	9307      	strlt	r3, [sp, #28]
 8004c8a:	bfb8      	it	lt
 8004c8c:	9204      	strlt	r2, [sp, #16]
 8004c8e:	7823      	ldrb	r3, [r4, #0]
 8004c90:	2b2e      	cmp	r3, #46	; 0x2e
 8004c92:	d10c      	bne.n	8004cae <_vfiprintf_r+0x15a>
 8004c94:	7863      	ldrb	r3, [r4, #1]
 8004c96:	2b2a      	cmp	r3, #42	; 0x2a
 8004c98:	d134      	bne.n	8004d04 <_vfiprintf_r+0x1b0>
 8004c9a:	9b03      	ldr	r3, [sp, #12]
 8004c9c:	1d1a      	adds	r2, r3, #4
 8004c9e:	681b      	ldr	r3, [r3, #0]
 8004ca0:	9203      	str	r2, [sp, #12]
 8004ca2:	2b00      	cmp	r3, #0
 8004ca4:	bfb8      	it	lt
 8004ca6:	f04f 33ff 	movlt.w	r3, #4294967295
 8004caa:	3402      	adds	r4, #2
 8004cac:	9305      	str	r3, [sp, #20]
 8004cae:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8004d84 <_vfiprintf_r+0x230>
 8004cb2:	7821      	ldrb	r1, [r4, #0]
 8004cb4:	2203      	movs	r2, #3
 8004cb6:	4650      	mov	r0, sl
 8004cb8:	f7fb fa92 	bl	80001e0 <memchr>
 8004cbc:	b138      	cbz	r0, 8004cce <_vfiprintf_r+0x17a>
 8004cbe:	9b04      	ldr	r3, [sp, #16]
 8004cc0:	eba0 000a 	sub.w	r0, r0, sl
 8004cc4:	2240      	movs	r2, #64	; 0x40
 8004cc6:	4082      	lsls	r2, r0
 8004cc8:	4313      	orrs	r3, r2
 8004cca:	3401      	adds	r4, #1
 8004ccc:	9304      	str	r3, [sp, #16]
 8004cce:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004cd2:	4829      	ldr	r0, [pc, #164]	; (8004d78 <_vfiprintf_r+0x224>)
 8004cd4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004cd8:	2206      	movs	r2, #6
 8004cda:	f7fb fa81 	bl	80001e0 <memchr>
 8004cde:	2800      	cmp	r0, #0
 8004ce0:	d03f      	beq.n	8004d62 <_vfiprintf_r+0x20e>
 8004ce2:	4b26      	ldr	r3, [pc, #152]	; (8004d7c <_vfiprintf_r+0x228>)
 8004ce4:	bb1b      	cbnz	r3, 8004d2e <_vfiprintf_r+0x1da>
 8004ce6:	9b03      	ldr	r3, [sp, #12]
 8004ce8:	3307      	adds	r3, #7
 8004cea:	f023 0307 	bic.w	r3, r3, #7
 8004cee:	3308      	adds	r3, #8
 8004cf0:	9303      	str	r3, [sp, #12]
 8004cf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004cf4:	443b      	add	r3, r7
 8004cf6:	9309      	str	r3, [sp, #36]	; 0x24
 8004cf8:	e768      	b.n	8004bcc <_vfiprintf_r+0x78>
 8004cfa:	fb0c 3202 	mla	r2, ip, r2, r3
 8004cfe:	460c      	mov	r4, r1
 8004d00:	2001      	movs	r0, #1
 8004d02:	e7a6      	b.n	8004c52 <_vfiprintf_r+0xfe>
 8004d04:	2300      	movs	r3, #0
 8004d06:	3401      	adds	r4, #1
 8004d08:	9305      	str	r3, [sp, #20]
 8004d0a:	4619      	mov	r1, r3
 8004d0c:	f04f 0c0a 	mov.w	ip, #10
 8004d10:	4620      	mov	r0, r4
 8004d12:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004d16:	3a30      	subs	r2, #48	; 0x30
 8004d18:	2a09      	cmp	r2, #9
 8004d1a:	d903      	bls.n	8004d24 <_vfiprintf_r+0x1d0>
 8004d1c:	2b00      	cmp	r3, #0
 8004d1e:	d0c6      	beq.n	8004cae <_vfiprintf_r+0x15a>
 8004d20:	9105      	str	r1, [sp, #20]
 8004d22:	e7c4      	b.n	8004cae <_vfiprintf_r+0x15a>
 8004d24:	fb0c 2101 	mla	r1, ip, r1, r2
 8004d28:	4604      	mov	r4, r0
 8004d2a:	2301      	movs	r3, #1
 8004d2c:	e7f0      	b.n	8004d10 <_vfiprintf_r+0x1bc>
 8004d2e:	ab03      	add	r3, sp, #12
 8004d30:	9300      	str	r3, [sp, #0]
 8004d32:	462a      	mov	r2, r5
 8004d34:	4b12      	ldr	r3, [pc, #72]	; (8004d80 <_vfiprintf_r+0x22c>)
 8004d36:	a904      	add	r1, sp, #16
 8004d38:	4630      	mov	r0, r6
 8004d3a:	f7fc fecd 	bl	8001ad8 <_printf_float>
 8004d3e:	4607      	mov	r7, r0
 8004d40:	1c78      	adds	r0, r7, #1
 8004d42:	d1d6      	bne.n	8004cf2 <_vfiprintf_r+0x19e>
 8004d44:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8004d46:	07d9      	lsls	r1, r3, #31
 8004d48:	d405      	bmi.n	8004d56 <_vfiprintf_r+0x202>
 8004d4a:	89ab      	ldrh	r3, [r5, #12]
 8004d4c:	059a      	lsls	r2, r3, #22
 8004d4e:	d402      	bmi.n	8004d56 <_vfiprintf_r+0x202>
 8004d50:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8004d52:	f7fd fc70 	bl	8002636 <__retarget_lock_release_recursive>
 8004d56:	89ab      	ldrh	r3, [r5, #12]
 8004d58:	065b      	lsls	r3, r3, #25
 8004d5a:	f53f af1d 	bmi.w	8004b98 <_vfiprintf_r+0x44>
 8004d5e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004d60:	e71c      	b.n	8004b9c <_vfiprintf_r+0x48>
 8004d62:	ab03      	add	r3, sp, #12
 8004d64:	9300      	str	r3, [sp, #0]
 8004d66:	462a      	mov	r2, r5
 8004d68:	4b05      	ldr	r3, [pc, #20]	; (8004d80 <_vfiprintf_r+0x22c>)
 8004d6a:	a904      	add	r1, sp, #16
 8004d6c:	4630      	mov	r0, r6
 8004d6e:	f7fd f957 	bl	8002020 <_printf_i>
 8004d72:	e7e4      	b.n	8004d3e <_vfiprintf_r+0x1ea>
 8004d74:	08005314 	.word	0x08005314
 8004d78:	0800531e 	.word	0x0800531e
 8004d7c:	08001ad9 	.word	0x08001ad9
 8004d80:	08004b31 	.word	0x08004b31
 8004d84:	0800531a 	.word	0x0800531a

08004d88 <__swbuf_r>:
 8004d88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004d8a:	460e      	mov	r6, r1
 8004d8c:	4614      	mov	r4, r2
 8004d8e:	4605      	mov	r5, r0
 8004d90:	b118      	cbz	r0, 8004d9a <__swbuf_r+0x12>
 8004d92:	6a03      	ldr	r3, [r0, #32]
 8004d94:	b90b      	cbnz	r3, 8004d9a <__swbuf_r+0x12>
 8004d96:	f7fd fadf 	bl	8002358 <__sinit>
 8004d9a:	69a3      	ldr	r3, [r4, #24]
 8004d9c:	60a3      	str	r3, [r4, #8]
 8004d9e:	89a3      	ldrh	r3, [r4, #12]
 8004da0:	071a      	lsls	r2, r3, #28
 8004da2:	d525      	bpl.n	8004df0 <__swbuf_r+0x68>
 8004da4:	6923      	ldr	r3, [r4, #16]
 8004da6:	b31b      	cbz	r3, 8004df0 <__swbuf_r+0x68>
 8004da8:	6823      	ldr	r3, [r4, #0]
 8004daa:	6922      	ldr	r2, [r4, #16]
 8004dac:	1a98      	subs	r0, r3, r2
 8004dae:	6963      	ldr	r3, [r4, #20]
 8004db0:	b2f6      	uxtb	r6, r6
 8004db2:	4283      	cmp	r3, r0
 8004db4:	4637      	mov	r7, r6
 8004db6:	dc04      	bgt.n	8004dc2 <__swbuf_r+0x3a>
 8004db8:	4621      	mov	r1, r4
 8004dba:	4628      	mov	r0, r5
 8004dbc:	f7ff fc30 	bl	8004620 <_fflush_r>
 8004dc0:	b9e0      	cbnz	r0, 8004dfc <__swbuf_r+0x74>
 8004dc2:	68a3      	ldr	r3, [r4, #8]
 8004dc4:	3b01      	subs	r3, #1
 8004dc6:	60a3      	str	r3, [r4, #8]
 8004dc8:	6823      	ldr	r3, [r4, #0]
 8004dca:	1c5a      	adds	r2, r3, #1
 8004dcc:	6022      	str	r2, [r4, #0]
 8004dce:	701e      	strb	r6, [r3, #0]
 8004dd0:	6962      	ldr	r2, [r4, #20]
 8004dd2:	1c43      	adds	r3, r0, #1
 8004dd4:	429a      	cmp	r2, r3
 8004dd6:	d004      	beq.n	8004de2 <__swbuf_r+0x5a>
 8004dd8:	89a3      	ldrh	r3, [r4, #12]
 8004dda:	07db      	lsls	r3, r3, #31
 8004ddc:	d506      	bpl.n	8004dec <__swbuf_r+0x64>
 8004dde:	2e0a      	cmp	r6, #10
 8004de0:	d104      	bne.n	8004dec <__swbuf_r+0x64>
 8004de2:	4621      	mov	r1, r4
 8004de4:	4628      	mov	r0, r5
 8004de6:	f7ff fc1b 	bl	8004620 <_fflush_r>
 8004dea:	b938      	cbnz	r0, 8004dfc <__swbuf_r+0x74>
 8004dec:	4638      	mov	r0, r7
 8004dee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004df0:	4621      	mov	r1, r4
 8004df2:	4628      	mov	r0, r5
 8004df4:	f000 f806 	bl	8004e04 <__swsetup_r>
 8004df8:	2800      	cmp	r0, #0
 8004dfa:	d0d5      	beq.n	8004da8 <__swbuf_r+0x20>
 8004dfc:	f04f 37ff 	mov.w	r7, #4294967295
 8004e00:	e7f4      	b.n	8004dec <__swbuf_r+0x64>
	...

08004e04 <__swsetup_r>:
 8004e04:	b538      	push	{r3, r4, r5, lr}
 8004e06:	4b2a      	ldr	r3, [pc, #168]	; (8004eb0 <__swsetup_r+0xac>)
 8004e08:	4605      	mov	r5, r0
 8004e0a:	6818      	ldr	r0, [r3, #0]
 8004e0c:	460c      	mov	r4, r1
 8004e0e:	b118      	cbz	r0, 8004e18 <__swsetup_r+0x14>
 8004e10:	6a03      	ldr	r3, [r0, #32]
 8004e12:	b90b      	cbnz	r3, 8004e18 <__swsetup_r+0x14>
 8004e14:	f7fd faa0 	bl	8002358 <__sinit>
 8004e18:	89a3      	ldrh	r3, [r4, #12]
 8004e1a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004e1e:	0718      	lsls	r0, r3, #28
 8004e20:	d422      	bmi.n	8004e68 <__swsetup_r+0x64>
 8004e22:	06d9      	lsls	r1, r3, #27
 8004e24:	d407      	bmi.n	8004e36 <__swsetup_r+0x32>
 8004e26:	2309      	movs	r3, #9
 8004e28:	602b      	str	r3, [r5, #0]
 8004e2a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8004e2e:	81a3      	strh	r3, [r4, #12]
 8004e30:	f04f 30ff 	mov.w	r0, #4294967295
 8004e34:	e034      	b.n	8004ea0 <__swsetup_r+0x9c>
 8004e36:	0758      	lsls	r0, r3, #29
 8004e38:	d512      	bpl.n	8004e60 <__swsetup_r+0x5c>
 8004e3a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004e3c:	b141      	cbz	r1, 8004e50 <__swsetup_r+0x4c>
 8004e3e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004e42:	4299      	cmp	r1, r3
 8004e44:	d002      	beq.n	8004e4c <__swsetup_r+0x48>
 8004e46:	4628      	mov	r0, r5
 8004e48:	f7fe fa70 	bl	800332c <_free_r>
 8004e4c:	2300      	movs	r3, #0
 8004e4e:	6363      	str	r3, [r4, #52]	; 0x34
 8004e50:	89a3      	ldrh	r3, [r4, #12]
 8004e52:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8004e56:	81a3      	strh	r3, [r4, #12]
 8004e58:	2300      	movs	r3, #0
 8004e5a:	6063      	str	r3, [r4, #4]
 8004e5c:	6923      	ldr	r3, [r4, #16]
 8004e5e:	6023      	str	r3, [r4, #0]
 8004e60:	89a3      	ldrh	r3, [r4, #12]
 8004e62:	f043 0308 	orr.w	r3, r3, #8
 8004e66:	81a3      	strh	r3, [r4, #12]
 8004e68:	6923      	ldr	r3, [r4, #16]
 8004e6a:	b94b      	cbnz	r3, 8004e80 <__swsetup_r+0x7c>
 8004e6c:	89a3      	ldrh	r3, [r4, #12]
 8004e6e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8004e72:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004e76:	d003      	beq.n	8004e80 <__swsetup_r+0x7c>
 8004e78:	4621      	mov	r1, r4
 8004e7a:	4628      	mov	r0, r5
 8004e7c:	f000 f884 	bl	8004f88 <__smakebuf_r>
 8004e80:	89a0      	ldrh	r0, [r4, #12]
 8004e82:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004e86:	f010 0301 	ands.w	r3, r0, #1
 8004e8a:	d00a      	beq.n	8004ea2 <__swsetup_r+0x9e>
 8004e8c:	2300      	movs	r3, #0
 8004e8e:	60a3      	str	r3, [r4, #8]
 8004e90:	6963      	ldr	r3, [r4, #20]
 8004e92:	425b      	negs	r3, r3
 8004e94:	61a3      	str	r3, [r4, #24]
 8004e96:	6923      	ldr	r3, [r4, #16]
 8004e98:	b943      	cbnz	r3, 8004eac <__swsetup_r+0xa8>
 8004e9a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8004e9e:	d1c4      	bne.n	8004e2a <__swsetup_r+0x26>
 8004ea0:	bd38      	pop	{r3, r4, r5, pc}
 8004ea2:	0781      	lsls	r1, r0, #30
 8004ea4:	bf58      	it	pl
 8004ea6:	6963      	ldrpl	r3, [r4, #20]
 8004ea8:	60a3      	str	r3, [r4, #8]
 8004eaa:	e7f4      	b.n	8004e96 <__swsetup_r+0x92>
 8004eac:	2000      	movs	r0, #0
 8004eae:	e7f7      	b.n	8004ea0 <__swsetup_r+0x9c>
 8004eb0:	20000060 	.word	0x20000060

08004eb4 <_raise_r>:
 8004eb4:	291f      	cmp	r1, #31
 8004eb6:	b538      	push	{r3, r4, r5, lr}
 8004eb8:	4604      	mov	r4, r0
 8004eba:	460d      	mov	r5, r1
 8004ebc:	d904      	bls.n	8004ec8 <_raise_r+0x14>
 8004ebe:	2316      	movs	r3, #22
 8004ec0:	6003      	str	r3, [r0, #0]
 8004ec2:	f04f 30ff 	mov.w	r0, #4294967295
 8004ec6:	bd38      	pop	{r3, r4, r5, pc}
 8004ec8:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8004eca:	b112      	cbz	r2, 8004ed2 <_raise_r+0x1e>
 8004ecc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004ed0:	b94b      	cbnz	r3, 8004ee6 <_raise_r+0x32>
 8004ed2:	4620      	mov	r0, r4
 8004ed4:	f000 f830 	bl	8004f38 <_getpid_r>
 8004ed8:	462a      	mov	r2, r5
 8004eda:	4601      	mov	r1, r0
 8004edc:	4620      	mov	r0, r4
 8004ede:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004ee2:	f000 b817 	b.w	8004f14 <_kill_r>
 8004ee6:	2b01      	cmp	r3, #1
 8004ee8:	d00a      	beq.n	8004f00 <_raise_r+0x4c>
 8004eea:	1c59      	adds	r1, r3, #1
 8004eec:	d103      	bne.n	8004ef6 <_raise_r+0x42>
 8004eee:	2316      	movs	r3, #22
 8004ef0:	6003      	str	r3, [r0, #0]
 8004ef2:	2001      	movs	r0, #1
 8004ef4:	e7e7      	b.n	8004ec6 <_raise_r+0x12>
 8004ef6:	2400      	movs	r4, #0
 8004ef8:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8004efc:	4628      	mov	r0, r5
 8004efe:	4798      	blx	r3
 8004f00:	2000      	movs	r0, #0
 8004f02:	e7e0      	b.n	8004ec6 <_raise_r+0x12>

08004f04 <raise>:
 8004f04:	4b02      	ldr	r3, [pc, #8]	; (8004f10 <raise+0xc>)
 8004f06:	4601      	mov	r1, r0
 8004f08:	6818      	ldr	r0, [r3, #0]
 8004f0a:	f7ff bfd3 	b.w	8004eb4 <_raise_r>
 8004f0e:	bf00      	nop
 8004f10:	20000060 	.word	0x20000060

08004f14 <_kill_r>:
 8004f14:	b538      	push	{r3, r4, r5, lr}
 8004f16:	4d07      	ldr	r5, [pc, #28]	; (8004f34 <_kill_r+0x20>)
 8004f18:	2300      	movs	r3, #0
 8004f1a:	4604      	mov	r4, r0
 8004f1c:	4608      	mov	r0, r1
 8004f1e:	4611      	mov	r1, r2
 8004f20:	602b      	str	r3, [r5, #0]
 8004f22:	f7fc fbab 	bl	800167c <_kill>
 8004f26:	1c43      	adds	r3, r0, #1
 8004f28:	d102      	bne.n	8004f30 <_kill_r+0x1c>
 8004f2a:	682b      	ldr	r3, [r5, #0]
 8004f2c:	b103      	cbz	r3, 8004f30 <_kill_r+0x1c>
 8004f2e:	6023      	str	r3, [r4, #0]
 8004f30:	bd38      	pop	{r3, r4, r5, pc}
 8004f32:	bf00      	nop
 8004f34:	20000394 	.word	0x20000394

08004f38 <_getpid_r>:
 8004f38:	f7fc bb98 	b.w	800166c <_getpid>

08004f3c <__swhatbuf_r>:
 8004f3c:	b570      	push	{r4, r5, r6, lr}
 8004f3e:	460c      	mov	r4, r1
 8004f40:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004f44:	2900      	cmp	r1, #0
 8004f46:	b096      	sub	sp, #88	; 0x58
 8004f48:	4615      	mov	r5, r2
 8004f4a:	461e      	mov	r6, r3
 8004f4c:	da0d      	bge.n	8004f6a <__swhatbuf_r+0x2e>
 8004f4e:	89a3      	ldrh	r3, [r4, #12]
 8004f50:	f013 0f80 	tst.w	r3, #128	; 0x80
 8004f54:	f04f 0100 	mov.w	r1, #0
 8004f58:	bf0c      	ite	eq
 8004f5a:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8004f5e:	2340      	movne	r3, #64	; 0x40
 8004f60:	2000      	movs	r0, #0
 8004f62:	6031      	str	r1, [r6, #0]
 8004f64:	602b      	str	r3, [r5, #0]
 8004f66:	b016      	add	sp, #88	; 0x58
 8004f68:	bd70      	pop	{r4, r5, r6, pc}
 8004f6a:	466a      	mov	r2, sp
 8004f6c:	f000 f848 	bl	8005000 <_fstat_r>
 8004f70:	2800      	cmp	r0, #0
 8004f72:	dbec      	blt.n	8004f4e <__swhatbuf_r+0x12>
 8004f74:	9901      	ldr	r1, [sp, #4]
 8004f76:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8004f7a:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8004f7e:	4259      	negs	r1, r3
 8004f80:	4159      	adcs	r1, r3
 8004f82:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004f86:	e7eb      	b.n	8004f60 <__swhatbuf_r+0x24>

08004f88 <__smakebuf_r>:
 8004f88:	898b      	ldrh	r3, [r1, #12]
 8004f8a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004f8c:	079d      	lsls	r5, r3, #30
 8004f8e:	4606      	mov	r6, r0
 8004f90:	460c      	mov	r4, r1
 8004f92:	d507      	bpl.n	8004fa4 <__smakebuf_r+0x1c>
 8004f94:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8004f98:	6023      	str	r3, [r4, #0]
 8004f9a:	6123      	str	r3, [r4, #16]
 8004f9c:	2301      	movs	r3, #1
 8004f9e:	6163      	str	r3, [r4, #20]
 8004fa0:	b002      	add	sp, #8
 8004fa2:	bd70      	pop	{r4, r5, r6, pc}
 8004fa4:	ab01      	add	r3, sp, #4
 8004fa6:	466a      	mov	r2, sp
 8004fa8:	f7ff ffc8 	bl	8004f3c <__swhatbuf_r>
 8004fac:	9900      	ldr	r1, [sp, #0]
 8004fae:	4605      	mov	r5, r0
 8004fb0:	4630      	mov	r0, r6
 8004fb2:	f7fe fa2f 	bl	8003414 <_malloc_r>
 8004fb6:	b948      	cbnz	r0, 8004fcc <__smakebuf_r+0x44>
 8004fb8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004fbc:	059a      	lsls	r2, r3, #22
 8004fbe:	d4ef      	bmi.n	8004fa0 <__smakebuf_r+0x18>
 8004fc0:	f023 0303 	bic.w	r3, r3, #3
 8004fc4:	f043 0302 	orr.w	r3, r3, #2
 8004fc8:	81a3      	strh	r3, [r4, #12]
 8004fca:	e7e3      	b.n	8004f94 <__smakebuf_r+0xc>
 8004fcc:	89a3      	ldrh	r3, [r4, #12]
 8004fce:	6020      	str	r0, [r4, #0]
 8004fd0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004fd4:	81a3      	strh	r3, [r4, #12]
 8004fd6:	9b00      	ldr	r3, [sp, #0]
 8004fd8:	6163      	str	r3, [r4, #20]
 8004fda:	9b01      	ldr	r3, [sp, #4]
 8004fdc:	6120      	str	r0, [r4, #16]
 8004fde:	b15b      	cbz	r3, 8004ff8 <__smakebuf_r+0x70>
 8004fe0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004fe4:	4630      	mov	r0, r6
 8004fe6:	f000 f81d 	bl	8005024 <_isatty_r>
 8004fea:	b128      	cbz	r0, 8004ff8 <__smakebuf_r+0x70>
 8004fec:	89a3      	ldrh	r3, [r4, #12]
 8004fee:	f023 0303 	bic.w	r3, r3, #3
 8004ff2:	f043 0301 	orr.w	r3, r3, #1
 8004ff6:	81a3      	strh	r3, [r4, #12]
 8004ff8:	89a3      	ldrh	r3, [r4, #12]
 8004ffa:	431d      	orrs	r5, r3
 8004ffc:	81a5      	strh	r5, [r4, #12]
 8004ffe:	e7cf      	b.n	8004fa0 <__smakebuf_r+0x18>

08005000 <_fstat_r>:
 8005000:	b538      	push	{r3, r4, r5, lr}
 8005002:	4d07      	ldr	r5, [pc, #28]	; (8005020 <_fstat_r+0x20>)
 8005004:	2300      	movs	r3, #0
 8005006:	4604      	mov	r4, r0
 8005008:	4608      	mov	r0, r1
 800500a:	4611      	mov	r1, r2
 800500c:	602b      	str	r3, [r5, #0]
 800500e:	f7fc fb94 	bl	800173a <_fstat>
 8005012:	1c43      	adds	r3, r0, #1
 8005014:	d102      	bne.n	800501c <_fstat_r+0x1c>
 8005016:	682b      	ldr	r3, [r5, #0]
 8005018:	b103      	cbz	r3, 800501c <_fstat_r+0x1c>
 800501a:	6023      	str	r3, [r4, #0]
 800501c:	bd38      	pop	{r3, r4, r5, pc}
 800501e:	bf00      	nop
 8005020:	20000394 	.word	0x20000394

08005024 <_isatty_r>:
 8005024:	b538      	push	{r3, r4, r5, lr}
 8005026:	4d06      	ldr	r5, [pc, #24]	; (8005040 <_isatty_r+0x1c>)
 8005028:	2300      	movs	r3, #0
 800502a:	4604      	mov	r4, r0
 800502c:	4608      	mov	r0, r1
 800502e:	602b      	str	r3, [r5, #0]
 8005030:	f7fc fb93 	bl	800175a <_isatty>
 8005034:	1c43      	adds	r3, r0, #1
 8005036:	d102      	bne.n	800503e <_isatty_r+0x1a>
 8005038:	682b      	ldr	r3, [r5, #0]
 800503a:	b103      	cbz	r3, 800503e <_isatty_r+0x1a>
 800503c:	6023      	str	r3, [r4, #0]
 800503e:	bd38      	pop	{r3, r4, r5, pc}
 8005040:	20000394 	.word	0x20000394

08005044 <_init>:
 8005044:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005046:	bf00      	nop
 8005048:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800504a:	bc08      	pop	{r3}
 800504c:	469e      	mov	lr, r3
 800504e:	4770      	bx	lr

08005050 <_fini>:
 8005050:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005052:	bf00      	nop
 8005054:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005056:	bc08      	pop	{r3}
 8005058:	469e      	mov	lr, r3
 800505a:	4770      	bx	lr
